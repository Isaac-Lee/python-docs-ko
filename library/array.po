# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-08 03:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:2
msgid ":mod:`array` --- Efficient arrays of numeric values"
msgstr ":mod:`array` --- 효율적인 숫자 배열"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:11
msgid ""
"This module defines an object type which can compactly represent an array"
" of basic values: characters, integers, floating point numbers.  Arrays "
"are sequence types and behave very much like lists, except that the type "
"of objects stored in them is constrained.  The type is specified at "
"object creation time by using a :dfn:`type code`, which is a single "
"character.  The following type codes are defined:"
msgstr ""
"이 모듈은 문자, 정수, 부동 소수점 숫자와 같은 기본적인 값의 배열을 간결하게 표현할 수 있는 객체 형을 정의합니다. 배열은 "
"시퀀스 형이며 리스트와 매우 비슷하게 행동합니다만, 그곳에 저장되는 객체의 형이 제약된다는 점이 다릅니다. 형은 객체 생성 시에 "
"단일 문자인 :dfn:`형 코드(type code)`\\를 사용하여 지정됩니다. 다음 형 코드가 정의됩니다:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:19
msgid "Type code"
msgstr "형 코드"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:19
msgid "C Type"
msgstr "C 형"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:19
msgid "Python Type"
msgstr "파이썬 형"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:19
msgid "Minimum size in bytes"
msgstr "최소 크기(바이트)"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:19
msgid "Notes"
msgstr "노트"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:21
msgid "``'b'``"
msgstr "``'b'``"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:21
msgid "signed char"
msgstr "signed char"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:21
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:23
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:27
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:29
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:31
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:33
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:35
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:37
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:39
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:41
msgid "int"
msgstr "int"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:21
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:23
msgid "1"
msgstr "1"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:23
msgid "``'B'``"
msgstr "``'B'``"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:23
msgid "unsigned char"
msgstr "unsigned char"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:25
msgid "``'u'``"
msgstr "``'u'``"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:25
msgid "wchar_t"
msgstr ""

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:25
msgid "Unicode character"
msgstr "유니코드 문자"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:25
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:27
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:29
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:31
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:33
msgid "2"
msgstr "2"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:25
msgid "\\(1)"
msgstr "\\(1)"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:27
msgid "``'h'``"
msgstr "``'h'``"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:27
msgid "signed short"
msgstr "signed short"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:29
msgid "``'H'``"
msgstr "``'H'``"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:29
msgid "unsigned short"
msgstr "unsigned short"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:31
msgid "``'i'``"
msgstr "``'i'``"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:31
msgid "signed int"
msgstr "signed int"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:33
msgid "``'I'``"
msgstr "``'I'``"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:33
msgid "unsigned int"
msgstr "unsigned int"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:35
msgid "``'l'``"
msgstr "``'l'``"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:35
msgid "signed long"
msgstr "signed long"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:35
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:37
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:43
msgid "4"
msgstr "4"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:37
msgid "``'L'``"
msgstr "``'L'``"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:37
msgid "unsigned long"
msgstr "unsigned long"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:39
msgid "``'q'``"
msgstr "``'q'``"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:39
msgid "signed long long"
msgstr "signed long long"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:39
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:41
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:45
msgid "8"
msgstr "8"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:41
msgid "``'Q'``"
msgstr "``'Q'``"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:41
msgid "unsigned long long"
msgstr "unsigned long long"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:43
msgid "``'f'``"
msgstr "``'f'``"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:43
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:45
msgid "float"
msgstr "float"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:45
msgid "``'d'``"
msgstr "``'d'``"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:45
msgid "double"
msgstr "double"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:48
msgid "Notes:"
msgstr "노트:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:51
msgid "It can be 16 bits or 32 bits depending on the platform."
msgstr ""

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:53
msgid ""
"``array('u')`` now uses ``wchar_t`` as C type instead of deprecated "
"``Py_UNICODE``. This change doesn't affect to its behavior because "
"``Py_UNICODE`` is alias of ``wchar_t`` since Python 3.3."
msgstr ""

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:61
msgid ""
"The actual representation of values is determined by the machine "
"architecture (strictly speaking, by the C implementation).  The actual "
"size can be accessed through the :attr:`itemsize` attribute."
msgstr ""
"값의 실제 표현은 기계 아키텍처에 의해(엄격히 말하자면 C 구현에 의해) 결정됩니다. 실제 크기는 :attr:`itemsize` "
"어트리뷰트를 통해 액세스할 수 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:65
msgid "The module defines the following type:"
msgstr "모듈은 다음 형을 정의합니다:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:70
msgid ""
"A new array whose items are restricted by *typecode*, and initialized "
"from the optional *initializer* value, which must be a list, a :term"
":`bytes-like object`, or iterable over elements of the appropriate type."
msgstr ""
"항목이 *typecode*\\에 의해 제한되는 새 배열, 선택적인 *initializer* 값으로 초기화되는데, 리스트, "
":term:`바이트열류 객체 <bytes-like object>` 또는 적절한 형의 요소에 대한 이터러블이어야 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:75
msgid ""
"If given a list or string, the initializer is passed to the new array's "
":meth:`fromlist`, :meth:`frombytes`, or :meth:`fromunicode` method (see "
"below) to add initial items to the array.  Otherwise, the iterable "
"initializer is passed to the :meth:`extend` method."
msgstr ""
"리스트나 문자열이 주어지면, initializer는 새 배열의 :meth:`fromlist`, :meth:`frombytes` 또는"
" :meth:`fromunicode` 메서드(아래를 참조하세요)에 전달되어 배열에 초기 항목을 추가합니다. 그렇지 않으면 이터러블 "
"initializer가 :meth:`extend` 메서드에 전달됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:80
msgid ""
"Raises an :ref:`auditing event <auditing>` ``array.__new__`` with "
"arguments ``typecode``, ``initializer``."
msgstr ""
"``typecode``, ``initializer`` 인자로 :ref:`감사 이벤트(auditing event) "
"<auditing>` ``array.__new__``\\를 발생시킵니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:84
msgid "A string with all available type codes."
msgstr "사용 가능한 모든 형 코드가 있는 문자열."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:86
msgid ""
"Array objects support the ordinary sequence operations of indexing, "
"slicing, concatenation, and multiplication.  When using slice assignment,"
" the assigned value must be an array object with the same type code; in "
"all other cases, :exc:`TypeError` is raised. Array objects also implement"
" the buffer interface, and may be used wherever :term:`bytes-like objects"
" <bytes-like object>` are supported."
msgstr ""
"배열 객체는 인덱싱, 슬라이싱, 이어붙이기 및 곱셈과 같은 일반적인 시퀀스 연산을 지원합니다. 슬라이스 대입을 사용할 때, 대입되는"
" 값은 같은 형 코드의 배열 객체여야 합니다; 다른 모든 경우에는, :exc:`TypeError`\\가 발생합니다. 배열 객체는 "
"버퍼 인터페이스도 구현하며, :term:`바이트열류 객체 <bytes-like object>`\\가 지원되는 곳이면 어디에서나 "
"사용될 수 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:92
msgid "The following data items and methods are also supported:"
msgstr "다음 데이터 항목과 메서드도 지원됩니다:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:96
msgid "The typecode character used to create the array."
msgstr "배열을 만드는 데 사용된 typecode 문자."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:101
msgid "The length in bytes of one array item in the internal representation."
msgstr "내부 표현에서 하나의 배열 항목의 길이 (바이트)."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:106
msgid "Append a new item with value *x* to the end of the array."
msgstr "배열의 끝에 값 *x*\\로 새 항목을 추가합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:111
msgid ""
"Return a tuple ``(address, length)`` giving the current memory address "
"and the length in elements of the buffer used to hold array's contents.  "
"The size of the memory buffer in bytes can be computed as "
"``array.buffer_info()[1] * array.itemsize``.  This is occasionally useful"
" when working with low-level (and inherently unsafe) I/O interfaces that "
"require memory addresses, such as certain :c:func:`ioctl` operations.  "
"The returned numbers are valid as long as the array exists and no length-"
"changing operations are applied to it."
msgstr ""
"배열의 내용을 담는 데 사용된 버퍼의 현재 메모리 주소와 요소의 수로 표현한 길이를 제공하는 튜플 ``(address, "
"length)``\\를 반환합니다. 바이트 단위의 메모리 버퍼 크기는 ``array.buffer_info()[1] * "
"array.itemsize``\\로 계산할 수 있습니다. 이것은 특정 :c:func:`ioctl` 연산과 같은 메모리 주소가 필요한"
" 저수준(그리고 근본적으로 안전하지 않은) I/O 인터페이스로 작업할 때 간혹 유용합니다. 반환된 숫자는 배열이 존재하고 길이 변경"
" 연산이 적용되지 않는 한 유효합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:121
msgid ""
"When using array objects from code written in C or C++ (the only way to "
"effectively make use of this information), it makes more sense to use the"
" buffer interface supported by array objects.  This method is maintained "
"for backward compatibility and should be avoided in new code.  The buffer"
" interface is documented in :ref:`bufferobjects`."
msgstr ""
"C나 C++로 작성된 코드(이 정보를 효율적으로 사용하는 유일한 방법)에서 배열 객체를 사용할 때, 배열 객체가 지원하는 버퍼 "
"인터페이스를 사용하는 것이 좋습니다. 이 메서드는 이전 버전과의 호환성을 위해 유지되며 새 코드에서는 사용하지 않아야 합니다. 버퍼"
" 인터페이스는 :ref:`bufferobjects`\\에 설명되어 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:130
msgid ""
"\"Byteswap\" all items of the array.  This is only supported for values "
"which are 1, 2, 4, or 8 bytes in size; for other types of values, "
":exc:`RuntimeError` is raised.  It is useful when reading data from a "
"file written on a machine with a different byte order."
msgstr ""
"배열의 모든 항목을 \"바이트 스와프(byteswap)\" 합니다. 1, 2, 4 또는 8바이트 크기의 값에 대해서만 지원됩니다; "
"다른 형의 값이면 :exc:`RuntimeError`\\가 발생합니다. 바이트 순서가 다른 컴퓨터에서 작성된 파일에서 데이터를 읽을"
" 때 유용합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:138
msgid "Return the number of occurrences of *x* in the array."
msgstr "배열 내에서 *x*\\가 등장하는 횟수를 반환합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:143
msgid ""
"Append items from *iterable* to the end of the array.  If *iterable* is "
"another array, it must have *exactly* the same type code; if not, "
":exc:`TypeError` will be raised.  If *iterable* is not an array, it must "
"be iterable and its elements must be the right type to be appended to the"
" array."
msgstr ""
"*iterable*\\의 항목을 배열의 끝에 추가합니다. *iterable*\\이 다른 배열이면, *정확히* 같은 형 코드를 가져야"
" 합니다; 그렇지 않으면, :exc:`TypeError`\\가 발생합니다. *iterable*\\이 배열이 아니면, 이터러블이어야 "
"하며 요소는 배열에 추가할 올바른 형이어야 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:151
msgid ""
"Appends items from the string, interpreting the string as an array of "
"machine values (as if it had been read from a file using the "
":meth:`fromfile` method)."
msgstr ""
"문자열에서 항목을 추가합니다. 문자열을 기곗값(machine value)의 배열로 해석합니다 (마치 :meth:`fromfile` "
"메서드를 사용하여 파일에서 읽은 것처럼)."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:154
msgid ":meth:`fromstring` is renamed to :meth:`frombytes` for clarity."
msgstr ":meth:`fromstring`\\은 명확하게 하려고 :meth:`frombytes`\\로 이름을 바꿨습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:160
msgid ""
"Read *n* items (as machine values) from the :term:`file object` *f* and "
"append them to the end of the array.  If less than *n* items are "
"available, :exc:`EOFError` is raised, but the items that were available "
"are still inserted into the array. *f* must be a real built-in file "
"object; something else with a :meth:`read` method won't do."
msgstr ""
":term:`파일 객체 <file object>` *f*\\에서 (기곗값으로) *n* 항목을 읽고 배열의 끝에 추가합니다. *n* "
"미만의 항목만 사용할 수 있으면 :exc:`EOFError`\\가 발생하지만, 사용 가능한 항목은 여전히 배열에 삽입됩니다. "
"*f*\\는 실제 내장 파일 객체여야 합니다; :meth:`read` 메서드를 가진 다른 것은 작동하지 않습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:169
msgid ""
"Append items from the list.  This is equivalent to ``for x in list: "
"a.append(x)`` except that if there is a type error, the array is "
"unchanged."
msgstr ""
"리스트에서 항목을 추가합니다. 이것은 형 에러가 있으면 배열이 변경되지 않는다는 점만 제외하면 ``for x in list: "
"a.append(x)``\\와 동등합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:175
msgid ""
"Extends this array with data from the given unicode string.  The array "
"must be a type ``'u'`` array; otherwise a :exc:`ValueError` is raised.  "
"Use ``array.frombytes(unicodestring.encode(enc))`` to append Unicode data"
" to an array of some other type."
msgstr ""
"주어진 유니코드 문자열의 데이터로 이 배열을 확장합니다. 배열은 ``'u'`` 형의 배열이어야 합니다; 그렇지 않으면 "
":exc:`ValueError`\\가 발생합니다. 다른 형의 배열에 유니코드 데이터를 추가하려면 "
"``array.frombytes(unicodestring.encode(enc))``\\를 사용하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:183
msgid ""
"Return the smallest *i* such that *i* is the index of the first "
"occurrence of *x* in the array."
msgstr "*i*\\가 배열에서 *x*\\가 처음 나타나는 인덱스가 되도록 가장 작은 *i*\\를 반환합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:189
msgid ""
"Insert a new item with value *x* in the array before position *i*. "
"Negative values are treated as being relative to the end of the array."
msgstr "*i* 위치 앞에 값이 *x*\\인 새 항목을 배열에 삽입합니다. 음수 값은 배열 끝에 상대적인 값으로 처리됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:195
msgid ""
"Removes the item with the index *i* from the array and returns it. The "
"optional argument defaults to ``-1``, so that by default the last item is"
" removed and returned."
msgstr ""
"배열에서 인덱스 *i*\\에 있는 항목을 제거하고 이를 반환합니다. 선택적 인자의 기본값은 ``-1``\\이므로, 기본적으로 마지막"
" 항목이 제거되고 반환됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:202
msgid "Remove the first occurrence of *x* from the array."
msgstr "배열에서 첫 번째 *x*\\를 제거합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:207
msgid "Reverse the order of the items in the array."
msgstr "배열의 항목 순서를 뒤집습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:212
msgid ""
"Convert the array to an array of machine values and return the bytes "
"representation (the same sequence of bytes that would be written to a "
"file by the :meth:`tofile` method.)"
msgstr ""
"배열을 기곗값 배열로 변환하고 바이트열 표현(:meth:`tofile` 메서드로 파일에 기록될 바이트 시퀀스와 같습니다)을 "
"반환합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:216
msgid ":meth:`tostring` is renamed to :meth:`tobytes` for clarity."
msgstr ":meth:`tostring`\\은 명확하게 하려고 :meth:`tobytes`\\로 이름을 바꿨습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:222
msgid "Write all items (as machine values) to the :term:`file object` *f*."
msgstr "모든 항목을 (기곗값으로) :term:`파일 객체 <file object>` *f*\\에 씁니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:227
msgid "Convert the array to an ordinary list with the same items."
msgstr "배열을 같은 항목이 있는 일반 리스트로 변환합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:232
msgid ""
"Convert the array to a unicode string.  The array must be a type ``'u'`` "
"array; otherwise a :exc:`ValueError` is raised. Use "
"``array.tobytes().decode(enc)`` to obtain a unicode string from an array "
"of some other type."
msgstr ""
"배열을 유니코드 문자열로 변환합니다. 배열은 ``'u'`` 형의 배열이어야 합니다; 그렇지 않으면 "
":exc:`ValueError`\\가 발생합니다. 다른 형의 배열로부터 유니코드 문자열을 얻으려면 "
"``array.tobytes().decode(enc)``\\를 사용하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:237
msgid ""
"When an array object is printed or converted to a string, it is "
"represented as ``array(typecode, initializer)``.  The *initializer* is "
"omitted if the array is empty, otherwise it is a string if the *typecode*"
" is ``'u'``, otherwise it is a list of numbers.  The string is guaranteed"
" to be able to be converted back to an array with the same type and value"
" using :func:`eval`, so long as the :class:`~array.array` class has been "
"imported using ``from array import array``. Examples::"
msgstr ""
"배열 객체가 인쇄되거나 문자열로 변환될 때, ``array(typecode, initializer)``\\로 표현됩니다. 배열이 "
"비어 있으면 *initializer*\\가 생략되고, 그렇지 않으면 *typecode*\\가 ``'u'`` 인 경우 문자열이 되고,"
" 그렇지 않으면 숫자 리스트가 됩니다. 문자열은 :func:`eval`\\을 사용하여 같은 형과 값을 갖는 배열로 다시 변환될 수 "
"있음이 보장됩니다. 단 ``from array import array``\\를 사용하여 :class:`~array.array` "
"클래스를 임포트 한다고 가정합니다. 예::"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:254
msgid "Module :mod:`struct`"
msgstr "모듈 :mod:`struct`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:254
msgid "Packing and unpacking of heterogeneous binary data."
msgstr "이질적인(heterogeneous) 바이너리 데이터의 패킹과 언 패킹."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:258
msgid "Module :mod:`xdrlib`"
msgstr "모듈 :mod:`xdrlib`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:257
msgid ""
"Packing and unpacking of External Data Representation (XDR) data as used "
"in some remote procedure call systems."
msgstr "일부 원격 프로시저 호출 시스템에서 사용되는 XDR(External Data Representation) 데이터의 패킹과 언 패킹."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:261
msgid "`The Numerical Python Documentation <https://docs.scipy.org/doc/>`_"
msgstr "`The Numerical Python Documentation <https://docs.scipy.org/doc/>`_"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/library/array.rst:261
msgid ""
"The Numeric Python extension (NumPy) defines another array type; see "
"http://www.numpy.org/ for further information about Numerical Python."
msgstr ""
"Numeric Python 확장(NumPy)은 다른 배열형을 정의합니다; Numerical Python에 대한 더 자세한 정보는 "
"http://www.numpy.org/ 를 참조하십시오."

#~ msgid "Py_UNICODE"
#~ msgstr "Py_UNICODE"

#~ msgid ""
#~ "The ``'u'`` type code corresponds to "
#~ "Python's obsolete unicode character "
#~ "(:c:type:`Py_UNICODE` which is :c:type:`wchar_t`)."
#~ " Depending on the platform, it can"
#~ " be 16 bits or 32 bits."
#~ msgstr ""
#~ "``'u'`` 형 코드는 파이썬의 구식 유니코드 "
#~ "문자(:c:type:`Py_UNICODE`, 이것은 :c:type:`wchar_t`\\입니다)에 "
#~ "해당합니다. 플랫폼에 따라, 16비트나 32비트가 될 수"
#~ " 있습니다."

#~ msgid ""
#~ "``'u'`` will be removed together with"
#~ " the rest of the :c:type:`Py_UNICODE` "
#~ "API."
#~ msgstr "``'u'``\\는 나머지 :c:type:`Py_UNICODE` API와 함께 제거될 것입니다."

#~ msgid "Deprecated alias for :meth:`frombytes`."
#~ msgstr ":meth:`frombytes`\\의 폐지된 별칭."

#~ msgid "Deprecated alias for :meth:`tobytes`."
#~ msgstr ":meth:`tobytes`\\의 폐지된 별칭."

