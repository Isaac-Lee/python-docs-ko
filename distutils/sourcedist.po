# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-10-15 07:19+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../Doc/distutils/sourcedist.rst:5
msgid "Creating a Source Distribution"
msgstr "소스 배포판 만들기"

#: ../Doc/distutils/_setuptools_disclaimer.rst:3
msgid ""
"This document is being retained solely until the ``setuptools`` "
"documentation at "
"https://setuptools.readthedocs.io/en/latest/setuptools.html independently"
" covers all of the relevant information currently included here."
msgstr ""
"이 문서는 https://setuptools.readthedocs.io/en/latest/setuptools.html 의 "
"``setuptools`` 설명서가 현재 여기에 포함된 모든 관련 정보를 독립적으로 다루기 전까지만 보존됩니다."

#: ../Doc/distutils/sourcedist.rst:9
msgid ""
"As shown in section :ref:`distutils-simple-example`, you use the "
":command:`sdist` command to create a source distribution.  In the "
"simplest case, ::"
msgstr ""
":ref:`distutils-simple-example` 섹션에 표시된 것처럼, :command:`sdist` 명령을 사용하여 소스"
" 배포를 만듭니다. 가장 간단한 경우, ::"

#: ../Doc/distutils/sourcedist.rst:14
msgid ""
"(assuming you haven't specified any :command:`sdist` options in the setup"
" script or config file), :command:`sdist` creates the archive of the "
"default format for the current platform.  The default format is a gzip'ed"
" tar file (:file:`.tar.gz`) on Unix, and ZIP file on Windows."
msgstr ""
"(설정 스크립트나 구성 파일에 :command:`sdist` 옵션을 지정하지 않았다고 가정할 때) "
":command:`sdist`\\는 현재 플랫폼의 기본 형식의 아카이브를 만듭니다. 기본 형식은 유닉스에서는 gzip 된 tar "
"파일(:file:`.tar.gz`)이고, 윈도우에서는 ZIP 파일입니다."

#: ../Doc/distutils/sourcedist.rst:19
msgid ""
"You can specify as many formats as you like using the :option:`!--"
"formats` option, for example::"
msgstr ":option:`!--formats` 옵션을 사용하여 원하는 만큼 형식을 지정할 수 있습니다. 예를 들면::"

#: ../Doc/distutils/sourcedist.rst:24
msgid "to create a gzipped tarball and a zip file.  The available formats are:"
msgstr "은 gzip 된 tar 파일과 zip 파일을 만듭니다. 사용 가능한 형식은 다음과 같습니다:"

#: ../Doc/distutils/sourcedist.rst:27
msgid "Format"
msgstr "형식"

#: ../Doc/distutils/sourcedist.rst:27
msgid "Description"
msgstr "설명"

#: ../Doc/distutils/sourcedist.rst:27
msgid "Notes"
msgstr "노트"

#: ../Doc/distutils/sourcedist.rst:29
msgid "``zip``"
msgstr "``zip``"

#: ../Doc/distutils/sourcedist.rst:29
msgid "zip file (:file:`.zip`)"
msgstr "zip 파일 (:file:`.zip`)"

#: ../Doc/distutils/sourcedist.rst:29
msgid "(1),(3)"
msgstr "(1),(3)"

#: ../Doc/distutils/sourcedist.rst:31
msgid "``gztar``"
msgstr "``gztar``"

#: ../Doc/distutils/sourcedist.rst:31
msgid "gzip'ed tar file (:file:`.tar.gz`)"
msgstr "gzip 된 tar 파일 (:file:`.tar.gz`)"

#: ../Doc/distutils/sourcedist.rst:31
msgid "\\(2)"
msgstr "\\(2)"

#: ../Doc/distutils/sourcedist.rst:34
msgid "``bztar``"
msgstr "``bztar``"

#: ../Doc/distutils/sourcedist.rst:34
msgid "bzip2'ed tar file (:file:`.tar.bz2`)"
msgstr "bzip2 된 tar 파일 (:file:`.tar.bz2`)"

#: ../Doc/distutils/sourcedist.rst:37
msgid "``xztar``"
msgstr "``xztar``"

#: ../Doc/distutils/sourcedist.rst:37
msgid "xz'ed tar file (:file:`.tar.xz`)"
msgstr "xz 된 tar 파일 (:file:`.tar.xz`)"

#: ../Doc/distutils/sourcedist.rst:40
msgid "``ztar``"
msgstr "``ztar``"

#: ../Doc/distutils/sourcedist.rst:40
msgid "compressed tar file (:file:`.tar.Z`)"
msgstr "compress 된 tar 파일 (:file:`.tar.Z`)"

#: ../Doc/distutils/sourcedist.rst:40
msgid "\\(4)"
msgstr "\\(4)"

#: ../Doc/distutils/sourcedist.rst:43
msgid "``tar``"
msgstr "``tar``"

#: ../Doc/distutils/sourcedist.rst:43
msgid "tar file (:file:`.tar`)"
msgstr "tar 파일 (:file:`.tar`)"

#: ../Doc/distutils/sourcedist.rst:46
msgid "Added support for the ``xztar`` format."
msgstr "``xztar`` 형식에 대한 지원이 추가되었습니다."

#: ../Doc/distutils/sourcedist.rst:49
msgid "Notes:"
msgstr "노트:"

#: ../Doc/distutils/sourcedist.rst:52
msgid "default on Windows"
msgstr "윈도우의 기본값"

#: ../Doc/distutils/sourcedist.rst:55
msgid "default on Unix"
msgstr "유닉스의 기본값"

#: ../Doc/distutils/sourcedist.rst:58
msgid ""
"requires either external :program:`zip` utility or :mod:`zipfile` module "
"(part of the standard Python library since Python 1.6)"
msgstr ""
"외부 :program:`zip` 유틸리티나 :mod:`zipfile` 모듈(파이썬 1.6 이후 표준 파이썬 라이브러리의 일부)이 "
"필요합니다"

#: ../Doc/distutils/sourcedist.rst:62
msgid ""
"requires the :program:`compress` program. Notice that this format is now "
"pending for deprecation and will be removed in the future versions of "
"Python."
msgstr ""
":program:`compress` 프로그램이 필요합니다. 이 형식은 현재 폐지될 예정이며 이후 버전의 파이썬에서는 제거될 "
"예정입니다."

#: ../Doc/distutils/sourcedist.rst:65
msgid ""
"When using any ``tar`` format (``gztar``, ``bztar``, ``xztar``, ``ztar`` "
"or ``tar``), under Unix you can specify the ``owner`` and ``group`` names"
" that will be set for each member of the archive."
msgstr ""
"모든 ``tar`` 형식(``gztar``, ``bztar``, ``xztar``, ``ztar`` 또는 ``tar``)을 사용할 "
"때, 유닉스에서 각 아카이브 멤버에 대해 설정될 ``owner``\\와 ``group`` 이름을 지정할 수 있습니다."

#: ../Doc/distutils/sourcedist.rst:69
msgid "For example, if you want all files of the archive to be owned by root::"
msgstr "예를 들어, 아카이브의 모든 파일을 root가 소유하도록 하고 싶으면::"

#: ../Doc/distutils/sourcedist.rst:77
msgid "Specifying the files to distribute"
msgstr "배포할 파일 지정하기"

#: ../Doc/distutils/sourcedist.rst:79
msgid ""
"If you don't supply an explicit list of files (or instructions on how to "
"generate one), the :command:`sdist` command puts a minimal default set "
"into the source distribution:"
msgstr ""
"명시적인 파일 목록(또는 생성하는 방법에 대한 지침)을 제공하지 않으면, :command:`sdist` 명령은 최소 기본 집합을 "
"소스 배포에 넣습니다:"

#: ../Doc/distutils/sourcedist.rst:83
msgid ""
"all Python source files implied by the ``py_modules`` and ``packages`` "
"options"
msgstr "``py_modules``\\와 ``packages`` 옵션에 의해 암시된 모든 파이썬 소스 파일"

#: ../Doc/distutils/sourcedist.rst:86
msgid ""
"all C source files mentioned in the ``ext_modules`` or ``libraries`` "
"options"
msgstr "``ext_modules``\\나 ``libraries`` 옵션에 언급된 모든 C 소스 파일"

#: ../Doc/distutils/sourcedist.rst:92
msgid ""
"scripts identified by the ``scripts`` option See :ref:`distutils-"
"installing-scripts`."
msgstr "``scripts`` 옵션으로 식별된 스크립트. :ref:`distutils-installing-scripts`\\를 참조하십시오."

#: ../Doc/distutils/sourcedist.rst:95
msgid ""
"anything that looks like a test script: :file:`test/test\\*.py` "
"(currently, the Distutils don't do anything with test scripts except "
"include them in source distributions, but in the future there will be a "
"standard for testing Python module distributions)"
msgstr ""
"테스트 스크립트처럼 보이는 것: :file:`test/test\\*.py` (현재, Distutils는 소스 배포에 포함하는 것을 "
"제외하고 테스트 스크립트로 아무것도 하지 않지만, 향후에는 파이썬 모듈 배포를 테스트하기 위한 표준이 있을 것입니다)"

#: ../Doc/distutils/sourcedist.rst:100
msgid ""
"Any of the standard README files (:file:`README`, :file:`README.txt`, or "
":file:`README.rst`), :file:`setup.py` (or whatever you called your setup "
"script), and :file:`setup.cfg`."
msgstr ""
"표준 README 파일 (:file:`README`, :file:`README.txt` 또는 :file:`README.rst`), "
":file:`setup.py` (또는 여러분이 설정 스크립트라고 부르는 것) 및 :file:`setup.cfg`."

#: ../Doc/distutils/sourcedist.rst:104
msgid ""
"all files that matches the ``package_data`` metadata. See :ref"
":`distutils-installing-package-data`."
msgstr ""
"``package_data`` 메타 데이터와 일치하는 모든 파일. :ref:`distutils-installing-package-"
"data`\\를 참조하십시오."

#: ../Doc/distutils/sourcedist.rst:107
msgid ""
"all files that matches the ``data_files`` metadata. See :ref:`distutils-"
"additional-files`."
msgstr ""
"``data_files`` 메타 데이터와 일치하는 모든 파일. :ref:`distutils-additional-files`\\를 "
"참조하십시오."

#: ../Doc/distutils/sourcedist.rst:110
msgid ""
"Sometimes this is enough, but usually you will want to specify additional"
" files to distribute.  The typical way to do this is to write a *manifest"
" template*, called :file:`MANIFEST.in` by default.  The manifest template"
" is just a list of instructions for how to generate your manifest file, "
":file:`MANIFEST`, which is the exact list of files to include in your "
"source distribution.  The :command:`sdist` command processes this "
"template and generates a manifest based on its instructions and what it "
"finds in the filesystem."
msgstr ""
"때로는 이것으로 충분하지만, 일반적으로 배포할 추가 파일을 지정하려고 합니다. 이를 수행하는 일반적인 방법은 기본적으로 "
":file:`MANIFEST.in`\\이라는 *매니페스트 템플릿(manifest template)*\\을 작성하는 것입니다. "
"매니페스트 템플릿은 소스 배포에 포함할 정확한 파일 목록인 매니페스트 파일 :file:`MANIFEST`\\를 생성하는 방법에 대한"
" 지침 목록일 뿐입니다. :command:`sdist` 명령은 이 템플릿을 처리하고 해당 지침과 파일 시스템에서 찾은 내용을 "
"기반으로 매니페스트를 생성합니다."

#: ../Doc/distutils/sourcedist.rst:118
msgid ""
"If you prefer to roll your own manifest file, the format is simple: one "
"filename per line, regular files (or symlinks to them) only.  If you do "
"supply your own :file:`MANIFEST`, you must specify everything: the "
"default set of files described above does not apply in this case."
msgstr ""
"여러분 자신의 매니페스트 파일을 만드는 것을 선호한다면 형식은 간단합니다: 한 줄에 파일 이름 하나, 일반 파일 (또는 이들에 대한"
" 심볼릭 링크)만 가능합니다. 여러분 자신의 :file:`MANIFEST`\\를 제공하면, 모든 것을 지정해야 합니다: 위에서 "
"설명한 기본 파일 집합은 이 경우 적용되지 않습니다."

#: ../Doc/distutils/sourcedist.rst:123
msgid ""
"An existing generated :file:`MANIFEST` will be regenerated without "
":command:`sdist` comparing its modification time to the one of "
":file:`MANIFEST.in` or :file:`setup.py`."
msgstr ""
"기존 생성된 :file:`MANIFEST`\\는 :command:`sdist`\\가 수정 시간을 "
":file:`MANIFEST.in`\\이나 :file:`setup.py`\\와 비교하지 않고 재생성됩니다."

#: ../Doc/distutils/sourcedist.rst:128
msgid ""
":file:`MANIFEST` files start with a comment indicating they are "
"generated. Files without this comment are not overwritten or removed."
msgstr ":file:`MANIFEST` 파일은 생성되었음을 나타내는 주석으로 시작합니다. 이 주석이 없는 파일은 덮어쓰거나 제거되지 않습니다."

#: ../Doc/distutils/sourcedist.rst:132
msgid ""
":command:`sdist` will read a :file:`MANIFEST` file if no "
":file:`MANIFEST.in` exists, like it used to do."
msgstr ""
"예전처럼, :file:`MANIFEST.in`\\이 존재하지 않으면 :command:`sdist`\\는 "
":file:`MANIFEST` 파일을 읽습니다."

#: ../Doc/distutils/sourcedist.rst:136
msgid ""
":file:`README.rst` is now included in the list of distutils standard "
"READMEs."
msgstr ":file:`README.rst`\\는 이제 distutils 표준 README 목록에 포함됩니다."

#: ../Doc/distutils/sourcedist.rst:140
msgid ""
"The manifest template has one command per line, where each command "
"specifies a set of files to include or exclude from the source "
"distribution.  For an example, again we turn to the Distutils' own "
"manifest template:"
msgstr ""
"매니페스트 템플릿에는 한 줄에 하나의 명령이 있으며, 각 명령은 소스 배포에서 포함하거나 제외할 파일 집합을 지정합니다. 예를 들기"
" 위해, 다시 Distutils의 매니페스트 템플릿으로 전환합니다:"

#: ../Doc/distutils/sourcedist.rst:150
msgid ""
"The meanings should be fairly clear: include all files in the "
"distribution root matching :file:`\\*.txt`, all files anywhere under the "
":file:`examples` directory matching :file:`\\*.txt` or :file:`\\*.py`, "
"and exclude all directories matching :file:`examples/sample?/build`.  All"
" of this is done *after* the standard include set, so you can exclude "
"files from the standard set with explicit instructions in the manifest "
"template.  (Or, you can use the :option:`!--no-defaults` option to "
"disable the standard set entirely.)  There are several other commands "
"available in the manifest template mini-language; see section :ref"
":`sdist-cmd`."
msgstr ""
"의미는 꽤 명확해야 합니다: :file:`\\*.txt`\\와 일치하는 배포 루트의 모든 파일, :file:`\\*.txt`\\나 "
":file:`\\*.py`\\와 일치하는 :file:`examples` 디렉터리 아래의 모든 파일을 포함하고, "
":file:`examples/sample?/build`\\와 일치하는 모든 디렉터리를 제외합니다. 이 모든 것은 표준 포함 집합 "
"*후*\\에 수행되므로, 매니페스트 템플릿의 명시적 지침을 사용하여 표준 집합에서 파일을 제외할 수 있습니다. (또는 :option"
":`!--no-defaults` 옵션을 사용하여 표준 집합을 완전히 비활성화 할 수 있습니다.) 매니페스트 템플릿 미니 언어에서 "
"사용할 수 있는 다른 명령이 몇 가지 있습니다; 섹션 :ref:`sdist-cmd`\\을 참조하십시오."

#: ../Doc/distutils/sourcedist.rst:160
msgid ""
"The order of commands in the manifest template matters: initially, we "
"have the list of default files as described above, and each command in "
"the template adds to or removes from that list of files.  Once we have "
"fully processed the manifest template, we remove files that should not be"
" included in the source distribution:"
msgstr ""
"매니페스트 템플릿의 명령 순서는 중요합니다: 처음에는, 위에서 설명한 기본 파일 목록이 있으며 템플릿의 각 명령은 해당 파일 목록에"
" 대해 추가하거나 제거합니다. 일단 매니페스트 템플릿을 완전히 처리하면, 소스 배포에 포함되지 않아야 하는 파일을 제거합니다:"

#: ../Doc/distutils/sourcedist.rst:166
msgid "all files in the Distutils \"build\" tree (default :file:`build/`)"
msgstr "Distutils \"빌드\" 트리(기본값은 :file:`build/`)의 모든 파일"

#: ../Doc/distutils/sourcedist.rst:168
msgid ""
"all files in directories named :file:`RCS`, :file:`CVS`, :file:`.svn`, "
":file:`.hg`, :file:`.git`, :file:`.bzr` or :file:`_darcs`"
msgstr ""
":file:`RCS`, :file:`CVS`, :file:`.svn`, :file:`.hg`, :file:`.git`, "
":file:`.bzr` 또는 :file:`_darcs`\\라는 디렉터리의 모든 파일"

#: ../Doc/distutils/sourcedist.rst:171
msgid ""
"Now we have our complete list of files, which is written to the manifest "
"for future reference, and then used to build the source distribution "
"archive(s)."
msgstr ""
"이제 전체 파일 목록이 준비되어서, 이 파일은 나중에 참조할 수 있도록 매니페스트에 기록되고, 소스 배포 아카이브를 빌드하는 데 "
"사용됩니다."

#: ../Doc/distutils/sourcedist.rst:174
msgid ""
"You can disable the default set of included files with the :option"
":`!--no-defaults` option, and you can disable the standard exclude set "
"with :option:`!--no-prune`."
msgstr ""
":option:`!--no-defaults` 옵션으로 기본 포함 파일 집합을 비활성화 할 수 있으며, :option:`!--no-"
"prune`\\으로 표준 제외 집합을 비활성화 할 수 있습니다."

#: ../Doc/distutils/sourcedist.rst:178
msgid ""
"Following the Distutils' own manifest template, let's trace how the "
":command:`sdist` command builds the list of files to include in the "
"Distutils source distribution:"
msgstr ""
"Distutils의 자체 매니페스트 템플릿에 따라, :command:`sdist` 명령이 Distutils 소스 배포에 포함할 파일"
" 목록을 빌드하는 방법을 추적해 보겠습니다:"

#: ../Doc/distutils/sourcedist.rst:182
msgid ""
"include all Python source files in the :file:`distutils` and "
":file:`distutils/command` subdirectories (because packages corresponding "
"to those two directories were mentioned in the ``packages`` option in the"
" setup script---see section :ref:`setup-script`)"
msgstr ""
":file:`distutils`\\와 :file:`distutils/command` 서브 디렉터리에 있는 모든 파이썬 소스 파일을 "
"포함합니다 (두 디렉터리에 해당하는 패키지가 설정 스크립트의 ``packages`` 옵션에 언급되었기 때문입니다---섹션 :ref"
":`setup-script`\\를 참조하십시오)"

#: ../Doc/distutils/sourcedist.rst:187
msgid ""
"include :file:`README.txt`, :file:`setup.py`, and :file:`setup.cfg` "
"(standard files)"
msgstr ":file:`README.txt`, :file:`setup.py` 및 :file:`setup.cfg`\\를 포함합니다 (표준 파일)"

#: ../Doc/distutils/sourcedist.rst:190
msgid "include :file:`test/test\\*.py` (standard files)"
msgstr ":file:`test/test\\*.py`\\를 포함합니다 (표준 파일)"

#: ../Doc/distutils/sourcedist.rst:192
msgid ""
"include :file:`\\*.txt` in the distribution root (this will find "
":file:`README.txt` a second time, but such redundancies are weeded out "
"later)"
msgstr ""
"배포 루트에 있는 :file:`\\*.txt`\\를 포함합니다 (이것은 :file:`README.txt`\\를 두 번 찾을 수 "
"있지만, 나중에 이러한 중복은 제거됩니다)"

#: ../Doc/distutils/sourcedist.rst:195
msgid ""
"include anything matching :file:`\\*.txt` or :file:`\\*.py` in the sub-"
"tree under :file:`examples`,"
msgstr ""
":file:`examples` 아래의 서브 트리에 있는 :file:`\\*.txt`\\나 :file:`\\*.py`\\와 일치하는 "
"모든 것을 포함합니다."

#: ../Doc/distutils/sourcedist.rst:198
msgid ""
"exclude all files in the sub-trees starting at directories matching "
":file:`examples/sample?/build`\\ ---this may exclude files included by "
"the previous two steps, so it's important that the ``prune`` command in "
"the manifest template comes after the ``recursive-include`` command"
msgstr ""
":file:`examples/sample?/build`\\와 일치하는 디렉터리에서 시작하는 서브 트리에 있는 모든 파일을 제외합니다"
"---이것은 이전 두 단계에서 포함된 파일을 제외할 수 있어서, 매니페스트 템플릿의 ``prune`` 명령이 ``recursive-"
"include`` 명령 뒤에 오는 것이 중요합니다"

#: ../Doc/distutils/sourcedist.rst:203
msgid ""
"exclude the entire :file:`build` tree, and any :file:`RCS`, :file:`CVS`, "
":file:`.svn`, :file:`.hg`, :file:`.git`, :file:`.bzr` and :file:`_darcs` "
"directories"
msgstr ""
"전체 :file:`build` 트리와 :file:`RCS`, :file:`CVS`, :file:`.svn`, :file:`.hg`,"
" :file:`.git`, :file:`.bzr` 및 :file:`_darcs` 디렉터리를 제외합니다"

#: ../Doc/distutils/sourcedist.rst:207
msgid ""
"Just like in the setup script, file and directory names in the manifest "
"template should always be slash-separated; the Distutils will take care "
"of converting them to the standard representation on your platform. That "
"way, the manifest template is portable across operating systems."
msgstr ""
"설정 스크립트와 마찬가지로, 매니페스트 템플릿의 파일과 디렉터리 이름은 항상 슬래시로 구분해야 합니다; Distutils는 이를 "
"플랫폼의 표준 표현으로 변환합니다. 이런 방식으로, 매니페스트 템플릿은 운영 체제에 걸쳐 이식성이 있습니다."

#: ../Doc/distutils/sourcedist.rst:216
msgid "Manifest-related options"
msgstr "매니페스트 관련 옵션"

#: ../Doc/distutils/sourcedist.rst:218
msgid ""
"The normal course of operations for the :command:`sdist` command is as "
"follows:"
msgstr ":command:`sdist` 명령의 일반적인 작동 과정은 다음과 같습니다:"

#: ../Doc/distutils/sourcedist.rst:220
msgid ""
"if the manifest file (:file:`MANIFEST` by default) exists and the first "
"line does not have a comment indicating it is generated from "
":file:`MANIFEST.in`, then it is used as is, unaltered"
msgstr ""
"매니페스트 파일(기본적으로 :file:`MANIFEST`)이 존재하고 첫 번째 줄에 :file:`MANIFEST.in`\\에서 "
"생성되었음을 나타내는 주석이 없으면 그대로 사용됩니다."

#: ../Doc/distutils/sourcedist.rst:224
msgid ""
"if the manifest file doesn't exist or has been previously automatically "
"generated, read :file:`MANIFEST.in` and create the manifest"
msgstr "매니페스트 파일이 없거나 이전에 자동으로 생성되었으면, :file:`MANIFEST.in`\\을 읽고 매니페스트를 만듭니다"

#: ../Doc/distutils/sourcedist.rst:227
msgid ""
"if neither :file:`MANIFEST` nor :file:`MANIFEST.in` exist, create a "
"manifest with just the default file set"
msgstr ":file:`MANIFEST`\\도 :file:`MANIFEST.in`\\도 없으면, 기본 파일 집합만으로 매니페스트를 만듭니다"

#: ../Doc/distutils/sourcedist.rst:230
msgid ""
"use the list of files now in :file:`MANIFEST` (either just generated or "
"read in) to create the source distribution archive(s)"
msgstr "이제 (방금 생성되었거나 읽어 들인) :file:`MANIFEST`\\의 파일 목록을 사용하여 소스 배포 아카이브를 만듭니다"

#: ../Doc/distutils/sourcedist.rst:233
msgid ""
"There are a couple of options that modify this behaviour.  First, use the"
" :option:`!--no-defaults` and :option:`!--no-prune` to disable the "
"standard \"include\" and \"exclude\" sets."
msgstr ""
"이 동작을 수정하는 몇 가지 옵션이 있습니다. 먼저 :option:`!--no-defaults`\\와 :option:`!--no-"
"prune`\\을 사용하여 표준 \"include\"와 \"exclude\" 집합을 비활성화합니다."

#: ../Doc/distutils/sourcedist.rst:237
msgid ""
"Second, you might just want to (re)generate the manifest, but not create "
"a source distribution::"
msgstr "둘째, 소스 배포를 만들지 않고, 매니페스트만 (재) 생성하고 싶을 수 있습니다::"

#: ../Doc/distutils/sourcedist.rst:242
msgid ":option:`!-o` is a shortcut for :option:`!--manifest-only`."
msgstr ":option:`!-o`\\는 :option:`!--manifest-only`\\의 줄임 표현입니다."

