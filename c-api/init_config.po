# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2019, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-08 03:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:7
msgid "Python Initialization Configuration"
msgstr "파이썬 초기화 구성"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:11
msgid "Structures:"
msgstr "구조체:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:13
msgid ":c:type:`PyConfig`"
msgstr ":c:type:`PyConfig`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:14
msgid ":c:type:`PyPreConfig`"
msgstr ":c:type:`PyPreConfig`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:15
msgid ":c:type:`PyStatus`"
msgstr ":c:type:`PyStatus`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:16
msgid ":c:type:`PyWideStringList`"
msgstr ":c:type:`PyWideStringList`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:18
msgid "Functions:"
msgstr "함수:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:20
msgid ":c:func:`PyConfig_Clear`"
msgstr ":c:func:`PyConfig_Clear`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:21
msgid ":c:func:`PyConfig_InitIsolatedConfig`"
msgstr ":c:func:`PyConfig_InitIsolatedConfig`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:22
msgid ":c:func:`PyConfig_InitPythonConfig`"
msgstr ":c:func:`PyConfig_InitPythonConfig`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:23
msgid ":c:func:`PyConfig_Read`"
msgstr ":c:func:`PyConfig_Read`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:24
msgid ":c:func:`PyConfig_SetArgv`"
msgstr ":c:func:`PyConfig_SetArgv`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:25
msgid ":c:func:`PyConfig_SetBytesArgv`"
msgstr ":c:func:`PyConfig_SetBytesArgv`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:26
msgid ":c:func:`PyConfig_SetBytesString`"
msgstr ":c:func:`PyConfig_SetBytesString`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:27
msgid ":c:func:`PyConfig_SetString`"
msgstr ":c:func:`PyConfig_SetString`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:28
msgid ":c:func:`PyConfig_SetWideStringList`"
msgstr ":c:func:`PyConfig_SetWideStringList`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:29
msgid ":c:func:`PyPreConfig_InitIsolatedConfig`"
msgstr ":c:func:`PyPreConfig_InitIsolatedConfig`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:30
msgid ":c:func:`PyPreConfig_InitPythonConfig`"
msgstr ":c:func:`PyPreConfig_InitPythonConfig`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:31
msgid ":c:func:`PyStatus_Error`"
msgstr ":c:func:`PyStatus_Error`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:32
msgid ":c:func:`PyStatus_Exception`"
msgstr ":c:func:`PyStatus_Exception`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:33
msgid ":c:func:`PyStatus_Exit`"
msgstr ":c:func:`PyStatus_Exit`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:34
msgid ":c:func:`PyStatus_IsError`"
msgstr ":c:func:`PyStatus_IsError`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:35
msgid ":c:func:`PyStatus_IsExit`"
msgstr ":c:func:`PyStatus_IsExit`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:36
msgid ":c:func:`PyStatus_NoMemory`"
msgstr ":c:func:`PyStatus_NoMemory`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:37
msgid ":c:func:`PyStatus_Ok`"
msgstr ":c:func:`PyStatus_Ok`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:38
msgid ":c:func:`PyWideStringList_Append`"
msgstr ":c:func:`PyWideStringList_Append`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:39
msgid ":c:func:`PyWideStringList_Insert`"
msgstr ":c:func:`PyWideStringList_Insert`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:40
msgid ":c:func:`Py_ExitStatusException`"
msgstr ":c:func:`Py_ExitStatusException`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:41
msgid ":c:func:`Py_InitializeFromConfig`"
msgstr ":c:func:`Py_InitializeFromConfig`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:42
msgid ":c:func:`Py_PreInitialize`"
msgstr ":c:func:`Py_PreInitialize`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:43
msgid ":c:func:`Py_PreInitializeFromArgs`"
msgstr ":c:func:`Py_PreInitializeFromArgs`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:44
msgid ":c:func:`Py_PreInitializeFromBytesArgs`"
msgstr ":c:func:`Py_PreInitializeFromBytesArgs`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:45
msgid ":c:func:`Py_RunMain`"
msgstr ":c:func:`Py_RunMain`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:46
#, fuzzy
msgid ":c:func:`Py_GetArgcArgv`"
msgstr ":c:func:`PyConfig_SetArgv`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:48
msgid ""
"The preconfiguration (``PyPreConfig`` type) is stored in "
"``_PyRuntime.preconfig`` and the configuration (``PyConfig`` type) is "
"stored in ``PyInterpreterState.config``."
msgstr ""
"사전 구성(``PyPreConfig`` 형)은 ``_PyRuntime.preconfig``\\에 저장되고 "
"구성(``PyConfig`` 형)은 ``PyInterpreterState.config``\\에 저장됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:52
msgid ""
"See also :ref:`Initialization, Finalization, and Threads "
"<initialization>`."
msgstr ":ref:`초기화, 파이널리제이션 및 스레드 <initialization>`\\도 참조하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:55
msgid ":pep:`587` \"Python Initialization Configuration\"."
msgstr ":pep:`587` \"파이썬 초기화 구성\"."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:59
msgid "PyWideStringList"
msgstr "PyWideStringList"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:63
msgid "List of ``wchar_t*`` strings."
msgstr "``wchar_t*`` 문자열의 리스트."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:65
msgid ""
"If *length* is non-zero, *items* must be non-``NULL`` and all strings "
"must be non-``NULL``."
msgstr ""
"*length*\\가 0이 아니면, *items*\\는 ``NULL``\\이 아니어야 하고 모든 문자열은 ``NULL``\\이 "
"아니어야 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:68
msgid "Methods:"
msgstr "메서드:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:72
msgid "Append *item* to *list*."
msgstr "*item*\\을 *list*\\에 추가합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:74
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:85
msgid "Python must be preinitialized to call this function."
msgstr "이 함수를 호출하려면 파이썬을 사전 초기화해야 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:78
msgid "Insert *item* into *list* at *index*."
msgstr "*item*\\을 *list*\\의 *index*\\에 삽입합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:80
msgid ""
"If *index* is greater than or equal to *list* length, append *item* to "
"*list*."
msgstr "*index*\\가 *list* 길이보다 크거나 같으면, *item*\\을 *list*\\에 추가(append)합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:83
msgid "*index* must be greater than or equal to 0."
msgstr "*index*\\는 0보다 크거나 같아야 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:87
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:107
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:210
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:417
msgid "Structure fields:"
msgstr "구조체 필드:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:91
msgid "List length."
msgstr "리스트 길이."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:95
msgid "List items."
msgstr "리스트 항목들."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:98
msgid "PyStatus"
msgstr "PyStatus"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:102
msgid ""
"Structure to store an initialization function status: success, error or "
"exit."
msgstr "초기화 함수 상태를 저장하는 구조체: 성공, 에러 또는 종료."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:105
msgid "For an error, it can store the C function name which created the error."
msgstr "에러의 경우, 에러를 만든 C 함수 이름을 저장할 수 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:111
msgid "Exit code. Argument passed to ``exit()``."
msgstr "종료 코드. ``exit()``\\에 전달된 인자."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:115
msgid "Error message."
msgstr "에러 메시지."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:119
msgid "Name of the function which created an error, can be ``NULL``."
msgstr "에러를 만든 함수의 이름, ``NULL``\\일 수 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:121
msgid "Functions to create a status:"
msgstr "상태를 만드는 함수:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:125
msgid "Success."
msgstr "성공."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:129
msgid "Initialization error with a message."
msgstr "메시지가 포함된 초기화 에러."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:133
msgid "Memory allocation failure (out of memory)."
msgstr "메모리 할당 실패 (메모리 부족)."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:137
msgid "Exit Python with the specified exit code."
msgstr "지정된 종료 코드로 파이썬을 종료합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:139
msgid "Functions to handle a status:"
msgstr "상태를 처리하는 함수:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:143
msgid ""
"Is the status an error or an exit? If true, the exception must be "
"handled; by calling :c:func:`Py_ExitStatusException` for example."
msgstr ""
"상태가 에러입니까? 아니면 종료입니까? 참이면, 예외를 처리해야 합니다; 예를 들어 "
":c:func:`Py_ExitStatusException` 을 호출하여."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:148
msgid "Is the result an error?"
msgstr "결과가 에러입니까?"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:152
msgid "Is the result an exit?"
msgstr "결과가 종료입니까?"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:156
msgid ""
"Call ``exit(exitcode)`` if *status* is an exit. Print the error message "
"and exit with a non-zero exit code if *status* is an error.  Must only be"
" called if ``PyStatus_Exception(status)`` is non-zero."
msgstr ""
"*status*\\가 종료이면 ``exit(exitcode)``\\를 호출합니다. *status*\\가 에러이면 에러 메시지를 "
"인쇄하고 0이 아닌 종료 코드로 종료합니다. ``PyStatus_Exception(status)``\\가 0이 아닐 때만 호출해야 "
"합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:161
msgid ""
"Internally, Python uses macros which set ``PyStatus.func``, whereas "
"functions to create a status set ``func`` to ``NULL``."
msgstr ""
"내부적으로, 파이썬은 ``PyStatus.func``\\를 설정하는 데는 매크로를 사용하는 반면, ``func``\\가 "
"``NULL``\\로 설정된 상태를 만드는 데는 함수를 사용합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:164
msgid "Example::"
msgstr "예::"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:188
msgid "PyPreConfig"
msgstr "PyPreConfig"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:192
msgid "Structure used to preinitialize Python:"
msgstr "파이썬을 사전 초기화하는 데 사용되는 구조체:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:194
msgid "Set the Python memory allocator"
msgstr "파이썬 메모리 할당자를 설정합니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:195
msgid "Configure the LC_CTYPE locale"
msgstr "LC_CTYPE 로케일을 구성합니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:196
msgid "Set the UTF-8 mode"
msgstr "UTF-8 모드를 설정합니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:198
msgid "Function to initialize a preconfiguration:"
msgstr "사전 구성을 초기화하는 함수:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:202
msgid ""
"Initialize the preconfiguration with :ref:`Python Configuration <init-"
"python-config>`."
msgstr ":ref:`파이썬 구성 <init-python-config>`\\으로 사전 구성을 초기화합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:207
msgid ""
"Initialize the preconfiguration with :ref:`Isolated Configuration <init-"
"isolated-conf>`."
msgstr ":ref:`격리된 구성 <init-isolated-conf>`\\으로 사전 구성을 초기화합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:214
msgid "Name of the memory allocator:"
msgstr "메모리 할당자의 이름:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:216
msgid ""
"``PYMEM_ALLOCATOR_NOT_SET`` (``0``): don't change memory allocators (use "
"defaults)"
msgstr "``PYMEM_ALLOCATOR_NOT_SET`` (``0``): 메모리 할당자를 변경하지 않습니다 (기본값을 사용합니다)"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:218
msgid "``PYMEM_ALLOCATOR_DEFAULT`` (``1``): default memory allocators"
msgstr "``PYMEM_ALLOCATOR_DEFAULT`` (``1``): 기본 메모리 할당자"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:219
msgid ""
"``PYMEM_ALLOCATOR_DEBUG`` (``2``): default memory allocators with debug "
"hooks"
msgstr "``PYMEM_ALLOCATOR_DEBUG`` (``2``): 디버그 훅이 있는 기본 메모리 할당자"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:221
msgid "``PYMEM_ALLOCATOR_MALLOC`` (``3``): force usage of ``malloc()``"
msgstr "``PYMEM_ALLOCATOR_MALLOC`` (``3``): ``malloc()``\\의 사용을 강제합니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:222
msgid ""
"``PYMEM_ALLOCATOR_MALLOC_DEBUG`` (``4``): force usage of ``malloc()`` "
"with debug hooks"
msgstr ""
"``PYMEM_ALLOCATOR_MALLOC_DEBUG`` (``4``): 디버그 훅이 있는 ``malloc()``\\의 사용을 "
"강제합니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:224
msgid ""
"``PYMEM_ALLOCATOR_PYMALLOC`` (``5``): :ref:`Python pymalloc memory "
"allocator <pymalloc>`"
msgstr ""
"``PYMEM_ALLOCATOR_PYMALLOC`` (``5``): :ref:`파이썬 pymalloc 메모리 할당자 "
"<pymalloc>`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:226
msgid ""
"``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` (``6``): :ref:`Python pymalloc memory "
"allocator <pymalloc>` with debug hooks"
msgstr ""
"``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` (``6``): 디버그 훅이 있는 :ref:`파이썬 pymalloc "
"메모리 할당자 <pymalloc>`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:229
msgid ""
"``PYMEM_ALLOCATOR_PYMALLOC`` and ``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` are "
"not supported if Python is configured using ``--without-pymalloc``"
msgstr ""
"파이썬이 ``--without-pymalloc``\\을 사용하여 구성되면 ``PYMEM_ALLOCATOR_PYMALLOC``\\과 "
"``PYMEM_ALLOCATOR_PYMALLOC_DEBUG``\\은 지원되지 않습니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:232
msgid "See :ref:`Memory Management <memory>`."
msgstr ":ref:`메모리 관리 <memory>`\\를 참조하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:236
msgid ""
"Set the LC_CTYPE locale to the user preferred locale? If equals to 0, set"
" :c:member:`coerce_c_locale` and :c:member:`coerce_c_locale_warn` to 0."
msgstr ""
"LC_CTYPE 로케일을 사용자 선호 로케일로 설정합니까?? 0과 같으면, :c:member:`coerce_c_locale`\\과 "
":c:member:`coerce_c_locale_warn`\\을 0으로 설정합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:241
msgid ""
"If equals to 2, coerce the C locale; if equals to 1, read the LC_CTYPE "
"locale to decide if it should be coerced."
msgstr "2와 같으면, C 로케일을 강제합니다; 1과 같으면, LC_CTYPE 로케일을 읽고 강제할지 결정합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:246
msgid "If non-zero, emit a warning if the C locale is coerced."
msgstr "0이 아니면, C 로케일이 강제될 때 경고가 발생합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:250
msgid "See :c:member:`PyConfig.dev_mode`."
msgstr ":c:member:`PyConfig.dev_mode`\\를 참조하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:254
msgid "See :c:member:`PyConfig.isolated`."
msgstr ":c:member:`PyConfig.isolated`\\를 참조하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:258
msgid ""
"If non-zero, disable UTF-8 Mode, set the Python filesystem encoding to "
"``mbcs``, set the filesystem error handler to ``replace``."
msgstr ""
"0이 아니면, UTF-8 모드를 비활성화하고, 파이썬 파일 시스템 인코딩을 ``mbcs``\\로 설정하고, 파일 시스템 에러 "
"처리기를 ``replace``\\로 설정합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:261
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:555
msgid ""
"Only available on Windows. ``#ifdef MS_WINDOWS`` macro can be used for "
"Windows specific code."
msgstr "윈도우에서만 사용 가능합니다. ``#ifdef MS_WINDOWS`` 매크로는 윈도우 특정 코드에 사용할 수 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:266
msgid ""
"If non-zero, :c:func:`Py_PreInitializeFromArgs` and "
":c:func:`Py_PreInitializeFromBytesArgs` parse their ``argv`` argument the"
" same way the regular Python parses command line arguments: see "
":ref:`Command Line Arguments <using-on-cmdline>`."
msgstr ""
"0이 아니면, :c:func:`Py_PreInitializeFromArgs`\\와 "
":c:func:`Py_PreInitializeFromBytesArgs`\\는 일반 파이썬이 명령 줄 인자를 구문 분석하는 것과 같은"
" 방식으로 ``argv`` 인자를 구문 분석합니다. :ref:`명령 줄 인자 <using-on-cmdline>`\\를 참조하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:273
msgid "See :c:member:`PyConfig.use_environment`."
msgstr ":c:member:`PyConfig.use_environment`\\를 참조하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:277
msgid "If non-zero, enable the UTF-8 mode."
msgstr "0이 아니면, UTF-8 모드를 활성화합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:280
msgid "Preinitialization with PyPreConfig"
msgstr "PyPreConfig를 사용한 사전 초기화"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:282
msgid "Functions to preinitialize Python:"
msgstr "파이썬을 사전 초기화하는 함수:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:286
msgid "Preinitialize Python from *preconfig* preconfiguration."
msgstr "*preconfig* 사전 구성에서 파이썬을 사전 초기화합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:290
msgid ""
"Preinitialize Python from *preconfig* preconfiguration and command line "
"arguments (bytes strings)."
msgstr "*preconfig* 사전 구성과 명령 줄 인자(바이트 문자열)에서 파이썬을 사전 초기화합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:295
msgid ""
"Preinitialize Python from *preconfig* preconfiguration and command line "
"arguments (wide strings)."
msgstr "*preconfig* 사전 구성과 명령 줄 인자(와이드 문자열)에서 파이썬을 사전 초기화합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:298
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:730
msgid ""
"The caller is responsible to handle exceptions (error or exit) using "
":c:func:`PyStatus_Exception` and :c:func:`Py_ExitStatusException`."
msgstr ""
"호출자는 :c:func:`PyStatus_Exception`\\과 :c:func:`Py_ExitStatusException` 을 "
"사용하여 예외(에러나 종료)를 처리해야 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:301
msgid ""
"For :ref:`Python Configuration <init-python-config>` "
"(:c:func:`PyPreConfig_InitPythonConfig`), if Python is initialized with "
"command line arguments, the command line arguments must also be passed to"
" preinitialize Python, since they have an effect on the pre-configuration"
" like encodings. For example, the :option:`-X utf8 <-X>` command line "
"option enables the UTF-8 Mode."
msgstr ""
":ref:`파이썬 구성 <init-python-"
"config>`\\(:c:func:`PyPreConfig_InitPythonConfig`)의 경우, 명령 줄 인자로 파이썬을 "
"초기화하면, 인코딩과 같은 사전 구성에 영향을 주기 때문에, 파이썬을 사전 구성하기 위해 명령 줄 인자도 전달되어야 합니다. 예를 "
"들어, :option:`-X utf8 <-X>` 명령 줄 옵션은 UTF-8 모드를 활성화합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:308
msgid ""
"``PyMem_SetAllocator()`` can be called after :c:func:`Py_PreInitialize` "
"and before :c:func:`Py_InitializeFromConfig` to install a custom memory "
"allocator. It can be called before :c:func:`Py_PreInitialize` if "
":c:member:`PyPreConfig.allocator` is set to ``PYMEM_ALLOCATOR_NOT_SET``."
msgstr ""
"``PyMem_SetAllocator()``\\는 :c:func:`Py_PreInitialize` 이후에 "
":c:func:`Py_InitializeFromConfig` 이전에 호출하여 사용자 정의 메모리 할당자를 설치할 수 있습니다. "
":c:member:`PyPreConfig.allocator`\\가 ``PYMEM_ALLOCATOR_NOT_SET``\\으로 설정되면"
" :c:func:`Py_PreInitialize` 전에 호출할 수 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:313
msgid ""
"Python memory allocation functions like :c:func:`PyMem_RawMalloc` must "
"not be used before Python preinitialization, whereas calling directly "
"``malloc()`` and ``free()`` is always safe. :c:func:`Py_DecodeLocale` "
"must not be called before the preinitialization."
msgstr ""
":c:func:`PyMem_RawMalloc`\\과 같은 파이썬 메모리 할당 함수는 파이썬 사전 초기화 전에 사용해서는 안 되지만,"
" ``malloc()``\\과 ``free()``\\를 직접 호출하는 것은 항상 안전합니다. 사전 초기화 전에 "
":c:func:`Py_DecodeLocale`\\을 호출하면 안 됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:318
msgid "Example using the preinitialization to enable the UTF-8 Mode::"
msgstr "UTF-8 모드를 활성화하기 위해 사전 초기화를 사용하는 예::"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:339
msgid "PyConfig"
msgstr "PyConfig"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:343
msgid "Structure containing most parameters to configure Python."
msgstr "파이썬을 구성하기 위한 대부분의 파라미터를 포함하는 구조체."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:345
msgid "Structure methods:"
msgstr "구조체 메서드:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:349
msgid ""
"Initialize configuration with :ref:`Python Configuration <init-python-"
"config>`."
msgstr ":ref:`파이썬 구성 <init-python-config>`\\으로 구성을 초기화합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:354
msgid ""
"Initialize configuration with :ref:`Isolated Configuration <init-"
"isolated-conf>`."
msgstr ":ref:`격리된 구성 <init-isolated-conf>`\\으로 구성을 초기화합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:359
msgid "Copy the wide character string *str* into ``*config_str``."
msgstr "와이드 문자열 *str*\\을 ``*config_str``\\로 복사합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:361
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:367
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:373
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:379
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:385
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:393
msgid "Preinitialize Python if needed."
msgstr "필요하면 파이썬을 사전 초기화합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:365
msgid ""
"Decode *str* using ``Py_DecodeLocale()`` and set the result into "
"``*config_str``."
msgstr "``Py_DecodeLocale()``\\을 사용하여 *str*\\을 디코딩하고 결과를 ``*config_str``\\에 설정합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:371
msgid "Set command line arguments from wide character strings."
msgstr "와이드 문자열로 명령 줄 인자를 설정합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:377
msgid "Set command line arguments: decode bytes using :c:func:`Py_DecodeLocale`."
msgstr "명령 줄 인자를 설정합니다: :c:func:`Py_DecodeLocale`\\를 사용하여 바이트열을 디코딩합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:383
msgid "Set the list of wide strings *list* to *length* and *items*."
msgstr "와이드 문자열 리스트 *list*\\를 *length*\\와 *items*\\로 설정합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:389
msgid "Read all Python configuration."
msgstr "모든 파이썬 구성을 읽습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:391
msgid "Fields which are already initialized are left unchanged."
msgstr "이미 초기화된 필드는 변경되지 않습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:397
msgid "Release configuration memory."
msgstr "구성 메모리를 해제합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:399
msgid ""
"Most ``PyConfig`` methods preinitialize Python if needed. In that case, "
"the Python preinitialization configuration in based on the "
":c:type:`PyConfig`. If configuration fields which are in common with "
":c:type:`PyPreConfig` are tuned, they must be set before calling a "
":c:type:`PyConfig` method:"
msgstr ""
"대부분의 ``PyConfig`` 메서드는 필요하면 파이썬을 사전 초기화합니다. 이 경우, :c:type:`PyConfig`\\를 "
"기반으로 하는 파이썬 사전 초기화 구성입니다. :c:type:`PyPreConfig`\\와 공통인 구성 필드가 조정되면, "
":c:type:`PyConfig` 메서드를 호출하기 전에 설정해야 합니다:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:404
msgid ":c:member:`~PyConfig.dev_mode`"
msgstr ":c:member:`~PyConfig.dev_mode`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:405
msgid ":c:member:`~PyConfig.isolated`"
msgstr ":c:member:`~PyConfig.isolated`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:406
msgid ":c:member:`~PyConfig.parse_argv`"
msgstr ":c:member:`~PyConfig.parse_argv`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:407
msgid ":c:member:`~PyConfig.use_environment`"
msgstr ":c:member:`~PyConfig.use_environment`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:409
msgid ""
"Moreover, if :c:func:`PyConfig_SetArgv` or "
":c:func:`PyConfig_SetBytesArgv` is used, this method must be called "
"first, before other methods, since the preinitialization configuration "
"depends on command line arguments (if :c:member:`parse_argv` is non-"
"zero)."
msgstr ""
"또한, :c:func:`PyConfig_SetArgv`\\나 :c:func:`PyConfig_SetBytesArgv`\\가 "
"사용되면, 사전 초기화 구성이 명령 줄 인자 (:c:member:`parse_argv`\\가 0이 아니면)에 의존하기 때문에 다른 "
"메서드보다 먼저 이 메서드를 호출해야 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:414
msgid ""
"The caller of these methods is responsible to handle exceptions (error or"
" exit) using ``PyStatus_Exception()`` and ``Py_ExitStatusException()``."
msgstr ""
"이 메서드의 호출자는 ``PyStatus_Exception()``\\과 ``Py_ExitStatusException()`` 을 "
"사용하여 예외(에러나 종료)를 처리해야 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:421
msgid ""
"Command line arguments, :data:`sys.argv`. See "
":c:member:`~PyConfig.parse_argv` to parse :c:member:`~PyConfig.argv` the "
"same way the regular Python parses Python command line arguments. If "
":c:member:`~PyConfig.argv` is empty, an empty string is added to ensure "
"that :data:`sys.argv` always exists and is never empty."
msgstr ""
"명령 줄 인자, :data:`sys.argv`. 일반 파이썬이 파이썬 명령 줄 인자를 구문 분석하는 것과 같은 방식으로 "
":c:member:`~PyConfig.argv`\\를 구문 분석하려면 "
":c:member:`~PyConfig.parse_argv`\\를 참조하십시오. :c:member:`~PyConfig.argv`\\가"
" 비어 있으면, 빈 문자열이 추가되어 :data:`sys.argv`\\가 항상 존재하고 절대로 비어 있지 않도록 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:429
msgid ":data:`sys.base_exec_prefix`."
msgstr ":data:`sys.base_exec_prefix`."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:433
msgid ""
":data:`sys._base_executable`: ``__PYVENV_LAUNCHER__`` environment "
"variable value, or copy of :c:member:`PyConfig.executable`."
msgstr ""
":data:`sys._base_executable`: ``__PYVENV_LAUNCHER__`` 환경 변숫값, 또는 "
":c:member:`PyConfig.executable`\\의 사본."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:438
msgid ":data:`sys.base_prefix`."
msgstr ":data:`sys.base_prefix`."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:442
msgid ""
":data:`sys.platlibdir`: platform library directory name, set at configure"
" time by ``--with-platlibdir``, overrideable by the ``PYTHONPLATLIBDIR`` "
"environment variable."
msgstr ""

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:450
msgid ""
"If equals to 0, enable unbuffered mode, making the stdout and stderr "
"streams unbuffered."
msgstr "0과 같으면, 버퍼링 되지 않는 모드를 활성화하여, stdout과 stderr 스트림을 버퍼링하지 않도록 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:453
msgid "stdin is always opened in buffered mode."
msgstr "stdin은 항상 버퍼링 모드로 열립니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:457
msgid ""
"If equals to 1, issue a warning when comparing :class:`bytes` or "
":class:`bytearray` with :class:`str`, or comparing :class:`bytes` with "
":class:`int`. If equal or greater to 2, raise a :exc:`BytesWarning` "
"exception."
msgstr ""
"1과 같으면, :class:`bytes`\\나 :class:`bytearray`\\를 :class:`str`\\와 비교하거나, 또는"
" :class:`bytes`\\를 :class:`int`\\와 비교할 때 경고를 발행합니다. 2 이상이면, "
":exc:`BytesWarning` 예외를 발생시킵니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:464
msgid ""
"Control the validation behavior of hash-based ``.pyc`` files (see "
":pep:`552`): :option:`--check-hash-based-pycs` command line option value."
msgstr ""
"해시 기반 ``.pyc`` 파일의 유효성 검증 동작을 제어합니다 (:pep:`552`\\를 참조하십시오): :option"
":`--check-hash-based-pycs` 명령 줄 옵션 값."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:467
msgid "Valid values: ``always``, ``never`` and ``default``."
msgstr "유효한 값: ``always``, ``never`` 및 ``default``."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:469
msgid "The default value is: ``default``."
msgstr "기본값은 ``default``\\입니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:473
msgid ""
"If non-zero, configure C standard streams (``stdio``, ``stdout``, "
"``stdout``). For example, set their mode to ``O_BINARY`` on Windows."
msgstr ""
"0이 아니면, C 표준 스트림(``stdio``, ``stdout``, ``stdout``)을 구성합니다. 예를 들어, 윈도우에서 "
"해당 모드를 ``O_BINARY``\\로 설정합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:478
msgid "If non-zero, enable the :ref:`Python Development Mode <devmode>`."
msgstr ""

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:482
msgid "If non-zero, dump all objects which are still alive at exit."
msgstr "0이 아니면, 종료 시 여전히 활성 상태인 모든 객체를 덤프합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:484
msgid "``Py_TRACE_REFS`` macro must be defined in build."
msgstr ""

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:488
msgid ":data:`sys.exec_prefix`."
msgstr ":data:`sys.exec_prefix`."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:492
msgid ":data:`sys.executable`."
msgstr ":data:`sys.executable`."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:496
msgid "If non-zero, call :func:`faulthandler.enable` at startup."
msgstr "0이 아니면, 시작 시 :func:`faulthandler.enable`\\을 호출합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:500
msgid "Filesystem encoding, :func:`sys.getfilesystemencoding`."
msgstr "파일 시스템 인코딩, :func:`sys.getfilesystemencoding`."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:504
msgid "Filesystem encoding errors, :func:`sys.getfilesystemencodeerrors`."
msgstr "파일 시스템 인코딩 에러, :func:`sys.getfilesystemencodeerrors`."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:509
msgid "Randomized hash function seed."
msgstr "무작위 해시 함수 시드."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:511
msgid ""
"If :c:member:`~PyConfig.use_hash_seed` is zero, a seed is chosen randomly"
" at Pythonstartup, and :c:member:`~PyConfig.hash_seed` is ignored."
msgstr ""
":c:member:`~PyConfig.use_hash_seed`\\가 0이면, 파이썬 시작 시 시드가 무작위로 선택되고, "
":c:member:`~PyConfig.hash_seed`\\는 무시됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:516
msgid "Python home directory."
msgstr "파이썬 홈 디렉터리."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:518
msgid ""
"Initialized from :envvar:`PYTHONHOME` environment variable value by "
"default."
msgstr "기본적으로 :envvar:`PYTHONHOME` 환경 변숫값에서 초기화됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:523
msgid "If non-zero, profile import time."
msgstr "0이 아니면, 임포트 시간을 프로파일 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:527
msgid "Enter interactive mode after executing a script or a command."
msgstr "스크립트나 명령을 실행한 후 대화식 모드로 들어갑니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:531
msgid "Install signal handlers?"
msgstr "시그널 처리기를 설치합니까?"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:535
msgid "Interactive mode."
msgstr "대화식 모드."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:539
msgid "If greater than 0, enable isolated mode:"
msgstr "0보다 크면, 격리 모드를 활성화합니다:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:541
msgid ""
":data:`sys.path` contains neither the script's directory (computed from "
"``argv[0]`` or the current directory) nor the user's site-packages "
"directory."
msgstr ""
":data:`sys.path`\\에는 스크립트 디렉터리(``argv[0]``\\이나 현재 디렉터리에서 계산됩니다)도 사용자의 "
"site-packages 디렉터리도 없습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:544
msgid ""
"Python REPL doesn't import :mod:`readline` nor enable default readline "
"configuration on interactive prompts."
msgstr ""
"파이썬 REPL은 대화식 프롬프트에서 :mod:`readline`\\을 임포트 하지도 기본 readline 구성을 활성화하지도 "
"않습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:546
msgid ""
"Set :c:member:`~PyConfig.use_environment` and "
":c:member:`~PyConfig.user_site_directory` to 0."
msgstr ""
":c:member:`~PyConfig.use_environment`\\와 "
":c:member:`~PyConfig.user_site_directory`\\를 0으로 설정합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:551
msgid ""
"If non-zero, use :class:`io.FileIO` instead of "
":class:`io.WindowsConsoleIO` for :data:`sys.stdin`, :data:`sys.stdout` "
"and :data:`sys.stderr`."
msgstr ""
"0이 아니면, :data:`sys.stdin`, :data:`sys.stdout` 및 :data:`sys.stderr`\\에 "
":class:`io.WindowsConsoleIO` 대신 :class:`io.FileIO`\\를 사용합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:560
msgid ""
"If non-zero, dump statistics on :ref:`Python pymalloc memory allocator "
"<pymalloc>` at exit."
msgstr "0이 아니면, 종료 시 :ref:`파이썬 pymalloc 메모리 할당자 <pymalloc>`\\에 대한 통계를 덤프합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:563
msgid "The option is ignored if Python is built using ``--without-pymalloc``."
msgstr "파이썬이 ``--without-pymalloc``\\을 사용하여 빌드되면 이 옵션은 무시됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:567
msgid ""
"Module search paths as a string separated by ``DELIM`` "
"(:data:`os.path.pathsep`)."
msgstr "``DELIM``\\(:data:`os.path.pathsep`)으로 구분된 문자열로 표현된 모듈 검색 경로."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:570
msgid ""
"Initialized from :envvar:`PYTHONPATH` environment variable value by "
"default."
msgstr "기본적으로 :envvar:`PYTHONPATH` 환경 변숫값에서 초기화됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:576
msgid ""
":data:`sys.path`. If :c:member:`~PyConfig.module_search_paths_set` is "
"equal to 0, the :c:member:`~PyConfig.module_search_paths` is overridden "
"by the function calculating the :ref:`Path Configuration <init-path-"
"config>`."
msgstr ""
":data:`sys.path`. :c:member:`~PyConfig.module_search_paths_set`\\이 0과 "
"같으면, :ref:`경로 구성 <init-path-config>`\\을 계산하는 함수가 "
":c:member:`~PyConfig.module_search_paths`\\를 재정의합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:583
msgid "Compilation optimization level:"
msgstr "컴파일 최적화 수준:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:585
msgid "0: Peephole optimizer (and ``__debug__`` is set to ``True``)"
msgstr "0: 틈 구멍 최적화기(Peephole optimizer) (그리고 ``__debug__``\\이 ``True``\\로 설정됩니다)"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:586
msgid "1: Remove assertions, set ``__debug__`` to ``False``"
msgstr "1: 어서션을 제거합니다, ``__debug__``\\을 ``False``\\로 설정합니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:587
msgid "2: Strip docstrings"
msgstr "2: 독스트링을 제거합니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:591
msgid ""
"If non-zero, parse :c:member:`~PyConfig.argv` the same way the regular "
"Python command line arguments, and strip Python arguments from "
":c:member:`~PyConfig.argv`: see :ref:`Command Line Arguments <using-on-"
"cmdline>`."
msgstr ""
"0이 아니면, 일반 파이썬 명령 줄 인자와 같은 방식으로 :c:member:`~PyConfig.argv`\\를 구문 분석하고, "
":c:member:`~PyConfig.argv`\\에서 파이썬 인자를 제거합니다: :ref:`명령 줄 인자 <using-on-"
"cmdline>`\\를 참조하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:598
msgid ""
"If non-zero, turn on parser debugging output (for expert only, depending "
"on compilation options)."
msgstr "0이 아니면, 구문 분석기 디버깅 출력을 켭니다 (컴파일 옵션에 따라, 전문가용입니다)."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:603
msgid ""
"If equal to 0, suppress warnings when calculating the :ref:`Path "
"Configuration <init-path-config>` (Unix only, Windows does not log any "
"warning). Otherwise, warnings are written into ``stderr``."
msgstr ""
"0과 같으면, :ref:`경로 구성 <init-path-config>`\\을 계산할 때 경고를 억제합니다 (유닉스 전용, 윈도우는 "
"아무런 경고도 로그 하지 않습니다). 그렇지 않으면, 경고가 ``stderr``\\에 기록됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:609
msgid ":data:`sys.prefix`."
msgstr ":data:`sys.prefix`."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:613
msgid ""
"Program name. Used to initialize :c:member:`~PyConfig.executable`, and in"
" early error messages."
msgstr ""
"프로그램 이름. :c:member:`~PyConfig.executable`\\을 초기화하는 데 사용되며, 초기 에러 메시지에서도 "
"사용됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:618
msgid ":data:`sys.pycache_prefix`: ``.pyc`` cache prefix."
msgstr ":data:`sys.pycache_prefix`: ``.pyc`` 캐시 접두사."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:620
msgid "If ``NULL``, :data:`sys.pycache_prefix` is set to ``None``."
msgstr "``NULL``\\이면, :data:`sys.pycache_prefix`\\는 ``None``\\으로 설정됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:624
msgid ""
"Quiet mode. For example, don't display the copyright and version messages"
" in interactive mode."
msgstr "침묵 모드. 예를 들어, 대화식 모드에서 저작권과 버전 메시지를 표시하지 않습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:629
msgid "``python3 -c COMMAND`` argument. Used by :c:func:`Py_RunMain`."
msgstr "``python3 -c COMMAND`` 인자. :c:func:`Py_RunMain`\\에서 사용합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:633
msgid "``python3 FILENAME`` argument. Used by :c:func:`Py_RunMain`."
msgstr "``python3 FILENAME`` 인자. :c:func:`Py_RunMain`\\에서 사용합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:637
msgid "``python3 -m MODULE`` argument. Used by :c:func:`Py_RunMain`."
msgstr "``python3 -m MODULE`` 인자. :c:func:`Py_RunMain`\\에서 사용합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:641
msgid "Show total reference count at exit?"
msgstr "종료 시 총 참조 횟수를 표시합니까?"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:643
msgid "Set to 1 by :option:`-X showrefcount <-X>` command line option."
msgstr ":option:`-X showrefcount <-X>` 명령 줄 옵션으로 1로 설정됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:645
msgid "Need a debug build of Python (``Py_REF_DEBUG`` macro must be defined)."
msgstr "파이썬의 디버그 빌드가 필요합니다 (``Py_REF_DEBUG`` 매크로를 정의해야 합니다)."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:649
msgid "Import the :mod:`site` module at startup?"
msgstr "시작할 때 :mod:`site` 모듈을 임포트 합니까?"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:653
msgid "Skip the first line of the source?"
msgstr "소스의 첫 줄을 건너뜁니까?"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:658
msgid ""
"Encoding and encoding errors of :data:`sys.stdin`, :data:`sys.stdout` and"
" :data:`sys.stderr`."
msgstr ":data:`sys.stdin`, :data:`sys.stdout` 및 :data:`sys.stderr`\\의 인코딩과 인코딩 에러."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:663
msgid "If non-zero, call :func:`tracemalloc.start` at startup."
msgstr "0이 아니면, 시작 시 :func:`tracemalloc.start`\\를 호출합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:667
msgid "If greater than 0, use :ref:`environment variables <using-on-envvars>`."
msgstr "0보다 크면, :ref:`환경 변수 <using-on-envvars>`\\를 사용합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:671
msgid "If non-zero, add user site directory to :data:`sys.path`."
msgstr "0이 아니면, 사용자 사이트 디렉터리를 :data:`sys.path`\\에 추가합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:675
msgid "If non-zero, enable verbose mode."
msgstr "0이 아니면, 상세 모드를 활성화합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:679
msgid ""
":data:`sys.warnoptions`: options of the :mod:`warnings` module to build "
"warnings filters: lowest to highest priority."
msgstr ""
":data:`sys.warnoptions`: 경고 필터를 빌드하기 위한 :mod:`warnings` 모듈의 옵션: 가장 낮은 것에서"
" 가장 높은 우선순위로."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:682
msgid ""
"The :mod:`warnings` module adds :data:`sys.warnoptions` in the reverse "
"order: the last :c:member:`PyConfig.warnoptions` item becomes the first "
"item of :data:`warnings.filters` which is checked first (highest "
"priority)."
msgstr ""
":mod:`warnings` 모듈은 :data:`sys.warnoptions`\\를 역순으로 추가합니다: 마지막 "
":c:member:`PyConfig.warnoptions` 항목은 가장 먼저 검사되는 "
":data:`warnings.filters`\\의 첫 번째 항목이 됩니다 (가장 높은 우선순위)."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:689
msgid "If non-zero, write ``.pyc`` files."
msgstr "0이 아니면, ``.pyc`` 파일을 기록합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:691
msgid ""
":data:`sys.dont_write_bytecode` is initialized to the inverted value of "
":c:member:`~PyConfig.write_bytecode`."
msgstr ""
":data:`sys.dont_write_bytecode`\\는 "
":c:member:`~PyConfig.write_bytecode`\\의 반전된 값으로 초기화됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:696
msgid ":data:`sys._xoptions`."
msgstr ":data:`sys._xoptions`."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:700
msgid "Enable PEG parser? Default: 1."
msgstr ""

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:702
msgid "Set to 0 by :option:`-X oldparser <-X>` and :envvar:`PYTHONOLDPARSER`."
msgstr ""

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:704
msgid "See also :pep:`617`."
msgstr ""

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:708
msgid ""
"If ``parse_argv`` is non-zero, ``argv`` arguments are parsed the same way"
" the regular Python parses command line arguments, and Python arguments "
"are stripped from ``argv``: see :ref:`Command Line Arguments <using-on-"
"cmdline>`."
msgstr ""
"``parse_argv``\\가 0이 아니면, 일반 파이썬이 명령 줄 인자를 구문 분석하는 것과 같은 방식으로 ``argv`` "
"인자가 구문 분석되고, ``argv``\\에서 파이썬 인자가 제거됩니다: :ref:`명령 줄 인자 <using-on-"
"cmdline>`\\를 참조하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:713
msgid ""
"The ``xoptions`` options are parsed to set other options: see "
":option:`-X` option."
msgstr "``xoptions`` 옵션은 다른 옵션을 설정하기 위해 구문 분석됩니다: :option:`-X` 옵션을 참조하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:718
msgid "The ``show_alloc_count`` field has been removed."
msgstr ""

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:722
msgid "Initialization with PyConfig"
msgstr "PyConfig를 사용한 초기화"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:724
msgid "Function to initialize Python:"
msgstr "파이썬을 초기화하는 함수:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:728
msgid "Initialize Python from *config* configuration."
msgstr "*config* 구성에서 파이썬을 초기화합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:733
msgid ""
"If ``PyImport_FrozenModules``, ``PyImport_AppendInittab()`` or "
"``PyImport_ExtendInittab()`` are used, they must be set or called after "
"Python preinitialization and before the Python initialization."
msgstr ""
"``PyImport_FrozenModules``, ``PyImport_AppendInittab()`` 또는 "
"``PyImport_ExtendInittab()`` 을 사용하면, 파이썬 사전 초기화 후에 그리고 파이썬 초기화 전에 설정하거나 "
"호출해야 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:737
msgid "Example setting the program name::"
msgstr "프로그램 이름을 설정하는 예::"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:765
msgid ""
"More complete example modifying the default configuration, read the "
"configuration, and then override some parameters::"
msgstr "기본 구성을 수정하는 더 완전한 예, 구성을 읽은 다음 일부 파라미터를 대체합니다::"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:816
msgid "Isolated Configuration"
msgstr "격리된 구성"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:818
msgid ""
":c:func:`PyPreConfig_InitIsolatedConfig` and "
":c:func:`PyConfig_InitIsolatedConfig` functions create a configuration to"
" isolate Python from the system. For example, to embed Python into an "
"application."
msgstr ""
":c:func:`PyPreConfig_InitIsolatedConfig`\\와 "
":c:func:`PyConfig_InitIsolatedConfig` 함수는 시스템에서 파이썬을 격리하는 구성을 만듭니다. 예를 "
"들어, 파이썬을 응용 프로그램에 내장하기 위해."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:823
msgid ""
"This configuration ignores global configuration variables, environments "
"variables, command line arguments (:c:member:`PyConfig.argv` is not "
"parsed) and user site directory. The C standard streams (ex: ``stdout``) "
"and the LC_CTYPE locale are left unchanged. Signal handlers are not "
"installed."
msgstr ""
"이 구성은 전역 구성 변수, 환경 변수, 명령 줄 인자 (:c:member:`PyConfig.argv`\\가 구문 분석되지 "
"않습니다) 및 사용자 사이트 디렉터리를 무시합니다. C 표준 스트림(예를 들어 ``stdout``)과 LC_CTYPE 로케일은 "
"변경되지 않습니다. 시그널 처리기가 설치되지 않습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:828
msgid ""
"Configuration files are still used with this configuration. Set the "
":ref:`Path Configuration <init-path-config>` (\"output fields\") to "
"ignore these configuration files and avoid the function computing the "
"default path configuration."
msgstr ""
"구성 파일은 여전히 이 구성에 사용됩니다. 이러한 구성 파일을 무시하고 기본 경로 구성을 계산하는 함수를 피하려면 :ref:`경로 "
"구성 <init-path-config>`\\( \"출력 필드\") 을 설정하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:837
msgid "Python Configuration"
msgstr "파이썬 구성"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:839
msgid ""
":c:func:`PyPreConfig_InitPythonConfig` and "
":c:func:`PyConfig_InitPythonConfig` functions create a configuration to "
"build a customized Python which behaves as the regular Python."
msgstr ""
":c:func:`PyPreConfig_InitPythonConfig`\\와 "
":c:func:`PyConfig_InitPythonConfig` 함수는 일반 파이썬처럼 동작하는 사용자 정의된 파이썬을 빌드하기 "
"위한 구성을 만듭니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:843
msgid ""
"Environments variables and command line arguments are used to configure "
"Python, whereas global configuration variables are ignored."
msgstr "환경 변수와 명령 줄 인자는 파이썬을 구성하는 데 사용되는 반면, 전역 구성 변수는 무시됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:846
msgid ""
"This function enables C locale coercion (:pep:`538`) and UTF-8 Mode "
"(:pep:`540`) depending on the LC_CTYPE locale, :envvar:`PYTHONUTF8` and "
":envvar:`PYTHONCOERCECLOCALE` environment variables."
msgstr ""
"이 함수는 LC_CTYPE 로케일, :envvar:`PYTHONUTF8` 및 :envvar:`PYTHONCOERCECLOCALE` "
"환경 변수에 따라 C 로케일 강제(:pep:`538`)와 UTF-8 모드(:pep:`540`)를 활성화합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:850
msgid "Example of customized Python always running in isolated mode::"
msgstr "항상 격리 모드에서 실행되는 사용자 정의 파이썬의 예::"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:889
msgid "Path Configuration"
msgstr "경로 구성"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:891
msgid ":c:type:`PyConfig` contains multiple fields for the path configuration:"
msgstr ":c:type:`PyConfig`\\에는 경로 구성을 위한 여러 필드가 포함되어 있습니다:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:893
msgid "Path configuration inputs:"
msgstr "경로 구성 입력:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:895
msgid ":c:member:`PyConfig.home`"
msgstr ":c:member:`PyConfig.home`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:896
#, fuzzy
msgid ":c:member:`PyConfig.platlibdir`"
msgstr ":c:member:`~PyConfig.isolated`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:897
msgid ":c:member:`PyConfig.pathconfig_warnings`"
msgstr ":c:member:`PyConfig.pathconfig_warnings`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:898
msgid ":c:member:`PyConfig.program_name`"
msgstr ":c:member:`PyConfig.program_name`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:899
msgid ":c:member:`PyConfig.pythonpath_env`"
msgstr ":c:member:`PyConfig.pythonpath_env`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:900
msgid "current working directory: to get absolute paths"
msgstr "현재 작업 디렉터리: 절대 경로를 얻기 위해"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:901
msgid ""
"``PATH`` environment variable to get the program full path (from "
":c:member:`PyConfig.program_name`)"
msgstr "(:c:member:`PyConfig.program_name`\\에서) 프로그램 전체 경로를 얻기 위한 ``PATH`` 환경 변수"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:903
msgid "``__PYVENV_LAUNCHER__`` environment variable"
msgstr "``__PYVENV_LAUNCHER__`` 환경 변수"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:904
msgid ""
"(Windows only) Application paths in the registry under "
"\"Software\\Python\\PythonCore\\X.Y\\PythonPath\" of HKEY_CURRENT_USER "
"and HKEY_LOCAL_MACHINE (where X.Y is the Python version)."
msgstr ""
"(윈도우 전용) HKEY_CURRENT_USER와 HKEY_LOCAL_MACHINE의 "
"\"Software\\Python\\PythonCore\\X.Y\\PythonPath\" 아래에 있는 레지스트리의 응용 프로그램 "
"경로 (여기서 X.Y는 파이썬 버전입니다)."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:908
msgid "Path configuration output fields:"
msgstr "경로 구성 출력 필드:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:910
msgid ":c:member:`PyConfig.base_exec_prefix`"
msgstr ":c:member:`PyConfig.base_exec_prefix`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:911
msgid ":c:member:`PyConfig.base_executable`"
msgstr ":c:member:`PyConfig.base_executable`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:912
msgid ":c:member:`PyConfig.base_prefix`"
msgstr ":c:member:`PyConfig.base_prefix`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:913
msgid ":c:member:`PyConfig.exec_prefix`"
msgstr ":c:member:`PyConfig.exec_prefix`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:914
msgid ":c:member:`PyConfig.executable`"
msgstr ":c:member:`PyConfig.executable`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:915
msgid ""
":c:member:`PyConfig.module_search_paths_set`, "
":c:member:`PyConfig.module_search_paths`"
msgstr ""
":c:member:`PyConfig.module_search_paths_set`, "
":c:member:`PyConfig.module_search_paths`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:917
msgid ":c:member:`PyConfig.prefix`"
msgstr ":c:member:`PyConfig.prefix`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:919
msgid ""
"If at least one \"output field\" is not set, Python calculates the path "
"configuration to fill unset fields. If "
":c:member:`~PyConfig.module_search_paths_set` is equal to 0, "
":c:member:`~PyConfig.module_search_paths` is overridden and "
":c:member:`~PyConfig.module_search_paths_set` is set to 1."
msgstr ""
"적어도 하나의 \"출력 필드\"가 설정되어 있지 않으면, 파이썬은 설정되지 않은 필드를 채우기 위해 경로 구성을 계산합니다. "
":c:member:`~PyConfig.module_search_paths_set`\\이 0이면, "
":c:member:`~PyConfig.module_search_paths`\\가 재정의되고 "
":c:member:`~PyConfig.module_search_paths_set`\\이 1로 설정됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:925
msgid ""
"It is possible to completely ignore the function calculating the default "
"path configuration by setting explicitly all path configuration output "
"fields listed above. A string is considered as set even if it is non-"
"empty. ``module_search_paths`` is considered as set if "
"``module_search_paths_set`` is set to 1. In this case, path configuration"
" input fields are ignored as well."
msgstr ""
"위에 나열된 모든 경로 구성 출력 필드를 명시적으로 설정하여 기본 경로 구성을 계산하는 함수를 완전히 무시할 수 있습니다. 비어 "
"있지 않아도 문자열은 설정된 것으로 간주합니다. ``module_search_paths_set``\\이 1로 설정되면 "
"``module_search_paths``\\는 설정된 것으로 간주합니다. 이 경우, 경로 구성 입력 필드도 무시됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:932
msgid ""
"Set :c:member:`~PyConfig.pathconfig_warnings` to 0 to suppress warnings "
"when calculating the path configuration (Unix only, Windows does not log "
"any warning)."
msgstr ""
"경로 구성을 계산할 때 경고를 억제하려면 :c:member:`~PyConfig.pathconfig_warnings`\\를 0으로 "
"설정하십시오 (유닉스 전용, 윈도우는 어떤 경고도 로그 하지 않습니다)."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:935
msgid ""
"If :c:member:`~PyConfig.base_prefix` or "
":c:member:`~PyConfig.base_exec_prefix` fields are not set, they inherit "
"their value from :c:member:`~PyConfig.prefix` and "
":c:member:`~PyConfig.exec_prefix` respectively."
msgstr ""
":c:member:`~PyConfig.base_prefix`\\나 "
":c:member:`~PyConfig.base_exec_prefix` 필드가 설정되지 않으면, 각각 "
":c:member:`~PyConfig.prefix`\\와 :c:member:`~PyConfig.exec_prefix`\\의 값을 "
"상속합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:939
msgid ":c:func:`Py_RunMain` and :c:func:`Py_Main` modify :data:`sys.path`:"
msgstr ":c:func:`Py_RunMain`\\과 :c:func:`Py_Main`\\은 :data:`sys.path`\\를 수정합니다:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:941
msgid ""
"If :c:member:`~PyConfig.run_filename` is set and is a directory which "
"contains a ``__main__.py`` script, prepend "
":c:member:`~PyConfig.run_filename` to :data:`sys.path`."
msgstr ""
":c:member:`~PyConfig.run_filename`\\이 설정되고 ``__main__.py`` 스크립트를 포함하는 "
"디렉터리이면, :c:member:`~PyConfig.run_filename`\\을 :data:`sys.path` 앞에 추가합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:944
msgid "If :c:member:`~PyConfig.isolated` is zero:"
msgstr ":c:member:`~PyConfig.isolated`\\가 0이면:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:946
msgid ""
"If :c:member:`~PyConfig.run_module` is set, prepend the current directory"
" to :data:`sys.path`. Do nothing if the current directory cannot be read."
msgstr ""
":c:member:`~PyConfig.run_module`\\이 설정되면, 현재 디렉터리를 :data:`sys.path` 앞에 "
"추가합니다. 현재 디렉터리를 읽을 수 없으면 아무것도 하지 않습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:948
msgid ""
"If :c:member:`~PyConfig.run_filename` is set, prepend the directory of "
"the filename to :data:`sys.path`."
msgstr ""
":c:member:`~PyConfig.run_filename`\\이 설정되면, 파일명의 디렉터리를 :data:`sys.path` "
"앞에 추가합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:950
msgid "Otherwise, prepend an empty string to :data:`sys.path`."
msgstr "그렇지 않으면, 빈 문자열을 :data:`sys.path` 앞에 추가합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:952
msgid ""
"If :c:member:`~PyConfig.site_import` is non-zero, :data:`sys.path` can be"
" modified by the :mod:`site` module. If "
":c:member:`~PyConfig.user_site_directory` is non-zero and the user's "
"site-package directory exists, the :mod:`site` module appends the user's "
"site-package directory to :data:`sys.path`."
msgstr ""
":c:member:`~PyConfig.site_import`\\가 0이 아니면, :mod:`site` 모듈이 "
":data:`sys.path`\\를 수정할 수 있습니다. "
":c:member:`~PyConfig.user_site_directory`\\가 0이 아니고 사용자의 site-package "
"디렉터리가 존재하면, :mod:`site` 모듈은 사용자의 site-package 디렉터리를 :data:`sys.path`\\에 "
"추가합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:958
msgid "The following configuration files are used by the path configuration:"
msgstr "다음과 같은 구성 파일이 경로 구성에 사용됩니다:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:960
msgid "``pyvenv.cfg``"
msgstr "``pyvenv.cfg``"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:961
msgid "``python._pth`` (Windows only)"
msgstr "``python._pth`` (윈도우 전용)"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:962
msgid "``pybuilddir.txt`` (Unix only)"
msgstr "``pybuilddir.txt`` (유닉스 전용)"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:964
msgid ""
"The ``__PYVENV_LAUNCHER__`` environment variable is used to set "
":c:member:`PyConfig.base_executable`"
msgstr ""
"``__PYVENV_LAUNCHER__`` 환경 변수는 :c:member:`PyConfig.base_executable`\\을 "
"설정하는 데 사용됩니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:969
msgid "Py_RunMain()"
msgstr "Py_RunMain()"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:973
msgid ""
"Execute the command (:c:member:`PyConfig.run_command`), the script "
"(:c:member:`PyConfig.run_filename`) or the module "
"(:c:member:`PyConfig.run_module`) specified on the command line or in the"
" configuration."
msgstr ""
"명령 줄이나 구성에서 지정된 명령 (:c:member:`PyConfig.run_command`), 스크립트 "
"(:c:member:`PyConfig.run_filename`) 또는 모듈 "
"(:c:member:`PyConfig.run_module`)을 실행합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:978
msgid "By default and when if :option:`-i` option is used, run the REPL."
msgstr "기본적으로, 그리고 :option:`-i` 옵션을 사용할 때, REPL을 실행합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:980
msgid ""
"Finally, finalizes Python and returns an exit status that can be passed "
"to the ``exit()`` function."
msgstr "마지막으로, 파이썬을 파이널라이즈 하고 ``exit()`` 함수에 전달할 수 있는 종료 상태를 반환합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:983
msgid ""
"See :ref:`Python Configuration <init-python-config>` for an example of "
"customized Python always running in isolated mode using "
":c:func:`Py_RunMain`."
msgstr ""
":c:func:`Py_RunMain`\\을 사용하여 항상 격리 모드에서 실행되는 사용자 정의 파이썬의 예는 :ref:`파이썬 구성 "
"<init-python-config>`\\을 참조하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:989
msgid "Py_GetArgcArgv()"
msgstr ""

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:993
msgid "Get the original command line arguments, before Python modified them."
msgstr ""

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:997
msgid "Multi-Phase Initialization Private Provisional API"
msgstr "다단계 초기화 비공개 잠정적 API"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:999
msgid ""
"This section is a private provisional API introducing multi-phase "
"initialization, the core feature of the :pep:`432`:"
msgstr "이 섹션은 :pep:`432`\\의 핵심 기능인 다단계 초기화를 소개하는 비공개 잠정적 API입니다:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:1002
msgid "\"Core\" initialization phase, \"bare minimum Python\":"
msgstr "\"핵심(Core)\" 초기화 단계, \"최소한의 파이썬\":"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:1004
msgid "Builtin types;"
msgstr "내장형;"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:1005
msgid "Builtin exceptions;"
msgstr "내장 예외;"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:1006
msgid "Builtin and frozen modules;"
msgstr "내장과 프로즌 모듈(frozen modules);"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:1007
msgid ""
"The :mod:`sys` module is only partially initialized (ex: :data:`sys.path`"
" doesn't exist yet)."
msgstr ":mod:`sys` 모듈은 부분적으로만 초기화됩니다 (예를 들어: :data:`sys.path`\\는 아직 존재하지 않습니다)."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:1010
msgid "\"Main\" initialization phase, Python is fully initialized:"
msgstr "\"주(Main)\" 초기화 단계, 파이썬이 완전히 초기화됩니다:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:1012
msgid "Install and configure :mod:`importlib`;"
msgstr ":mod:`importlib`\\를 설치하고 구성합니다;"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:1013
msgid "Apply the :ref:`Path Configuration <init-path-config>`;"
msgstr ":ref:`경로 구성 <init-path-config>`\\을 적용합니다;"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:1014
msgid "Install signal handlers;"
msgstr "시그널 처리기를 설치합니다;"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:1015
msgid ""
"Finish :mod:`sys` module initialization (ex: create :data:`sys.stdout` "
"and :data:`sys.path`);"
msgstr ""
":mod:`sys` 모듈 초기화를 완료합니다 (예를 들어: :data:`sys.stdout`\\과 "
":data:`sys.path`\\를 만듭니다);"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:1017
msgid "Enable optional features like :mod:`faulthandler` and :mod:`tracemalloc`;"
msgstr ":mod:`faulthandler`\\와 :mod:`tracemalloc`\\과 같은 선택적 기능을 활성화합니다;"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:1018
msgid "Import the :mod:`site` module;"
msgstr ":mod:`site` 모듈을 임포트 합니다;"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:1019
msgid "etc."
msgstr "등등"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:1021
msgid "Private provisional API:"
msgstr "비공개 잠정적 API:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:1023
msgid ""
":c:member:`PyConfig._init_main`: if set to 0, "
":c:func:`Py_InitializeFromConfig` stops at the \"Core\" initialization "
"phase."
msgstr ""
":c:member:`PyConfig._init_main`: 0으로 설정되면, "
":c:func:`Py_InitializeFromConfig`\\는 \"핵심\" 초기화 단계에서 중단합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:1025
msgid ""
":c:member:`PyConfig._isolated_interpreter`: if non-zero, disallow "
"threads, subprocesses and fork."
msgstr ""

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:1030
msgid ""
"Move to the \"Main\" initialization phase, finish the Python "
"initialization."
msgstr "\"주\" 초기화 단계로 이동하여, 파이썬 초기화를 완료합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:1032
msgid ""
"No module is imported during the \"Core\" phase and the ``importlib`` "
"module is not configured: the :ref:`Path Configuration <init-path-"
"config>` is only applied during the \"Main\" phase. It may allow to "
"customize Python in Python to override or tune the :ref:`Path "
"Configuration <init-path-config>`, maybe install a custom "
":data:`sys.meta_path` importer or an import hook, etc."
msgstr ""
"\"핵심\" 단계에서는 아무런 모듈도 임포트 하지 않고 ``importlib`` 모듈이 구성되지 않습니다: :ref:`경로 구성 "
"<init-path-config>`\\은 \"주\" 단계에서만 적용됩니다. :ref:`경로 구성 <init-path-"
"config>`\\을 재정의하거나 조정하기 위해 파이썬에서 파이썬을 사용자 정의할 수 있으며, 사용자 정의 "
":data:`sys.meta_path` 임포터(importer)나 임포트 훅 등을 설치할 수 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:1038
msgid ""
"It may become possible to calculatin the :ref:`Path Configuration <init-"
"path-config>` in Python, after the Core phase and before the Main phase, "
"which is one of the :pep:`432` motivation."
msgstr ""
"핵심 단계 이후에 주 단계 이전에 파이썬에서 :ref:`경로 구성 <init-path-config>`\\을 계산할 수 있게 될 수 "
"있고, 이것이 :pep:`432`\\의 동기 중 하나입니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:1042
msgid ""
"The \"Core\" phase is not properly defined: what should be and what "
"should not be available at this phase is not specified yet. The API is "
"marked as private and provisional: the API can be modified or even be "
"removed anytime until a proper public API is designed."
msgstr ""
"\"핵심\" 단계가 제대로 정의되지 않았습니다: 이 단계에서 무엇을 사용할 수 있고, 무엇이 그렇지 않아야 하는지는 아직 지정되지 "
"않았습니다. API는 비공개이자 잠정적인 것으로 표시됩니다: 적절한 공개 API가 설계될 때까지 언제든지 API를 수정하거나 제거할"
" 수 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/init_config.rst:1047
msgid ""
"Example running Python code between \"Core\" and \"Main\" initialization "
"phases::"
msgstr "\"핵심\"과 \"주\" 초기화 단계 사이에서 파이썬 코드를 실행하는 예제::"

#~ msgid "Development mode: see :option:`-X dev <-X>`."
#~ msgstr "개발 모드: :option:`-X dev <-X>`\\를 참조하십시오."

#~ msgid ""
#~ "Require a debug build of Python "
#~ "(``Py_REF_DEBUG`` macro must be defined)."
#~ msgstr "파이썬의 디버그 빌드가 필요합니다 (``Py_REF_DEBUG`` 매크로를 정의해야 합니다)."

#~ msgid "Show allocation counts at exit?"
#~ msgstr "종료 시 할당 횟수를 표시합니까?"

#~ msgid "Set to 1 by :option:`-X showalloccount <-X>` command line option."
#~ msgstr ":option:`-X showalloccount <-X>` 명령 줄 옵션으로 1로 설정됩니다."

#~ msgid "Need a special Python build with ``COUNT_ALLOCS`` macro defined."
#~ msgstr "``COUNT_ALLOCS`` 매크로가 정의된 특수한 파이썬 빌드가 필요합니다."

