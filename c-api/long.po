# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-10 11:28+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:6
msgid "Integer Objects"
msgstr "정수 객체"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:11
msgid ""
"All integers are implemented as \"long\" integer objects of arbitrary "
"size."
msgstr "모든 정수는 임의의 크기의 \"long\" 정수 객체로 구현됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:13
msgid ""
"On error, most ``PyLong_As*`` APIs return ``(return type)-1`` which "
"cannot be distinguished from a number.  Use :c:func:`PyErr_Occurred` to "
"disambiguate."
msgstr ""
"에러 시, 대부분의 ``PyLong_As*`` API는 숫자와 구별할 수 없는 ``(return type)-1``\\을 반환합니다."
" 모호성을 제거하려면 :c:func:`PyErr_Occurred`\\를 사용하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:18
msgid "This subtype of :c:type:`PyObject` represents a Python integer object."
msgstr "이 :c:type:`PyObject`\\의 서브 형은 파이썬 정수 객체를 나타냅니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:23
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python integer "
"type. This is the same object as :class:`int` in the Python layer."
msgstr ""
"이 :c:type:`PyTypeObject` 인스턴스는 파이썬 정수 형을 나타냅니다. 이것은 파이썬 계층의 "
":class:`int`\\와 같은 객체입니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:29
msgid ""
"Return true if its argument is a :c:type:`PyLongObject` or a subtype of "
":c:type:`PyLongObject`."
msgstr "인자가 :c:type:`PyLongObject`\\이나 :c:type:`PyLongObject`\\의 서브 형이면 참을 반환합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:35
msgid ""
"Return true if its argument is a :c:type:`PyLongObject`, but not a "
"subtype of :c:type:`PyLongObject`."
msgstr ""
"인자가 :c:type:`PyLongObject` 이지만 :c:type:`PyLongObject`\\의 서브 형이 아니면 참을 "
"반환합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:41
msgid ""
"Return a new :c:type:`PyLongObject` object from *v*, or ``NULL`` on "
"failure."
msgstr "*v*\\로부터 새 :c:type:`PyLongObject` 객체를 반환하거나, 실패하면 ``NULL``\\을 반환합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:43
msgid ""
"The current implementation keeps an array of integer objects for all "
"integers between ``-5`` and ``256``, when you create an int in that range"
" you actually just get back a reference to the existing object. So it "
"should be possible to change the value of ``1``.  I suspect the behaviour"
" of Python in this case is undefined. :-)"
msgstr ""
"현재 구현은 ``-5``\\와 ``256`` 사이의 모든 정수에 대해 정수 객체의 배열을 유지합니다. 이 범위에 있는 정수를 만들면"
" 실제로는 기존 객체에 대한 참조만 반환됩니다. 따라서 ``1``\\의 값을 변경하는 것이 가능합니다. 이때 파이썬의 동작은 "
"정의되지 않은 것으로 판단됩니다. :-)"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:52
msgid ""
"Return a new :c:type:`PyLongObject` object from a C :c:type:`unsigned "
"long`, or ``NULL`` on failure."
msgstr ""
"C :c:type:`unsigned long`\\으로부터 새 :c:type:`PyLongObject` 객체를 반환하거나, 실패하면 "
"``NULL``\\을 반환합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:58
msgid ""
"Return a new :c:type:`PyLongObject` object from a C :c:type:`Py_ssize_t`,"
" or ``NULL`` on failure."
msgstr ""
"C :c:type:`Py_ssize_t`\\로부터 새 :c:type:`PyLongObject` 객체를 반환하거나, 실패하면 "
"``NULL``\\을 반환합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:64
msgid ""
"Return a new :c:type:`PyLongObject` object from a C :c:type:`size_t`, or "
"``NULL`` on failure."
msgstr ""
"C :c:type:`size_t`\\로부터 새 :c:type:`PyLongObject` 객체를 반환하거나, 실패하면 "
"``NULL``\\을 반환합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:70
msgid ""
"Return a new :c:type:`PyLongObject` object from a C :c:type:`long long`, "
"or ``NULL`` on failure."
msgstr ""
"C :c:type:`long long`\\으로부터 새 :c:type:`PyLongObject` 객체를 반환하거나, 실패하면 "
"``NULL``\\을 반환합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:76
msgid ""
"Return a new :c:type:`PyLongObject` object from a C :c:type:`unsigned "
"long long`, or ``NULL`` on failure."
msgstr ""
"C :c:type:`unsigned long long`\\으로부터 새 :c:type:`PyLongObject` 객체를 반환하거나, "
"실패하면 ``NULL``\\을 반환합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:82
msgid ""
"Return a new :c:type:`PyLongObject` object from the integer part of *v*, "
"or ``NULL`` on failure."
msgstr ""
"*v*\\의 정수 부분으로부터 새 :c:type:`PyLongObject` 객체를 반환하거나, 실패하면 ``NULL``\\을 "
"반환합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:88
msgid ""
"Return a new :c:type:`PyLongObject` based on the string value in *str*, "
"which is interpreted according to the radix in *base*.  If *pend* is "
"non-``NULL``, *\\*pend* will point to the first character in *str* which "
"follows the representation of the number.  If *base* is ``0``, *str* is "
"interpreted using the :ref:`integers` definition; in this case, leading "
"zeros in a non-zero decimal number raises a :exc:`ValueError`. If *base* "
"is not ``0``, it must be between ``2`` and ``36``, inclusive.  Leading "
"spaces and single underscores after a base specifier and between digits "
"are ignored.  If there are no digits, :exc:`ValueError` will be raised."
msgstr ""
"*str*\\의 문자열 값을 기반으로 한 새 :c:type:`PyLongObject`\\를 반환합니다. 문자열 값은 "
"*base*\\의 진수(기수)에 따라 해석됩니다. *pend*\\가 ``NULL``\\이 아니면, *\\*pend*\\는 숫자 "
"표현의 뒤에 오는 첫 번째 문자를 가리킵니다. *base*\\가 ``0``\\이면, *str*\\은 :ref:`integers` "
"정의를 사용해서 해석됩니다; 이때, 0이 아닌 십진수의 선행 0은 :exc:`ValueError`\\를 발생시킵니다. "
"*base*\\가 ``0``\\이 아니면, ``2``\\와 ``36`` 사이에 있어야 하며, 경계를 포함합니다. 선행 공백과 진수 "
"지정자 뒤나 숫자 사이의 단일 밑줄은 무시됩니다. 숫자가 없으면 :exc:`ValueError`\\가 발생합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:101
msgid "Convert a sequence of Unicode digits to a Python integer value."
msgstr "유니코드 숫자의 시퀀스를 파이썬 정숫값으로 변환합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:105
msgid ""
"Part of the old-style :c:type:`Py_UNICODE` API; please migrate to using "
":c:func:`PyLong_FromUnicodeObject`."
msgstr ""
"이전 스타일의 :c:type:`Py_UNICODE` API의 일부; "
":c:func:`PyLong_FromUnicodeObject`\\를 사용하는 것으로 변경하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:110
msgid ""
"Convert a sequence of Unicode digits in the string *u* to a Python "
"integer value."
msgstr "문자열 *u*\\에 있는 유니코드 숫자의 시퀀스를 파이썬 정숫값으로 변환합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:118
msgid ""
"Create a Python integer from the pointer *p*. The pointer value can be "
"retrieved from the resulting value using :c:func:`PyLong_AsVoidPtr`."
msgstr ""
"포인터 *p*\\로부터 파이썬 정수를 만듭니다. 포인터 값은 :c:func:`PyLong_AsVoidPtr`\\를 사용하여 "
"결괏값에서 조회할 수 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:129
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:148
msgid ""
"Return a C :c:type:`long` representation of *obj*.  If *obj* is not an "
"instance of :c:type:`PyLongObject`, first call its :meth:`__index__` or "
":meth:`__int__` method (if present) to convert it to a "
":c:type:`PyLongObject`."
msgstr ""
"*obj*\\의 C :c:type:`long` 표현을 반환합니다. *obj*\\가 :c:type:`PyLongObject`\\의 "
"인스턴스가 아니면, (있다면) 먼저 :meth:`__index__`\\나 :meth:`__int__` 메서드를 호출하여 "
":c:type:`PyLongObject`\\로 변환합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:134
msgid ""
"Raise :exc:`OverflowError` if the value of *obj* is out of range for a "
":c:type:`long`."
msgstr "*obj*\\의 값이 :c:type:`long`\\의 범위를 벗어나면 :exc:`OverflowError`\\를 발생시킵니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:137
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:158
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:180
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:201
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:224
msgid "Returns ``-1`` on error.  Use :c:func:`PyErr_Occurred` to disambiguate."
msgstr "에러 시 ``-1``\\을 반환합니다. 모호성을 제거하려면 :c:func:`PyErr_Occurred`\\를 사용하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:139
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:160
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:182
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:205
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:290
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:310
msgid "Use :meth:`__index__` if available."
msgstr "사용할 수 있으면 :meth:`__index__`\\를 사용합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:142
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:163
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:185
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:208
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:293
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:313
msgid "Using :meth:`__int__` is deprecated."
msgstr ":meth:`__int__` 사용은 폐지되었습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:153
msgid ""
"If the value of *obj* is greater than :const:`LONG_MAX` or less than "
":const:`LONG_MIN`, set *\\*overflow* to ``1`` or ``-1``, respectively, "
"and return ``-1``; otherwise, set *\\*overflow* to ``0``.  If any other "
"exception occurs set *\\*overflow* to ``0`` and return ``-1`` as usual."
msgstr ""
"*obj*\\의 값이 :const:`LONG_MAX`\\보다 크거나 :const:`LONG_MIN`\\보다 작으면, "
"*\\*overflow*\\를 각각 ``1``\\이나 ``-1``\\로 설정하고 ``-1``\\을 반환합니다; 그렇지 않으면, "
"*\\*overflow*\\를 ``0``\\으로 설정합니다. 다른 예외가 발생하면 *\\*overflow*\\를 ``0``\\으로 "
"설정하고 ``-1``\\을 평소와 같이 반환합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:172
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:191
msgid ""
"Return a C :c:type:`long long` representation of *obj*.  If *obj* is not "
"an instance of :c:type:`PyLongObject`, first call its :meth:`__index__` "
"or :meth:`__int__` method (if present) to convert it to a "
":c:type:`PyLongObject`."
msgstr ""
"*obj*\\의 C :c:type:`long long` 표현을 반환합니다. *obj*\\가 "
":c:type:`PyLongObject`\\의 인스턴스가 아니면, (있다면) 먼저 :meth:`__index__`\\나 "
":meth:`__int__` 메서드를 호출하여 :c:type:`PyLongObject`\\로 변환합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:177
msgid ""
"Raise :exc:`OverflowError` if the value of *obj* is out of range for a "
":c:type:`long long`."
msgstr ""
"*obj*\\의 값이 :c:type:`long long`\\의 범위를 벗어나면 :exc:`OverflowError`\\를 "
"발생시킵니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:196
msgid ""
"If the value of *obj* is greater than :const:`PY_LLONG_MAX` or less than "
":const:`PY_LLONG_MIN`, set *\\*overflow* to ``1`` or ``-1``, "
"respectively, and return ``-1``; otherwise, set *\\*overflow* to ``0``.  "
"If any other exception occurs set *\\*overflow* to ``0`` and return "
"``-1`` as usual."
msgstr ""
"*obj*\\의 값이 :const:`PY_LLONG_MAX`\\보다 크거나 :const:`PY_LLONG_MIN`\\보다 작으면, "
"*\\*overflow*\\를 각각 ``1``\\이나 ``-1``\\로 설정하고 ``-1``\\을 반환합니다; 그렇지 않으면, "
"*\\*overflow*\\를 ``0``\\으로 설정합니다. 다른 예외가 발생하면 *\\*overflow*\\를 ``0``\\으로 "
"설정하고 ``-1``\\을 평소와 같이 반환합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:218
msgid ""
"Return a C :c:type:`Py_ssize_t` representation of *pylong*.  *pylong* "
"must be an instance of :c:type:`PyLongObject`."
msgstr ""
"*pylong*\\의 C :c:type:`Py_ssize_t` 표현을 반환합니다. *pylong*\\은 "
":c:type:`PyLongObject`\\의 인스턴스여야 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:221
msgid ""
"Raise :exc:`OverflowError` if the value of *pylong* is out of range for a"
" :c:type:`Py_ssize_t`."
msgstr ""
"*pylong*\\의 값이 :c:type:`Py_ssize_t`\\의 범위를 벗어나면 :exc:`OverflowError`\\를 "
"발생시킵니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:233
msgid ""
"Return a C :c:type:`unsigned long` representation of *pylong*.  *pylong* "
"must be an instance of :c:type:`PyLongObject`."
msgstr ""
"*pylong*\\의 C :c:type:`unsigned long` 표현을 반환합니다. *pylong*\\은 "
":c:type:`PyLongObject`\\의 인스턴스여야 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:236
msgid ""
"Raise :exc:`OverflowError` if the value of *pylong* is out of range for a"
" :c:type:`unsigned long`."
msgstr ""
"*pylong*\\의 값이 :c:type:`unsigned long`\\의 범위를 벗어나면 "
":exc:`OverflowError`\\를 발생시킵니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:239
msgid ""
"Returns ``(unsigned long)-1`` on error. Use :c:func:`PyErr_Occurred` to "
"disambiguate."
msgstr ""
"에러 시 ``(unsigned long)-1``\\을 반환합니다. 모호성을 제거하려면 "
":c:func:`PyErr_Occurred`\\를 사용하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:249
msgid ""
"Return a C :c:type:`size_t` representation of *pylong*.  *pylong* must be"
" an instance of :c:type:`PyLongObject`."
msgstr ""
"*pylong*\\의 C :c:type:`size_t` 표현을 반환합니다. *pylong*\\은 "
":c:type:`PyLongObject`\\의 인스턴스여야 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:252
msgid ""
"Raise :exc:`OverflowError` if the value of *pylong* is out of range for a"
" :c:type:`size_t`."
msgstr ""
"*pylong*\\의 값이 :c:type:`size_t`\\의 범위를 벗어나면 :exc:`OverflowError`\\를 "
"발생시킵니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:255
msgid ""
"Returns ``(size_t)-1`` on error. Use :c:func:`PyErr_Occurred` to "
"disambiguate."
msgstr ""
"에러 시 ``(size_t)-1``\\을 반환합니다. 모호성을 제거하려면 :c:func:`PyErr_Occurred`\\를 "
"사용하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:264
msgid ""
"Return a C :c:type:`unsigned long long` representation of *pylong*.  "
"*pylong* must be an instance of :c:type:`PyLongObject`."
msgstr ""
"*pylong*\\의 C :c:type:`unsigned long long` 표현을 반환합니다. *pylong*\\은 "
":c:type:`PyLongObject`\\의 인스턴스여야 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:267
msgid ""
"Raise :exc:`OverflowError` if the value of *pylong* is out of range for "
"an :c:type:`unsigned long long`."
msgstr ""
"*pylong*\\의 값이 :c:type:`unsigned long long`\\의 범위를 벗어나면 "
":exc:`OverflowError`\\를 발생시킵니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:270
msgid ""
"Returns ``(unsigned long long)-1`` on error. Use :c:func:`PyErr_Occurred`"
" to disambiguate."
msgstr ""
"에러 시 ``(unsigned long long)-1``\\을 반환합니다. 모호성을 제거하려면 "
":c:func:`PyErr_Occurred`\\를 사용하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:273
msgid "A negative *pylong* now raises :exc:`OverflowError`, not :exc:`TypeError`."
msgstr "음의 *pylong*\\는 이제 :exc:`TypeError`\\가 아니라 :exc:`OverflowError`\\를 발생시킵니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:279
msgid ""
"Return a C :c:type:`unsigned long` representation of *obj*.  If *obj* is "
"not an instance of :c:type:`PyLongObject`, first call its "
":meth:`__index__` or :meth:`__int__` method (if present) to convert it to"
" a :c:type:`PyLongObject`."
msgstr ""
"*obj*\\의 C :c:type:`unsigned long` 표현을 반환합니다. *obj*\\가 "
":c:type:`PyLongObject`\\의 인스턴스가 아니면, (있다면) 먼저 :meth:`__index__`\\나 "
":meth:`__int__` 메서드를 호출하여 :c:type:`PyLongObject`\\로 변환합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:284
msgid ""
"If the value of *obj* is out of range for an :c:type:`unsigned long`, "
"return the reduction of that value modulo ``ULONG_MAX + 1``."
msgstr ""
"*obj*\\의 값이 :c:type:`unsigned long`\\의 범위를 벗어나면, 그 값의 모듈로 ``ULONG_MAX + "
"1`` 환원을 반환합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:287
msgid ""
"Returns ``(unsigned long)-1`` on error.  Use :c:func:`PyErr_Occurred` to "
"disambiguate."
msgstr ""
"에러 시 ``(unsigned long)-1``\\을 반환합니다. 모호성을 제거하려면 "
":c:func:`PyErr_Occurred`\\를 사용하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:299
msgid ""
"Return a C :c:type:`unsigned long long` representation of *obj*.  If "
"*obj* is not an instance of :c:type:`PyLongObject`, first call its "
":meth:`__index__` or :meth:`__int__` method (if present) to convert it to"
" a :c:type:`PyLongObject`."
msgstr ""
"*obj*\\의 C :c:type:`unsigned long long` 표현을 반환합니다. *obj*\\가 "
":c:type:`PyLongObject`\\의 인스턴스가 아니면, (있다면) 먼저 :meth:`__index__`\\나 "
":meth:`__int__` 메서드를 호출하여 :c:type:`PyLongObject`\\로 변환합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:304
msgid ""
"If the value of *obj* is out of range for an :c:type:`unsigned long "
"long`, return the reduction of that value modulo ``PY_ULLONG_MAX + 1``."
msgstr ""
"*obj*\\의 값이 :c:type:`unsigned long long`\\의 범위를 벗어나면, 그 값의 모듈로 "
"``PY_ULLONG_MAX + 1`` 환원을 반환합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:307
msgid ""
"Returns ``(unsigned long long)-1`` on error.  Use "
":c:func:`PyErr_Occurred` to disambiguate."
msgstr ""
"에러 시 ``(unsigned long long)-1``\\을 반환합니다. 모호성을 제거하려면 "
":c:func:`PyErr_Occurred`\\를 사용하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:319
msgid ""
"Return a C :c:type:`double` representation of *pylong*.  *pylong* must be"
" an instance of :c:type:`PyLongObject`."
msgstr ""
"*pylong*\\의 C :c:type:`double` 표현을 반환합니다. *pylong*\\은 "
":c:type:`PyLongObject`\\의 인스턴스여야 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:322
msgid ""
"Raise :exc:`OverflowError` if the value of *pylong* is out of range for a"
" :c:type:`double`."
msgstr ""
"*pylong*\\의 값이 :c:type:`double`\\의 범위를 벗어나면 :exc:`OverflowError`\\를 "
"발생시킵니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:325
msgid "Returns ``-1.0`` on error.  Use :c:func:`PyErr_Occurred` to disambiguate."
msgstr "에러 시 ``-1.0``\\을 반환합니다. 모호성을 제거하려면 :c:func:`PyErr_Occurred`\\를 사용하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:330
msgid ""
"Convert a Python integer *pylong* to a C :c:type:`void` pointer. If "
"*pylong* cannot be converted, an :exc:`OverflowError` will be raised.  "
"This is only assured to produce a usable :c:type:`void` pointer for "
"values created with :c:func:`PyLong_FromVoidPtr`."
msgstr ""
"파이썬 정수 *pylong*\\을 C :c:type:`void` 포인터로 변환합니다. *pylong*\\을 변환할 수 없으면, "
":exc:`OverflowError`\\가 발생합니다. 이것은 :c:func:`PyLong_FromVoidPtr`\\로 만들어진 "
"값에 대해서만 사용할 수 있는 :c:type:`void` 포인터를 생성하는 것이 보장됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/c-api/long.rst:335
msgid "Returns ``NULL`` on error.  Use :c:func:`PyErr_Occurred` to disambiguate."
msgstr "에러 시 ``NULL``\\을 반환합니다. 모호성을 제거하려면 :c:func:`PyErr_Occurred`\\를 사용하십시오."

