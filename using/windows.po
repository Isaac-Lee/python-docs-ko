# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-10 11:28+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:7
msgid "Using Python on Windows"
msgstr "윈도우에서 파이썬 사용하기"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:12
msgid ""
"This document aims to give an overview of Windows-specific behaviour you "
"should know about when using Python on Microsoft Windows."
msgstr "이 문서는 Microsoft 윈도우에서 파이썬을 사용할 때 알아야 할 윈도우 특정 동작에 대한 개요를 제공하는 것을 목표로 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:15
msgid ""
"Unlike most Unix systems and services, Windows does not include a system "
"supported installation of Python. To make Python available, the CPython "
"team has compiled Windows installers (MSI packages) with every `release "
"<https://www.python.org/download/releases/>`_ for many years. These "
"installers are primarily intended to add a per-user installation of "
"Python, with the core interpreter and library being used by a single "
"user. The installer is also able to install for all users of a single "
"machine, and a separate ZIP file is available for application-local "
"distributions."
msgstr ""
"대부분의 유닉스 시스템과 서비스와 달리, 윈도우에는 시스템 지원 파이썬 설치가 포함되어 있지 않습니다. 파이썬을 사용할 수 있도록,"
" CPython 팀은 수년 동안 모든 `배포판 "
"<https://www.python.org/download/releases/>`_\\에 대해 윈도우 설치 프로그램(MSI 패키지)을"
" 컴파일했습니다. 이러한 설치 프로그램은 주로 단일 사용자가 사용하는 핵심 인터프리터와 라이브러리와 함께 사용자별 파이썬 설치를 "
"추가하기 위한 것입니다. 설치 프로그램은 또한 단일 시스템의 모든 사용자를 위해 설치할 수 있으며, 응용 프로그램 로컬 배포를 위해"
" 별도의 ZIP 파일이 제공됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:24
msgid ""
"As specified in :pep:`11`, a Python release only supports a Windows "
"platform while Microsoft considers the platform under extended support. "
"This means that Python |version| supports Windows Vista and newer. If you"
" require Windows XP support then please install Python 3.4."
msgstr ""
":pep:`11`\\에 지정된 대로, 파이썬 릴리스는 Microsoft가 플랫폼이 확장된 지원을 받는 것으로 간주하는 윈도우 "
"플랫폼만 지원합니다. 이것은 파이썬 |version|\\가(이) 윈도우 Vista 이상을 지원함을 뜻합니다. 윈도우 XP 지원이 "
"필요하면 파이썬 3.4를 설치하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:29
msgid ""
"There are a number of different installers available for Windows, each "
"with certain benefits and downsides."
msgstr "윈도우에서 사용할 수 있는 여러 가지 설치 프로그램이 있으며, 각각 나름의 장단점이 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:32
msgid ""
":ref:`windows-full` contains all components and is the best option for "
"developers using Python for any kind of project."
msgstr ""
":ref:`windows-full`\\은 모든 구성 요소를 포함하며 모든 종류의 프로젝트에 파이썬을 사용하는 개발자에게 가장 적합한"
" 옵션입니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:35
msgid ""
":ref:`windows-store` is a simple installation of Python that is suitable "
"for running scripts and packages, and using IDLE or other development "
"environments. It requires Windows 10, but can be safely installed without"
" corrupting other programs. It also provides many convenient commands for"
" launching Python and its tools."
msgstr ""
":ref:`windows-store`\\는 스크립트와 패키지를 실행하고 IDLE이나 다른 개발 환경을 사용하는 데 적합한 파이썬의 "
"간단한 설치입니다. 윈도우 10이 필요하지만, 다른 프로그램을 손상하지 않고 안전하게 설치할 수 있습니다. 또한 파이썬과 그 도구를"
" 시작하기 위한 많은 편리한 명령을 제공합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:41
msgid ""
":ref:`windows-nuget` are lightweight installations intended for "
"continuous integration systems. It can be used to build Python packages "
"or run scripts, but is not updateable and has no user interface tools."
msgstr ""
":ref:`windows-nuget`\\는 지속적 통합 시스템(continuous integration systems)을 위한 경량"
" 설치입니다. 파이썬 패키지를 빌드하거나 스크립트를 실행하는 데 사용할 수 있지만, 업데이트할 수 없으며 사용자 인터페이스 도구가 "
"없습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:45
msgid ""
":ref:`windows-embeddable` is a minimal package of Python suitable for "
"embedding into a larger application."
msgstr ":ref:`windows-embeddable`\\는 더 큰 응용 프로그램에 내장하기에 적합한 파이썬의 최소 패키지입니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:52
msgid "The full installer"
msgstr "전체 설치 프로그램"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:55
msgid "Installation steps"
msgstr "설치 단계"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:57
msgid ""
"Four Python |version| installers are available for download - two each "
"for the 32-bit and 64-bit versions of the interpreter. The *web "
"installer* is a small initial download, and it will automatically "
"download the required components as necessary. The *offline installer* "
"includes the components necessary for a default installation and only "
"requires an internet connection for optional features. See :ref:`install-"
"layout-option` for other ways to avoid downloading during installation."
msgstr ""
"네 개의 파이썬 |version| 설치 프로그램을 다운로드할 수 있습니다 - 각각 32비트와 64비트 버전의 인터프리터를 지원하는 "
"두 가지. *웹 설치 프로그램(web installer)*\\은 작은 초기 다운로드이며, 필요한 구성 요소를 자동으로 "
"다운로드합니다. *오프라인 설치 프로그램(offline installer)*\\에는 기본 설치에 필요한 구성 요소가 포함되어 있으며"
" 선택적 기능을 위해서만 인터넷 연결이 필요합니다. 설치 중 다운로드를 피하는 다른 방법은 :ref:`install-layout-"
"option`\\를 참조하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:65
msgid "After starting the installer, one of two options may be selected:"
msgstr "설치 프로그램을 시작한 후, 두 가지 옵션 중 하나를 선택할 수 있습니다:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:69
msgid "If you select \"Install Now\":"
msgstr "\"Install Now\"를 선택하면:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:71
msgid ""
"You will *not* need to be an administrator (unless a system update for "
"the C Runtime Library is required or you install the :ref:`launcher` for "
"all users)"
msgstr ""
"관리자(administrator)일 필요는 *없습니다* (C 런타임 라이브러리에 대한 시스템 업데이트가 필요하거나 모든 사용자를 "
"위해 :ref:`launcher`\\를 설치하지 않는 한)"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:74
msgid "Python will be installed into your user directory"
msgstr "파이썬이 사용자 디렉터리에 설치됩니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:75
msgid ""
"The :ref:`launcher` will be installed according to the option at the "
"bottom of the first page"
msgstr ":ref:`launcher`\\는 첫 페이지 하단의 옵션에 따라 설치됩니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:77
msgid "The standard library, test suite, launcher and pip will be installed"
msgstr "표준 라이브러리, 테스트 스위트, 런처 및 pip가 설치됩니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:78
msgid "If selected, the install directory will be added to your :envvar:`PATH`"
msgstr "선택하면, 설치 디렉터리가 :envvar:`PATH`\\에 추가됩니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:79
msgid "Shortcuts will only be visible for the current user"
msgstr "바로 가기는 현재 사용자에게만 표시됩니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:81
msgid ""
"Selecting \"Customize installation\" will allow you to select the "
"features to install, the installation location and other options or post-"
"install actions. To install debugging symbols or binaries, you will need "
"to use this option."
msgstr ""
"\"Customize installation\"을 선택하면 설치할 기능, 설치 위치 및 다른 옵션이나 설치 후 작업을 선택할 수 "
"있습니다. 디버깅 심볼이나 바이너리를 설치하려면, 이 옵션을 사용해야 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:85
msgid ""
"To perform an all-users installation, you should select \"Customize "
"installation\". In this case:"
msgstr "모든 사용자 설치를 수행하려면, \"Customize installation\"을 선택해야 합니다. 이 경우:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:88
msgid "You may be required to provide administrative credentials or approval"
msgstr "관리자 자격 증명이나 승인을 제공해야 할 수 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:89
msgid "Python will be installed into the Program Files directory"
msgstr "파이썬은 Program Files 디렉터리에 설치됩니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:90
msgid "The :ref:`launcher` will be installed into the Windows directory"
msgstr ":ref:`launcher`\\는 Windows 디렉터리에 설치됩니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:91
msgid "Optional features may be selected during installation"
msgstr "설치 중에 선택적 기능을 선택할 수 있습니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:92
msgid "The standard library can be pre-compiled to bytecode"
msgstr "표준 라이브러리는 바이트 코드로 사전 컴파일될 수 있습니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:93
msgid ""
"If selected, the install directory will be added to the system "
":envvar:`PATH`"
msgstr "선택하면, 설치 디렉터리가 시스템 :envvar:`PATH`\\에 추가됩니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:94
msgid "Shortcuts are available for all users"
msgstr "모든 사용자가 바로 가기를 사용할 수 있습니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:99
msgid "Removing the MAX_PATH Limitation"
msgstr "MAX_PATH 제한 제거하기"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:101
msgid ""
"Windows historically has limited path lengths to 260 characters. This "
"meant that paths longer than this would not resolve and errors would "
"result."
msgstr ""
"윈도우는 역사적으로 경로 길이를 260자로 제한했습니다. 이는 이보다 긴 경로는 결정(resolve)되지 않고 에러가 발생함을 "
"의미합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:104
msgid ""
"In the latest versions of Windows, this limitation can be expanded to "
"approximately 32,000 characters. Your administrator will need to activate"
" the \"Enable Win32 long paths\" group policy, or set the registry value "
"``HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\FileSystem@LongPathsEnabled``"
" to ``1``."
msgstr ""
"최신 버전의 윈도우에서는, 이 제한을 약 32,000자로 확장할 수 있습니다. 관리자는 \"Enable Win32 long "
"paths\" 그룹 정책을 활성화하거나, 레지스트리 값 "
"``HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\FileSystem@LongPathsEnabled``\\를"
" ``1``\\로 설정해야 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:110
msgid ""
"This allows the :func:`open` function, the :mod:`os` module and most "
"other path functionality to accept and return paths longer than 260 "
"characters."
msgstr ""
"이는 :func:`open` 함수, :mod:`os` 모듈 및 대부분의 다른 경로 기능이 260자보다 긴 경로를 받아들이고 반환할 "
"수 있도록 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:113
msgid "After changing the above option, no further configuration is required."
msgstr "위 옵션을 변경한 후에는, 추가 구성이 필요하지 않습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:117
msgid "Support for long paths was enabled in Python."
msgstr "긴 경로에 대한 지원이 파이썬에서 활성화되었습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:122
msgid "Installing Without UI"
msgstr "UI 없이 설치하기"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:124
msgid ""
"All of the options available in the installer UI can also be specified "
"from the command line, allowing scripted installers to replicate an "
"installation on many machines without user interaction.  These options "
"may also be set without suppressing the UI in order to change some of the"
" defaults."
msgstr ""
"설치 프로그램 UI에서 사용할 수 있는 모든 옵션은 명령 줄에서도 지정할 수 있어서, 스크립팅 된 설치 프로그램이 사용자 상호 작용"
" 없이 여러 컴퓨터에서 설치를 복제할 수 있도록 합니다. 이러한 옵션은 일부 기본값을 변경하기 위해 UI를 억제하지 않고 설정할 "
"수도 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:129
msgid ""
"To completely hide the installer UI and install Python silently, pass the"
" ``/quiet`` option. To skip past the user interaction but still display "
"progress and errors, pass the ``/passive`` option. The ``/uninstall`` "
"option may be passed to immediately begin removing Python - no prompt "
"will be displayed."
msgstr ""
"설치 프로그램 UI를 완전히 숨기고 파이썬을 자동으로 설치하려면, ``/quiet`` 옵션을 전달하십시오. 사용자 상호 작용을 "
"건너뛰지만, 진행률과 에러를 계속 표시하려면, ``/passive`` 옵션을 전달하십시오. ``/uninstall`` 옵션을 "
"전달하면 파이썬 제거를 즉시 시작합니다 - 프롬프트가 표시되지 않습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:135
msgid ""
"All other options are passed as ``name=value``, where the value is "
"usually ``0`` to disable a feature, ``1`` to enable a feature, or a path."
" The full list of available options is shown below."
msgstr ""
"다른 모든 옵션은 ``name=value``\\로 전달됩니다. 여기서 value는 일반적으로 기능을 비활성화하려면 ``0``, "
"기능을 활성화하려면 ``1`` 또는 경로입니다. 사용 가능한 옵션의 전체 목록은 다음과 같습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:140
msgid "Name"
msgstr "이름"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:140
msgid "Description"
msgstr "설명"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:140
msgid "Default"
msgstr "기본값"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:142
msgid "InstallAllUsers"
msgstr "InstallAllUsers"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:142
msgid "Perform a system-wide installation."
msgstr "시스템 전체 설치를 수행합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:142
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:165
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:168
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:177
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:195
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:203
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:206
msgid "0"
msgstr "0"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:144
msgid "TargetDir"
msgstr "TargetDir"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:144
msgid "The installation directory"
msgstr "설치 디렉터리"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:144
msgid "Selected based on InstallAllUsers"
msgstr "InstallAllUsers 에 따라 선택됩니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:147
msgid "DefaultAllUsersTargetDir"
msgstr "DefaultAllUsersTargetDir"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:147
msgid "The default installation directory for all-user installs"
msgstr "모든 사용자 설치를 위한 기본 설치 디렉터리"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:147
msgid ""
":file:`%ProgramFiles%\\\\\\ Python X.Y` or :file:`\\ "
"%ProgramFiles(x86)%\\\\\\ Python X.Y`"
msgstr ""
":file:`%ProgramFiles%\\\\\\ Python X.Y` 또는 :file:`\\ "
"%ProgramFiles(x86)%\\\\\\ Python X.Y`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:152
msgid "DefaultJustForMeTargetDir"
msgstr "DefaultJustForMeTargetDir"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:152
msgid "The default install directory for just-for-me installs"
msgstr "현재 사용자 전용 설치를 위한 기본 설치 디렉터리"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:152
#, python-format
msgid ""
":file:`%LocalAppData%\\\\\\ Programs\\\\PythonXY` or "
":file:`%LocalAppData%\\\\\\ Programs\\\\PythonXY-32` or "
":file:`%LocalAppData%\\\\\\ Programs\\\\PythonXY-64`"
msgstr ""
":file:`%LocalAppData%\\\\\\ Programs\\\\PythonXY` 또는 "
":file:`%LocalAppData%\\\\\\ Programs\\\\PythonXY-32` 또는 "
":file:`%LocalAppData%\\\\\\ Programs\\\\PythonXY-64`"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:159
msgid "DefaultCustomTargetDir"
msgstr "DefaultCustomTargetDir"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:159
msgid "The default custom install directory displayed in the UI"
msgstr "UI에 표시되는 기본 사용자 지정 설치 디렉터리"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:159
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:208
msgid "(empty)"
msgstr "(비어있음)"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:162
msgid "AssociateFiles"
msgstr "AssociateFiles"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:162
msgid "Create file associations if the launcher is also installed."
msgstr "런처도 설치되었으면 파일 연결을 만듭니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:162
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:172
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:175
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:179
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:182
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:185
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:187
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:190
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:193
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:197
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:199
#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:201
msgid "1"
msgstr "1"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:165
msgid "CompileAll"
msgstr "CompileAll"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:165
msgid "Compile all ``.py`` files to ``.pyc``."
msgstr "모든 ``.py`` 파일을 ``.pyc``\\로 컴파일합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:168
msgid "PrependPath"
msgstr "PrependPath"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:168
msgid ""
"Add install and Scripts directories to :envvar:`PATH` and ``.PY`` to "
":envvar:`PATHEXT`"
msgstr ""
"설치 및 Scripts 디렉터리를 :envvar:`PATH`\\에 추가하고 ``.PY``\\를 :envvar:`PATHEXT`\\에"
" 추가합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:172
msgid "Shortcuts"
msgstr "Shortcuts"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:172
msgid "Create shortcuts for the interpreter, documentation and IDLE if installed."
msgstr "설치되면, 인터프리터, 설명서 및 IDLE에 대한 바로 가기를 만듭니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:175
msgid "Include_doc"
msgstr "Include_doc"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:175
msgid "Install Python manual"
msgstr "파이썬 매뉴얼을 설치합니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:177
msgid "Include_debug"
msgstr "Include_debug"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:177
msgid "Install debug binaries"
msgstr "디버그 바이너리를 설치합니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:179
msgid "Include_dev"
msgstr "Include_dev"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:179
msgid "Install developer headers and libraries"
msgstr "개발자 헤더와 라이브러리를 설치합니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:182
msgid "Include_exe"
msgstr "Include_exe"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:182
msgid "Install :file:`python.exe` and related files"
msgstr ":file:`python.exe`\\와 관련 파일들을 설치합니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:185
msgid "Include_launcher"
msgstr "Include_launcher"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:185
msgid "Install :ref:`launcher`."
msgstr ":ref:`launcher`\\를 설치합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:187
msgid "InstallLauncherAllUsers"
msgstr "InstallLauncherAllUsers"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:187
msgid "Installs :ref:`launcher` for all users."
msgstr "모든 사용자를 위해 :ref:`launcher`\\를 설치합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:190
msgid "Include_lib"
msgstr "Include_lib"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:190
msgid "Install standard library and extension modules"
msgstr "표준 라이브러리와 확장 모듈을 설치합니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:193
msgid "Include_pip"
msgstr "Include_pip"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:193
msgid "Install bundled pip and setuptools"
msgstr "번들로 제공되는 pip와 setuptools를 설치합니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:195
msgid "Include_symbols"
msgstr "Include_symbols"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:195
msgid "Install debugging symbols (`*`.pdb)"
msgstr "디버깅 심볼(`*`.pdb)을 설치합니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:197
msgid "Include_tcltk"
msgstr "Include_tcltk"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:197
msgid "Install Tcl/Tk support and IDLE"
msgstr "Tcl/Tk 지원과 IDLE을 설치합니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:199
msgid "Include_test"
msgstr "Include_test"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:199
msgid "Install standard library test suite"
msgstr "표준 라이브러리 테스트 스위트를 설치합니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:201
msgid "Include_tools"
msgstr "Include_tools"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:201
msgid "Install utility scripts"
msgstr "유틸리티 스크립트를 설치합니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:203
msgid "LauncherOnly"
msgstr "LauncherOnly"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:203
msgid "Only installs the launcher. This will override most other options."
msgstr "런처만 설치합니다. 이것은 대부분의 다른 옵션보다 우선합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:206
msgid "SimpleInstall"
msgstr "SimpleInstall"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:206
msgid "Disable most install UI"
msgstr "대부분의 설치 UI를 비활성화합니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:208
msgid "SimpleInstallDescription"
msgstr "SimpleInstallDescription"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:208
msgid "A custom message to display when the simplified install UI is used."
msgstr "단순화된 설치 UI를 사용할 때 표시할 사용자 정의 메시지."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:212
msgid ""
"For example, to silently install a default, system-wide Python "
"installation, you could use the following command (from an elevated "
"command prompt)::"
msgstr "예를 들어 기본, 시스템 전체 파이썬 설치를 조용히 설치하려면, (관리자 권한 명령 프롬프트에서) 다음 명령을 사용할 수 있습니다::"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:217
msgid ""
"To allow users to easily install a personal copy of Python without the "
"test suite, you could provide a shortcut with the following command. This"
" will display a simplified initial page and disallow customization::"
msgstr ""
"사용자가 테스트 스위트 없이 파이썬의 개인용 사본을 쉽게 설치할 수 있도록, 다음 명령으로 바로 가기를 제공할 수 있습니다. 이렇게"
" 하면 단순화된 초기 페이지가 표시되고 사용자 정의가 허용되지 않습니다::"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:224
msgid ""
"(Note that omitting the launcher also omits file associations, and is "
"only recommended for per-user installs when there is also a system-wide "
"installation that included the launcher.)"
msgstr "(런처를 생략하면 파일 연결도 생략되며, 런처가 포함된 시스템 전체 설치가 있을 때, 사용자별 설치에만 권장됨에 유의하십시오.)"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:228
msgid ""
"The options listed above can also be provided in a file named "
"``unattend.xml`` alongside the executable. This file specifies a list of "
"options and values. When a value is provided as an attribute, it will be "
"converted to a number if possible. Values provided as element text are "
"always left as strings. This example file sets the same options as the "
"previous example:"
msgstr ""
"위에 나열된 옵션은 실행 파일과 함께 ``unattend.xml``\\이라는 파일로 제공될 수도 있습니다. 이 파일은 옵션과 값 "
"목록을 지정합니다. 값이 어트리뷰트로 제공되면, 가능한 경우 숫자로 변환됩니다. 엘리먼트 텍스트로 제공된 값은 항상 문자열로 남아 "
"있습니다. 이 예제 파일은 이전 예제와 같은 옵션을 설정합니다:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:247
msgid "Installing Without Downloading"
msgstr "다운로드 없이 설치하기"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:249
msgid ""
"As some features of Python are not included in the initial installer "
"download, selecting those features may require an internet connection.  "
"To avoid this need, all possible components may be downloaded on-demand "
"to create a complete *layout* that will no longer require an internet "
"connection regardless of the selected features. Note that this download "
"may be bigger than required, but where a large number of installations "
"are going to be performed it is very useful to have a locally cached "
"copy."
msgstr ""
"파이썬의 일부 기능은 초기 설치 프로그램 다운로드에 포함되어 있지 않아서, 이러한 기능을 선택하면 인터넷 연결이 필요할 수 "
"있습니다. 이러한 요구를 피하고자, 필요에 따라 모든 가능한 구성 요소를 내려받아 선택한 기능과 관계없이 더는 인터넷 연결이 "
"필요하지 않은 완전한 *레이아웃*\\을 만들 수 있습니다. 이 다운로드는 필요한 것보다 클 수 있지만, 많은 수의 설치를 수행할 "
"경우 로컬로 캐시 된 사본을 보유하는 것이 매우 유용합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:257
msgid ""
"Execute the following command from Command Prompt to download all "
"possible required files.  Remember to substitute ``python-3.8.0.exe`` for"
" the actual name of your installer, and to create layouts in their own "
"directories to avoid collisions between files with the same name."
msgstr ""

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:266
msgid "You may also specify the ``/quiet`` option to hide the progress display."
msgstr "``/quiet`` 옵션을 지정하여 진행률 표시를 숨길 수도 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:269
msgid "Modifying an install"
msgstr "설치 수정하기"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:271
msgid ""
"Once Python has been installed, you can add or remove features through "
"the Programs and Features tool that is part of Windows. Select the Python"
" entry and choose \"Uninstall/Change\" to open the installer in "
"maintenance mode."
msgstr ""
"일단 파이썬이 설치되면, 윈도우의 일부인 Programs and Features 도구를 통해 기능을 추가하거나 제거할 수 있습니다."
" Python 항목을 선택하고 \"Uninstall/Change\"를 선택하여 유지 관리 모드로 설치 프로그램을 엽니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:275
msgid ""
"\"Modify\" allows you to add or remove features by modifying the "
"checkboxes - unchanged checkboxes will not install or remove anything. "
"Some options cannot be changed in this mode, such as the install "
"directory; to modify these, you will need to remove and then reinstall "
"Python completely."
msgstr ""
"\"Modify\"는 체크 박스를 수정하여 기능을 추가하거나 제거하도록 합니다 - 변경되지 않은 체크 박스는 아무것도 설치하거나 "
"제거하지 않습니다. 이 모드에서는 설치 디렉터리와 같은 일부 옵션을 변경할 수 없습니다; 이를 수정하려면 파이썬을 완전히 제거한 "
"다음 다시 설치해야 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:280
msgid ""
"\"Repair\" will verify all the files that should be installed using the "
"current settings and replace any that have been removed or modified."
msgstr "\"Repair\"는 현재 설정을 사용하여 설치되어야 하는 모든 파일을 확인하고 제거되거나 수정된 파일을 대체합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:283
msgid ""
"\"Uninstall\" will remove Python entirely, with the exception of the "
":ref:`launcher`, which has its own entry in Programs and Features."
msgstr ""
"\"Uninstall\"은 파이썬을 완전히 제거하는데, Programs and Features에 자체 항목이 있는 "
":ref:`launcher`\\는 제외합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:290
msgid "The Microsoft Store package"
msgstr "Microsoft Store 패키지"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:294
msgid ""
"The Microsoft Store package is an easily installable Python interpreter "
"that is intended mainly for interactive use, for example, by students."
msgstr ""
"Microsoft Store 패키지는 쉽게 설치할 수 있는 파이썬 인터프리터로, 주로 예를 들어 학생의 대화형 사용을 목적으로 "
"합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:297
msgid ""
"To install the package, ensure you have the latest Windows 10 updates and"
" search the Microsoft Store app for \"Python |version|\". Ensure that the"
" app you select is published by the Python Software Foundation, and "
"install it."
msgstr ""
"패키지를 설치하려면, 최신 윈도우 10 업데이트가 있는지 확인하고 \"Python |version|\"를(을) 위한 "
"Microsoft Store 앱을 검색하십시오. 선택한 앱이 Python Software Foundation에서 게시되었는지 "
"확인하고, 설치합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:302
msgid ""
"Python will always be available for free on the Microsoft Store. If you "
"are asked to pay for it, you have not selected the correct package."
msgstr ""
"파이썬은 Microsoft Store에서 항상 무료로 제공됩니다. 비용을 지불하라는 요청을 받으면, 올바른 패키지를 선택하지 않은 "
"것입니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:305
msgid ""
"After installation, Python may be launched by finding it in Start. "
"Alternatively, it will be available from any Command Prompt or PowerShell"
" session by typing ``python``. Further, pip and IDLE may be used by "
"typing ``pip`` or ``idle``. IDLE can also be found in Start."
msgstr ""
"설치 후, 파이썬은 Start에서 찾아서 시작할 수 있습니다. 또는, 모든 명령 프롬프트 또는 PowerShell 세션에서 "
"``python``\\을 입력하여 사용할 수 있습니다. 또한, ``pip``\\나 ``idle``\\을 입력하여 pip와 IDLE을"
" 사용할 수 있습니다. IDLE은 Start에서도 찾을 수 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:310
msgid ""
"All three commands are also available with version number suffixes, for "
"example, as ``python3.exe`` and ``python3.x.exe`` as well as "
"``python.exe`` (where ``3.x`` is the specific version you want to launch,"
" such as |version|). Open \"Manage App Execution Aliases\" through Start "
"to select which version of Python is associated with each command. It is "
"recommended to make sure that ``pip`` and ``idle`` are consistent with "
"whichever version of ``python`` is selected."
msgstr ""
"세 가지 명령 모두 버전 번호 접미사와 함께 사용할 수 있습니다, 예를 들어, ``python.exe``\\뿐만 아니라 "
"``python3.exe``\\와 ``python3.x.exe`` (여기서 ``3.x``\\는 여러분이 시작하려는 특정 버전입니다,"
" 가령 |version|). Start를 통해 \"Manage App Execution Aliases\"를 열어 각 명령과 연결된 "
"파이썬 버전을 선택합니다. ``pip``\\와 ``idle``\\이 선택된 ``python`` 버전과 일치하도록 하는 것이 "
"좋습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:318
msgid ""
"Virtual environments can be created with ``python -m venv`` and activated"
" and used as normal."
msgstr "``python -m venv``\\로 가상 환경을 만들고 활성화하여 정상적으로 사용할 수 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:321
msgid ""
"If you have installed another version of Python and added it to your "
"``PATH`` variable, it will be available as ``python.exe`` rather than the"
" one from the Microsoft Store. To access the new installation, use "
"``python3.exe`` or ``python3.x.exe``."
msgstr ""
"다른 버전의 파이썬을 설치하고 ``PATH`` 변수에 추가했으면, Microsoft Store에서 제공하는 것이 아니라 그것이 "
"``python.exe``\\로 사용될 수 있습니다. 새 설치에 액세스하려면, ``python3.exe``\\나 "
"``python3.x.exe``\\를 사용하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:326
msgid ""
"The ``py.exe`` launcher will detect this Python installation, but will "
"prefer installations from the traditional installer."
msgstr "``py.exe`` 런처는 이 파이썬 설치를 감지하지만, 기존 설치 프로그램으로부터의 설치를 선호합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:329
msgid ""
"To remove Python, open Settings and use Apps and Features, or else find "
"Python in Start and right-click to select Uninstall. Uninstalling will "
"remove all packages you installed directly into this Python installation,"
" but will not remove any virtual environments"
msgstr ""
"파이썬을 제거하려면, Settings를 열고 Apps and Features를 사용하거나, Start에서 Python을 찾은 다음 "
"마우스 오른쪽 단추를 클릭하여 Uninstall 을 선택합니다. 제거하면 이 파이썬 설치에 직접 설치한 모든 패키지가 제거되지만, "
"가상 환경은 제거되지 않습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:335
msgid "Known Issues"
msgstr "알려진 문제"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:337
msgid ""
"Because of restrictions on Microsoft Store apps, Python scripts may not "
"have full write access to shared locations such as ``TEMP`` and the "
"registry. Instead, it will write to a private copy. If your scripts must "
"modify the shared locations, you will need to install the full installer."
msgstr ""
"Microsoft Store 앱에 대한 제한으로 인해, 파이썬 스크립트에는 ``TEMP``\\와 레지스트리와 같은 공유 위치에 대한"
" 전체 쓰기 액세스 권한이 없을 수 있습니다. 대신, 개인 사본에 기록됩니다. 스크립트가 공유 위치를 수정해야 하면, 전체 설치 "
"프로그램을 설치해야 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:346
msgid "The nuget.org packages"
msgstr "nuget.org 패키지"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:350
msgid ""
"The nuget.org package is a reduced size Python environment intended for "
"use on continuous integration and build systems that do not have a "
"system-wide install of Python. While nuget is \"the package manager for "
".NET\", it also works perfectly fine for packages containing build-time "
"tools."
msgstr ""
"nuget.org 패키지는 시스템 전체에 파이썬이 설치되지 않은 지속적인 통합과 빌드 시스템에 사용하기 위한 축소된 크기의 파이썬 "
"환경입니다. 너겟은 \".NET 용 패키지 관리자\"이지만, 빌드 타임 도구가 포함된 패키지에서도 완벽하게 작동합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:355
msgid ""
"Visit `nuget.org <https://www.nuget.org/>`_ for the most up-to-date "
"information on using nuget. What follows is a summary that is sufficient "
"for Python developers."
msgstr ""
"너겟 사용에 대한 최신 정보를 보려면 `nuget.org <https://www.nuget.org/>`_\\를 방문하십시오. 다음은"
" 파이썬 개발자에게 충분한 요약입니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:359
msgid ""
"The ``nuget.exe`` command line tool may be downloaded directly from "
"``https://aka.ms/nugetclidl``, for example, using curl or PowerShell. "
"With the tool, the latest version of Python for 64-bit or 32-bit machines"
" is installed using::"
msgstr ""
"``nuget.exe`` 명령 줄 도구는, 예를 들어 curl이나 PowerShell을 사용하여 "
"``https://aka.ms/nugetclidl``\\에서 직접 다운로드할 수 있습니다. 이 도구를 사용하면 다음과 같이 "
"64비트나 32비트 컴퓨터용 파이썬의 최신 버전이 설치됩니다::"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:367
msgid ""
"To select a particular version, add a ``-Version 3.x.y``. The output "
"directory may be changed from ``.``, and the package will be installed "
"into a subdirectory. By default, the subdirectory is named the same as "
"the package, and without the ``-ExcludeVersion`` option this name will "
"include the specific version installed. Inside the subdirectory is a "
"``tools`` directory that contains the Python installation::"
msgstr ""
"특정 버전을 선택하려면, ``-Version 3.x.y``\\를 추가하십시오. 출력 디렉터리는 ``.``\\에서 변경될 수 있으며,"
" 패키지는 하위 디렉터리에 설치됩니다. 기본적으로, 하위 디렉터리의 이름은 패키지와 같으며, ``-ExcludeVersion`` "
"옵션이 없으면 이 이름에 설치된 특정 버전이 포함됩니다. 하위 디렉터리에는 파이썬 설치가 포함된 ``tools`` 디렉터리가 "
"있습니다::"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:382
msgid ""
"In general, nuget packages are not upgradeable, and newer versions should"
" be installed side-by-side and referenced using the full path. "
"Alternatively, delete the package directory manually and install it "
"again. Many CI systems will do this automatically if they do not preserve"
" files between builds."
msgstr ""
"일반적으로, 너겟 패키지는 업그레이드할 수 없으며, 최신 버전을 나란히 설치하고 전체 경로를 사용하여 참조해야 합니다. 또는, "
"패키지 디렉터리를 수동으로 삭제하고 다시 설치하십시오. 많은 CI 시스템은 빌드 간에 파일을 보존하지 않으면 이 작업을 자동으로 "
"수행합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:387
msgid ""
"Alongside the ``tools`` directory is a ``build\\native`` directory. This "
"contains a MSBuild properties file ``python.props`` that can be used in a"
" C++ project to reference the Python install. Including the settings will"
" automatically use the headers and import libraries in your build."
msgstr ""
"``tools`` 디렉터리와 함께 ``build\\native`` 디렉터리가 있습니다. 여기에는 파이썬 설치를 참조하기 위해 C++"
" 프로젝트에서 사용할 수 있는 MSBuild 속성 파일 ``python.props``\\가 포함되어 있습니다. 설정을 포함하면 "
"빌드에서 자동으로 헤더와 임포트 라이브러리를 사용합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:392
msgid ""
"The package information pages on nuget.org are "
"`www.nuget.org/packages/python <https://www.nuget.org/packages/python>`_ "
"for the 64-bit version and `www.nuget.org/packages/pythonx86 "
"<https://www.nuget.org/packages/pythonx86>`_ for the 32-bit version."
msgstr ""
"nuget.org의 패키지 정보 페이지는 64비트 버전의 경우 `www.nuget.org/packages/python "
"<https://www.nuget.org/packages/python>`_\\이고 32비트 버전의 경우 "
"`www.nuget.org/packages/pythonx86 "
"<https://www.nuget.org/packages/pythonx86>`_\\입니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:401
msgid "The embeddable package"
msgstr "내장 가능한 패키지"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:405
msgid ""
"The embedded distribution is a ZIP file containing a minimal Python "
"environment. It is intended for acting as part of another application, "
"rather than being directly accessed by end-users."
msgstr ""
"내장된 배포는 최소 파이썬 환경을 포함하는 ZIP 파일입니다. 최종 사용자가 직접 액세스하기보다는, 다른 응용 프로그램의 일부로 "
"작동하기 위한 것입니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:409
msgid ""
"When extracted, the embedded distribution is (almost) fully isolated from"
" the user's system, including environment variables, system registry "
"settings, and installed packages. The standard library is included as "
"pre-compiled and optimized ``.pyc`` files in a ZIP, and ``python3.dll``, "
"``python37.dll``, ``python.exe`` and ``pythonw.exe`` are all provided. "
"Tcl/tk (including all dependants, such as Idle), pip and the Python "
"documentation are not included."
msgstr ""
"추출되면, 내장된 배포는 환경 변수, 시스템 레지스트리 설정 및 설치된 패키지를 포함하여 사용자 시스템에서 (거의) 완전히 "
"격리됩니다. 표준 라이브러리는 ZIP에 미리 컴파일되고 최적화된 ``.pyc`` 파일로 포함되며, ``python3.dll``, "
"``python37.dll``, ``python.exe`` 및 ``pythonw.exe``\\가 모두 제공됩니다. Tcl/tk "
"(Idle과 같은 모든 종속 항목을 포함하여), pip 및 파이썬 설명서는 포함되지 않습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:418
msgid ""
"The embedded distribution does not include the `Microsoft C Runtime "
"<https://www.microsoft.com/en-us/download/details.aspx?id=48145>`_ and it"
" is the responsibility of the application installer to provide this. The "
"runtime may have already been installed on a user's system previously or "
"automatically via Windows Update, and can be detected by finding "
"``ucrtbase.dll`` in the system directory."
msgstr ""
"내장된 배포에는 `Microsoft C Runtime <https://www.microsoft.com/en-"
"us/download/details.aspx?id=48145>`_\\이 포함되어 있지 않으며 이를 제공하는 것은 응용 프로그램 설치"
" 프로그램의 책임입니다. 런타임은 이전에 사용자 시스템에 이미 설치되었거나 윈도우 업데이트를 통해 자동으로 설치되었을 수 있으며, "
"시스템 디렉터리에서 ``ucrtbase.dll``\\을 찾아서 감지할 수 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:425
msgid ""
"Third-party packages should be installed by the application installer "
"alongside the embedded distribution. Using pip to manage dependencies as "
"for a regular Python installation is not supported with this "
"distribution, though with some care it may be possible to include and use"
" pip for automatic updates. In general, third-party packages should be "
"treated as part of the application (\"vendoring\") so that the developer "
"can ensure compatibility with newer versions before providing updates to "
"users."
msgstr ""
"제삼자 패키지는 내장된 배포와 함께 응용 프로그램 설치 프로그램이 설치해야 합니다. 일반 파이썬 설치처럼 종속성을 관리하기 위해 "
"pip를 사용하는 것은 이 배포에서 지원되지 않지만, 주의를 기울이면 자동 업데이트를 위해 pip를 포함하고 사용할 수 있습니다. "
"일반적으로, 제삼자 패키지는 개발자가 사용자에게 업데이트를 제공하기 전에 최신 버전과의 호환성을 보장할 수 있도록 응용 프로그램의 "
"일부로 처리되어야 합니다 (\"벤더링(vendoring)\")."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:433
msgid "The two recommended use cases for this distribution are described below."
msgstr "이 배포에 권장되는 두 가지 사용 사례가 아래에 설명되어 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:436
msgid "Python Application"
msgstr "파이썬 응용 프로그램"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:438
msgid ""
"An application written in Python does not necessarily require users to be"
" aware of that fact. The embedded distribution may be used in this case "
"to include a private version of Python in an install package. Depending "
"on how transparent it should be (or conversely, how professional it "
"should appear), there are two options."
msgstr ""
"파이썬으로 작성된 응용 프로그램이 반드시 사용자가 그 사실을 인식하도록 할 필요는 없습니다. 이 경우 내장된 배포를 사용하여 설치 "
"패키지에 파이썬의 내부 버전을 포함할 수 있습니다. 얼마나 투명해야 하는지(또는 반대로, 얼마나 전문적으로 보여야 하는지)에 따라,"
" 두 가지 옵션이 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:444
msgid ""
"Using a specialized executable as a launcher requires some coding, but "
"provides the most transparent experience for users. With a customized "
"launcher, there are no obvious indications that the program is running on"
" Python: icons can be customized, company and version information can be "
"specified, and file associations behave properly. In most cases, a custom"
" launcher should simply be able to call ``Py_Main`` with a hard-coded "
"command line."
msgstr ""
"특수 실행 파일을 런처로 사용하려면 약간의 코딩이 필요하지만, 사용자에게 가장 투명한 경험을 제공합니다. 사용자 정의된 런처를 "
"사용하면, 프로그램이 파이썬에서 실행되고 있다는 명백한 표시가 없습니다: 아이콘을 사용자 정의하고, 회사와 버전 정보를 지정할 수 "
"있으며 파일 연결이 제대로 작동합니다. 대부분의 경우, 사용자 정의 런처는 하드 코딩된 명령 줄을 사용하여 "
"``Py_Main``\\을 호출할 수 있어야 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:451
msgid ""
"The simpler approach is to provide a batch file or generated shortcut "
"that directly calls the ``python.exe`` or ``pythonw.exe`` with the "
"required command-line arguments. In this case, the application will "
"appear to be Python and not its actual name, and users may have trouble "
"distinguishing it from other running Python processes or file "
"associations."
msgstr ""
"더 간단한 방법은 필요한 명령 줄 인자를 사용하여 ``python.exe``\\나 ``pythonw.exe``\\를 직접 호출하는 "
"배치 파일이나 생성된 바로 가기를 제공하는 것입니다. 이 경우, 응용 프로그램은 실제 이름이 아닌 파이썬으로 표시되며, 사용자는 "
"실행 중인 다른 파이썬 프로세스나 파일 연결과 구별하는 데 어려움을 겪을 수 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:457
msgid ""
"With the latter approach, packages should be installed as directories "
"alongside the Python executable to ensure they are available on the path."
" With the specialized launcher, packages can be located in other "
"locations as there is an opportunity to specify the search path before "
"launching the application."
msgstr ""
"후자의 접근 방식에서는, 패키지를 파이썬 실행 파일과 함께 디렉터리로 설치하여 경로에서 사용할 수 있도록 해야 합니다. 특수 런처를"
" 사용하면, 응용 프로그램을 시작하기 전에 검색 경로를 지정할 수 있어서 패키지를 다른 위치에 배치할 수 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:463
msgid "Embedding Python"
msgstr "파이썬 내장하기"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:465
msgid ""
"Applications written in native code often require some form of scripting "
"language, and the embedded Python distribution can be used for this "
"purpose. In general, the majority of the application is in native code, "
"and some part will either invoke ``python.exe`` or directly use "
"``python3.dll``. For either case, extracting the embedded distribution to"
" a subdirectory of the application installation is sufficient to provide "
"a loadable Python interpreter."
msgstr ""
"네이티브 코드로 작성된 응용 프로그램에는 종종 어떤 형태의 스크립팅 언어가 필요하며, 내장된 파이썬 배포를 이러한 목적으로 사용할 "
"수 있습니다. 일반적으로, 대부분의 응용 프로그램은 네이티브 코드로 되어 있으며, 일부가 ``python.exe``\\를 호출하거나"
" ``python3.dll``\\을 직접 사용합니다. 두 경우 모두, 내장된 배포를 응용 프로그램 설치의 하위 디렉터리로 추출하면 "
"로드할 수 있는 파이썬 인터프리터를 제공하기에 충분합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:472
msgid ""
"As with the application use, packages can be installed to any location as"
" there is an opportunity to specify search paths before initializing the "
"interpreter. Otherwise, there is no fundamental differences between using"
" the embedded distribution and a regular installation."
msgstr ""
"응용 프로그램 사용과 마찬가지로, 인터프리터를 초기화하기 전에 검색 경로를 지정할 기회가 있어서 패키지를 임의의 위치에 설치할 수 "
"있습니다. 그 외에는, 내장된 배포와 일반 설치를 사용하는 것 간에 근본적인 차이점은 없습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:479
msgid "Alternative bundles"
msgstr "대체 번들"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:481
msgid ""
"Besides the standard CPython distribution, there are modified packages "
"including additional functionality.  The following is a list of popular "
"versions and their key features:"
msgstr "표준 CPython 배포 외에도, 추가 기능을 포함하는 수정된 패키지가 있습니다. 다음은 많이 사용되는 버전과 주요 기능 목록입니다:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:486
msgid "`ActivePython <https://www.activestate.com/activepython/>`_"
msgstr "`ActivePython <https://www.activestate.com/activepython/>`_"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:486
msgid "Installer with multi-platform compatibility, documentation, PyWin32"
msgstr "다중 플랫폼 호환성, 설명서, PyWin32가 있는 설치 프로그램"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:490
msgid "`Anaconda <https://www.anaconda.com/download/>`_"
msgstr "`Anaconda <https://www.anaconda.com/download/>`_"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:489
msgid ""
"Popular scientific modules (such as numpy, scipy and pandas) and the "
"``conda`` package manager."
msgstr "인기 있는 과학 모듈(가령 numpy, scipy 및 pandas)과 ``conda`` 패키지 관리자."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:494
msgid "`Canopy <https://www.enthought.com/product/canopy/>`_"
msgstr "`Canopy <https://www.enthought.com/product/canopy/>`_"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:493
msgid ""
"A \"comprehensive Python analysis environment\" with editors and other "
"development tools."
msgstr "편집기와 기타 개발 도구가 있는 \"포괄적인 파이썬 분석 환경\"."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:498
msgid "`WinPython <https://winpython.github.io/>`_"
msgstr "`WinPython <https://winpython.github.io/>`_"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:497
msgid ""
"Windows-specific distribution with prebuilt scientific packages and tools"
" for building packages."
msgstr "사전 빌드된 과학 패키지와 패키지 빌드를 위한 도구가 포함된 윈도우 전용 배포."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:500
msgid ""
"Note that these packages may not include the latest versions of Python or"
" other libraries, and are not maintained or supported by the core Python "
"team."
msgstr ""
"이러한 패키지들은 최신 버전의 파이썬이나 기타 라이브러리를 포함하지 않을 수 있으며, 핵심 파이썬 팀에서 유지 관리하거나 지원하지 "
"않음에 유의하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:506
msgid "Configuring Python"
msgstr "파이썬 구성하기"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:508
msgid ""
"To run Python conveniently from a command prompt, you might consider "
"changing some default environment variables in Windows.  While the "
"installer provides an option to configure the PATH and PATHEXT variables "
"for you, this is only reliable for a single, system-wide installation.  "
"If you regularly use multiple versions of Python, consider using the "
":ref:`launcher`."
msgstr ""
"명령 프롬프트에서 파이썬을 편리하게 실행하려면, 윈도우에서 일부 기본 환경 변수를 변경하는 것을 고려할 수 있습니다. 설치 "
"프로그램이 PATH와 PATHEXT 변수를 구성하는 옵션을 제공하지만, 이는 시스템 전체의 단일 설치에서만 신뢰할 수 있습니다. "
"여러 버전의 파이썬을 정기적으로 사용하면, :ref:`launcher` 사용을 고려하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:518
msgid "Excursus: Setting environment variables"
msgstr "보충 설명: 환경 변수 설정하기"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:520
msgid ""
"Windows allows environment variables to be configured permanently at both"
" the User level and the System level, or temporarily in a command prompt."
msgstr "윈도우에서는 환경 변수를 사용자 수준과 시스템 수준 모두에서 영구적으로 구성하거나, 명령 프롬프트에서 일시적으로 구성할 수 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:523
msgid ""
"To temporarily set environment variables, open Command Prompt and use the"
" :command:`set` command:"
msgstr "환경 변수를 임시로 설정하려면, 명령 프롬프트를 열고 :command:`set` 명령을 사용하십시오:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:532
msgid ""
"These changes will apply to any further commands executed in that "
"console, and will be inherited by any applications started from the "
"console."
msgstr "이러한 변경은 해당 콘솔에서 실행되는 모든 추가 명령에 적용되며, 콘솔에서 시작된 모든 응용 프로그램에 상속됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:535
msgid ""
"Including the variable name within percent signs will expand to the "
"existing value, allowing you to add your new value at either the start or"
" the end. Modifying :envvar:`PATH` by adding the directory containing "
":program:`python.exe` to the start is a common way to ensure the correct "
"version of Python is launched."
msgstr ""
"백분율 기호 안에 변수 이름을 포함하면 기존 값으로 확장되어, 시작이나 끝부분에 새 값을 추가할 수 있습니다. "
":program:`python.exe`\\를 포함하는 디렉터리를 시작 부분에 추가하여 :envvar:`PATH`\\를 수정하는 것은"
" 올바른 버전의 파이썬이 실행되도록 하는 일반적인 방법입니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:541
msgid ""
"To permanently modify the default environment variables, click Start and "
"search for 'edit environment variables', or open System properties, "
":guilabel:`Advanced system settings` and click the :guilabel:`Environment"
" Variables` button. In this dialog, you can add or modify User and System"
" variables. To change System variables, you need non-restricted access to"
" your machine (i.e. Administrator rights)."
msgstr ""
"기본 환경 변수를 영구적으로 수정하려면, Start를 클릭하고 'edit environment variables'를 검색하거나, "
"시스템 속성, :guilabel:`Advanced system settings`\\를 열고 :guilabel:`Environment"
" Variables` 버튼을 클릭합니다. 이 대화 상자에서, 사용자와 시스템 변수를 추가하거나 수정할 수 있습니다. 시스템 변수를 "
"변경하려면 컴퓨터에 제한 없이 액세스해야 합니다 (즉 관리자 권한)."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:550
msgid ""
"Windows will concatenate User variables *after* System variables, which "
"may cause unexpected results when modifying :envvar:`PATH`."
msgstr ""
"윈도우는 사용자 변수를 시스템 변수 *뒤에* 이어붙이므로, :envvar:`PATH`\\를 수정할 때 예기치 않은 결과가 발생할 수"
" 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:553
msgid ""
"The :envvar:`PYTHONPATH` variable is used by all versions of Python 2 and"
" Python 3, so you should not permanently configure this variable unless "
"it only includes code that is compatible with all of your installed "
"Python versions."
msgstr ""
":envvar:`PYTHONPATH` 변수는 모든 버전의 파이썬 2와 파이썬 3에서 사용되므로, 설치된 모든 파이썬 버전과 호환되는"
" 코드만 포함하지 않는 한 이 변수를 영구적으로 구성해서는 안 됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:561
msgid "https://www.microsoft.com/en-us/wdsi/help/folder-variables"
msgstr "https://www.microsoft.com/en-us/wdsi/help/folder-variables"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:561
msgid "Environment variables in Windows NT"
msgstr "윈도우 NT의 환경 변수"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:564
msgid "https://technet.microsoft.com/en-us/library/cc754250.aspx"
msgstr "https://technet.microsoft.com/en-us/library/cc754250.aspx"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:564
msgid "The SET command, for temporarily modifying environment variables"
msgstr "환경 변수를 임시로 수정하기 위한, SET 명령"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:567
msgid "https://technet.microsoft.com/en-us/library/cc755104.aspx"
msgstr "https://technet.microsoft.com/en-us/library/cc755104.aspx"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:567
msgid "The SETX command, for permanently modifying environment variables"
msgstr "환경 변수를 영구적으로 수정하기 위한, SETX 명령"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:570
msgid ""
"https://support.microsoft.com/en-us/help/310519/how-to-manage-"
"environment-variables-in-windows-xp"
msgstr ""
"https://support.microsoft.com/en-us/help/310519/how-to-manage-"
"environment-variables-in-windows-xp"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:570
msgid "How To Manage Environment Variables in Windows XP"
msgstr "윈도우 XP에서 환경 변수를 관리하는 방법"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:572
msgid "https://www.chem.gla.ac.uk/~louis/software/faq/q1.html"
msgstr "https://www.chem.gla.ac.uk/~louis/software/faq/q1.html"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:573
msgid "Setting Environment variables, Louis J. Farrugia"
msgstr "환경 변수 설정하기, Louis J. Farrugia"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:578
msgid "Finding the Python executable"
msgstr "파이썬 실행 파일 찾기"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:582
msgid ""
"Besides using the automatically created start menu entry for the Python "
"interpreter, you might want to start Python in the command prompt. The "
"installer has an option to set that up for you."
msgstr ""
"자동으로 만들어진 파이썬 인터프리터를 위한 시작 메뉴 항목을 사용하는 것 외에도, 명령 프롬프트에서 파이썬을 시작하고 싶을 수 "
"있습니다. 설치 프로그램에는 이를 설정할 수 있는 옵션이 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:586
msgid ""
"On the first page of the installer, an option labelled \"Add Python to "
"PATH\" may be selected to have the installer add the install location "
"into the :envvar:`PATH`.  The location of the :file:`Scripts\\\\` folder "
"is also added. This allows you to type :command:`python` to run the "
"interpreter, and :command:`pip` for the package installer. Thus, you can "
"also execute your scripts with command line options, see :ref:`using-on-"
"cmdline` documentation."
msgstr ""
"설치 프로그램의 첫 페이지에서, \"Add Python to PATH\"라는 옵션을 선택하여 설치 프로그램이 "
":envvar:`PATH`\\에 설치 위치를 추가하도록 할 수 있습니다. :file:`Scripts\\\\` 폴더의 위치도 "
"추가됩니다. 이는 인터프리터를 실행하기 위해 :command:`python`\\을 입력하고, 패키지 설치 프로그램을 실행하려면 "
":command:`pip`\\를 입력할 수 있도록 합니다. 따라서, 명령 줄 옵션으로 스크립트를 실행할 수도 있습니다, :ref"
":`using-on-cmdline` 설명서를 참조하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:593
msgid ""
"If you don't enable this option at install time, you can always re-run "
"the installer, select Modify, and enable it.  Alternatively, you can "
"manually modify the :envvar:`PATH` using the directions in :ref:`setting-"
"envvars`.  You need to set your :envvar:`PATH` environment variable to "
"include the directory of your Python installation, delimited by a "
"semicolon from other entries.  An example variable could look like this "
"(assuming the first two entries already existed)::"
msgstr ""
"설치 시 이 옵션을 활성화하지 않았으면, 언제든지 설치 프로그램을 다시 실행하고, Modify를 선택한 다음, 활성화할 수 "
"있습니다. 또는, :ref:`setting-envvars`\\의 지침을 사용하여 :envvar:`PATH`\\를 수동으로 수정할 수"
" 있습니다. 파이썬 설치 디렉터리를 포함하도록 :envvar:`PATH` 환경 변수를 설정해야 하며, 다른 항목과 세미콜론으로 "
"구분됩니다. 예제 변수는 다음과 같습니다 (처음 두 항목이 이미 존재한다고 가정합니다)::"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:606
msgid "UTF-8 mode"
msgstr "UTF-8 모드"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:610
msgid ""
"Windows still uses legacy encodings for the system encoding (the ANSI "
"Code Page).  Python uses it for the default encoding of text files (e.g. "
":func:`locale.getpreferredencoding`)."
msgstr ""
"윈도우는 여전히 시스템 인코딩에 레거시 인코딩을 사용합니다 (ANSI 코드 페이지). 파이썬은 이를 텍스트 파일의 기본 인코딩에 "
"이를 사용합니다 (예를 들어 :func:`locale.getpreferredencoding`)."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:614
msgid ""
"This may cause issues because UTF-8 is widely used on the internet and "
"most Unix systems, including WSL (Windows Subsystem for Linux)."
msgstr ""
"UTF-8은 인터넷과 WSL(Windows Subsystem for Linux)을 포함한 대부분의 유닉스 시스템에서 널리 사용되기 "
"때문에 문제가 발생할 수 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:617
msgid ""
"You can use UTF-8 mode to change the default text encoding to UTF-8. You "
"can enable UTF-8 mode via the ``-X utf8`` command line option, or the "
"``PYTHONUTF8=1`` environment variable.  See :envvar:`PYTHONUTF8` for "
"enabling UTF-8 mode, and :ref:`setting-envvars` for how to modify "
"environment variables."
msgstr ""
"UTF-8 모드를 사용하여 기본 텍스트 인코딩을 UTF-8로 변경할 수 있습니다. ``-X utf8`` 명령 줄 옵션이나 "
"``PYTHONUTF8=1`` 환경 변수를 통해 UTF-8 모드를 활성화할 수 있습니다. UTF-8 모드를 활성화하려면 "
":envvar:`PYTHONUTF8`\\을, 환경 변수를 수정하는 방법은 :ref:`setting-envvars`\\를 "
"참조하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:623
msgid "When UTF-8 mode is enabled:"
msgstr "UTF-8 모드가 활성화될 때:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:625
msgid ""
":func:`locale.getpreferredencoding` returns ``'UTF-8'`` instead of the "
"system encoding.  This function is used for the default text encoding in "
"many places, including :func:`open`, :class:`Popen`, "
":meth:`Path.read_text`, etc."
msgstr ""
":func:`locale.getpreferredencoding` 은 시스템 인코딩 대신 ``'UTF-8'``\\을 반환합니다. 이 "
"함수는 :func:`open`, :class:`Popen`, :meth:`Path.read_text` 등 여러 곳에서 기본 텍스트 "
"인코딩으로 사용됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:629
msgid ""
":data:`sys.stdin`, :data:`sys.stdout`, and :data:`sys.stderr` all use "
"UTF-8 as their text encoding."
msgstr ""
":data:`sys.stdin`, :data:`sys.stdout` 및 :data:`sys.stderr`\\는 모두 UTF-8을 "
"텍스트 인코딩으로 사용합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:631
msgid "You can still use the system encoding via the \"mbcs\" codec."
msgstr "\"mbcs\" 코덱을 통해 시스템 인코딩을 계속 사용할 수 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:633
msgid ""
"Note that adding ``PYTHONUTF8=1`` to the default environment variables "
"will affect all Python 3.7+ applications on your system. If you have any "
"Python 3.7+ applications which rely on the legacy system encoding, it is "
"recommended to set the environment variable temporarily or use the ``-X "
"utf8`` command line option."
msgstr ""
"기본 환경 변수에 ``PYTHONUTF8=1``\\을 추가하면 시스템의 모든 파이썬 3.7+ 응용 프로그램에 영향을 줍니다. 레거시"
" 시스템 인코딩에 의존하는 파이썬 3.7+ 응용 프로그램이 있으면 환경 변수를 임시로 설정하거나 ``-X utf8`` 명령 줄 "
"옵션을 사용하는 것이 좋습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:640
msgid ""
"Even when UTF-8 mode is disabled, Python uses UTF-8 by default on Windows"
" for:"
msgstr "UTF-8 모드가 비활성화된 경우에도, 파이썬은 윈도우에서 기본적으로 다음을 위해 UTF-8을 사용합니다:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:643
msgid "Console I/O including standard I/O (see :pep:`528` for details)."
msgstr "표준 I/O를 포함한 콘솔 I/O (자세한 내용은 :pep:`528`\\을 참조하십시오)."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:644
msgid "The filesystem encoding (see :pep:`529` for details)."
msgstr "파일 시스템 인코딩 (자세한 내용은 :pep:`529`\\를 참조하십시오)."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:650
msgid "Python Launcher for Windows"
msgstr "윈도우 용 파이썬 런처"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:654
msgid ""
"The Python launcher for Windows is a utility which aids in locating and "
"executing of different Python versions.  It allows scripts (or the "
"command-line) to indicate a preference for a specific Python version, and"
" will locate and execute that version."
msgstr ""
"윈도우 용 파이썬 런처는 다양한 파이썬 버전을 찾고 실행하는 데 도움이 되는 유틸리티입니다. 스크립트(또는 명령 줄)가 특정 파이썬"
" 버전에 대한 선호를 나타내도록 허용하고, 해당 버전을 찾아 실행합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:659
msgid ""
"Unlike the :envvar:`PATH` variable, the launcher will correctly select "
"the most appropriate version of Python. It will prefer per-user "
"installations over system-wide ones, and orders by language version "
"rather than using the most recently installed version."
msgstr ""
":envvar:`PATH` 변수와 달리, 런처는 가장 적합한 파이썬 버전을 올바르게 선택합니다. 시스템 전체 설치보다 사용자별 "
"설치를 선호하며, 가장 최근에 설치된 버전을 사용하기보다 언어 버전별로 순서를 매깁니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:664
msgid "The launcher was originally specified in :pep:`397`."
msgstr "런처는 원래 :pep:`397`\\에서 지정되었습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:667
msgid "Getting started"
msgstr "시작하기"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:670
msgid "From the command-line"
msgstr "명령 줄에서"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:674
msgid ""
"System-wide installations of Python 3.3 and later will put the launcher "
"on your :envvar:`PATH`. The launcher is compatible with all available "
"versions of Python, so it does not matter which version is installed. To "
"check that the launcher is available, execute the following command in "
"Command Prompt:"
msgstr ""
"시스템 전체에 파이썬 3.3 이상을 설치하면 :envvar:`PATH`\\에 런처를 넣습니다. 런처는 사용 가능한 모든 파이썬 "
"버전과 호환되므로, 어떤 버전이 설치되어 있는지는 중요하지 않습니다. 런처를 사용할 수 있는지 확인하려면, 명령 프롬프트에서 다음 "
"명령을 실행하십시오:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:683
msgid ""
"You should find that the latest version of Python you have installed is "
"started - it can be exited as normal, and any additional command-line "
"arguments specified will be sent directly to Python."
msgstr ""
"설치한 최신 버전의 파이썬이 시작되어야 합니다 - 정상적으로 종료할 수 있으며, 지정된 추가 명령 줄 인자가 파이썬으로 직접 "
"전송됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:687
msgid ""
"If you have multiple versions of Python installed (e.g., 2.7 and "
"|version|) you will have noticed that Python |version| was started - to "
"launch Python 2.7, try the command:"
msgstr ""
"여러 버전의 파이썬이 설치되어있으면 (예를 들어, 2.7과 |version|) 파이썬 |version| 시작되는 것을 알 수 있을 "
"겁니다 - 파이썬 2.7을 시작하려면, 다음 명령을 시도하십시오:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:695
msgid ""
"If you want the latest version of Python 2.x you have installed, try the "
"command:"
msgstr "설치한 파이썬 2.x의 최신 버전을 원하면, 다음 명령을 시도하십시오:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:702
msgid "You should find the latest version of Python 2.x starts."
msgstr "최신 버전의 파이썬 2.x가 시작되어야 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:704
msgid "If you see the following error, you do not have the launcher installed:"
msgstr "다음 에러가 표시되면, 런처가 설치되지 않은 것입니다:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:711
msgid ""
"Per-user installations of Python do not add the launcher to "
":envvar:`PATH` unless the option was selected on installation."
msgstr "사용자별 파이썬 설치는 설치 시 옵션을 선택하지 않는 한 :envvar:`PATH`\\에 런처를 추가하지 않습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:715
msgid "Virtual environments"
msgstr "가상 환경"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:719
msgid ""
"If the launcher is run with no explicit Python version specification, and"
" a virtual environment (created with the standard library :mod:`venv` "
"module or the external ``virtualenv`` tool) active, the launcher will run"
" the virtual environment's interpreter rather than the global one.  To "
"run the global interpreter, either deactivate the virtual environment, or"
" explicitly specify the global Python version."
msgstr ""
"런처가 명시적인 파이썬 버전 지정 없이 실행되고, 가상 환경(표준 라이브러리 :mod:`venv` 모듈이나 외부 "
"``virtualenv`` 도구로 생성된)이 활성화되었으면, 런처는 전역 인터프리터가 아닌 가상 환경의 인터프리터를 실행합니다. "
"전역 인터프리터를 실행하려면 가상 환경을 비활성화하거나, 전역 파이썬 버전을 명시적으로 지정하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:727
msgid "From a script"
msgstr "스크립트에서"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:729
msgid ""
"Let's create a test Python script - create a file called ``hello.py`` "
"with the following contents"
msgstr "테스트 파이썬 스크립트를 만들어 봅시다 - 다음 내용으로 ``hello.py``\\라는 파일을 만듭니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:738
msgid "From the directory in which hello.py lives, execute the command:"
msgstr "hello.py가 있는 디렉터리에서, 다음 명령을 실행합니다:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:744
msgid ""
"You should notice the version number of your latest Python 2.x "
"installation is printed.  Now try changing the first line to be:"
msgstr "최신 파이썬 2.x 설치의 버전 번호가 인쇄됨을 알 수 있습니다. 이제 첫 번째 줄을 다음과 같이 변경합니다:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:751
msgid ""
"Re-executing the command should now print the latest Python 3.x "
"information. As with the above command-line examples, you can specify a "
"more explicit version qualifier.  Assuming you have Python 2.6 installed,"
" try changing the first line to ``#! python2.6`` and you should find the "
"2.6 version information printed."
msgstr ""
"명령을 다시 실행하면 이제 최신 파이썬 3.x 정보가 인쇄됩니다. 위의 명령 줄 예제와 마찬가지로, 더 명시적인 버전 한정자를 "
"지정할 수 있습니다. 파이썬 2.6이 설치되어 있다고 가정하고, 첫 번째 줄을 ``#! python2.6``\\으로 변경하면 2.6"
" 버전 정보가 인쇄됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:757
msgid ""
"Note that unlike interactive use, a bare \"python\" will use the latest "
"version of Python 2.x that you have installed.  This is for backward "
"compatibility and for compatibility with Unix, where the command "
"``python`` typically refers to Python 2."
msgstr ""
"대화 형 사용과 달리, 장식 없는 \"python\"은 설치된 파이썬 2.x의 최신 버전을 사용합니다. 이는 이전 버전과의 호환성과"
" 유닉스와의 호환성을 위한 것입니다, 여기서 ``python`` 명령은 일반적으로 파이썬 2를 참조합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:763
msgid "From file associations"
msgstr "파일 연결에서"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:765
msgid ""
"The launcher should have been associated with Python files (i.e. ``.py``,"
" ``.pyw``, ``.pyc`` files) when it was installed.  This means that when "
"you double-click on one of these files from Windows explorer the launcher"
" will be used, and therefore you can use the same facilities described "
"above to have the script specify the version which should be used."
msgstr ""
"런처는 설치 시 파이썬 파일(즉 ``.py``, ``.pyw``, ``.pyc`` 파일)과 연결되어 있어야 합니다. 즉, 윈도우 "
"탐색기에서 이러한 파일 중 하나를 더블 클릭하면 런처가 사용되므로, 위에서 설명한 것과 같은 기능을 사용하여 스크립트에서 사용해야 "
"하는 버전을 지정할 수 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:771
msgid ""
"The key benefit of this is that a single launcher can support multiple "
"Python versions at the same time depending on the contents of the first "
"line."
msgstr "이것의 주요 이점은 첫 번째 줄의 내용에 따라 단일 런처가 동시에 여러 파이썬 버전을 지원할 수 있다는 것입니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:775
msgid "Shebang Lines"
msgstr "셔뱅 줄"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:777
msgid ""
"If the first line of a script file starts with ``#!``, it is known as a "
"\"shebang\" line.  Linux and other Unix like operating systems have "
"native support for such lines and they are commonly used on such systems "
"to indicate how a script should be executed.  This launcher allows the "
"same facilities to be used with Python scripts on Windows and the "
"examples above demonstrate their use."
msgstr ""
"스크립트 파일의 첫 번째 줄이 ``#!``\\로 시작하면 \"셔뱅(shebang)\"줄이라고 합니다. 리눅스와 기타 유닉스 류 운영"
" 체제는 이러한 줄을 기본적으로 지원하며 스크립트 실행 방법을 나타내기 위해 이러한 시스템에서 일반적으로 사용됩니다. 이 런처를 "
"사용하면 윈도우에서 파이썬 스크립트로 같은 기능을 사용할 수 있으며 위의 예제는 그 사용법을 보여줍니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:784
msgid ""
"To allow shebang lines in Python scripts to be portable between Unix and "
"Windows, this launcher supports a number of 'virtual' commands to specify"
" which interpreter to use.  The supported virtual commands are:"
msgstr ""
"파이썬 스크립트의 셔뱅 줄을 유닉스와 윈도우 간에 이식성 있도록 하기 위해, 이 런처는 사용할 인터프리터를 지정하는 여러 '가상' "
"명령을 지원합니다. 지원되는 가상 명령은 다음과 같습니다:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:788
msgid "``/usr/bin/env python``"
msgstr "``/usr/bin/env python``"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:789
msgid "``/usr/bin/python``"
msgstr "``/usr/bin/python``"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:790
msgid "``/usr/local/bin/python``"
msgstr "``/usr/local/bin/python``"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:791
msgid "``python``"
msgstr "``python``"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:793
msgid "For example, if the first line of your script starts with"
msgstr "예를 들어, 스크립트의 첫 번째 줄이 다음과 같이 시작하면"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:799
msgid ""
"The default Python will be located and used.  As many Python scripts "
"written to work on Unix will already have this line, you should find "
"these scripts can be used by the launcher without modification.  If you "
"are writing a new script on Windows which you hope will be useful on "
"Unix, you should use one of the shebang lines starting with ``/usr``."
msgstr ""
"기본 파이썬을 찾아서 사용합니다. 유닉스에서 작동하도록 작성된 많은 파이썬 스크립트에는 이미 이 줄이 있어서, 수정하지 않고도 "
"이러한 스크립트를 런처에서 사용할 수 있습니다. 윈도우에서 유닉스에서 유용할 새 스크립트를 작성하면, ``/usr``\\로 시작하는"
" 셔뱅 줄 중 하나를 사용해야 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:805
msgid ""
"Any of the above virtual commands can be suffixed with an explicit "
"version (either just the major version, or the major and minor version). "
"Furthermore the 32-bit version can be requested by adding \"-32\" after "
"the minor version. I.e. ``/usr/bin/python2.7-32`` will request usage of "
"the 32-bit python 2.7."
msgstr ""
"위의 모든 가상 명령은 명시적 버전(주 버전 만 또는 주 버전과 부 버전)으로 접미사를 붙일 수 있습니다. 또한 부 버전 뒤에 "
"\"-32\"를 추가하여 32비트 버전을 요청할 수 있습니다. 즉 ``/usr/bin/python2.7-32``\\는 32비트 "
"파이썬 2.7의 사용을 요청합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:813
msgid ""
"Beginning with python launcher 3.7 it is possible to request 64-bit "
"version by the \"-64\" suffix. Furthermore it is possible to specify a "
"major and architecture without minor (i.e. ``/usr/bin/python3-64``)."
msgstr ""
"파이썬 런처 3.7부터는 \"-64\" 접미사로 64비트 버전을 요청할 수 있습니다. 또한 부 버전 없이 주 버전과 아키텍처를 "
"지정할 수 있습니다 (즉 ``/usr/bin/python3-64``)."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:817
msgid ""
"The ``/usr/bin/env`` form of shebang line has one further special "
"property. Before looking for installed Python interpreters, this form "
"will search the executable :envvar:`PATH` for a Python executable. This "
"corresponds to the behaviour of the Unix ``env`` program, which performs "
"a :envvar:`PATH` search."
msgstr ""
"``/usr/bin/env`` 형식의 셔뱅 줄에는 또 다른 특별한 성질이 있습니다. 설치된 파이썬 인터프리터를 찾기 전에, 이 "
"형식은 파이썬 실행 파일을 :envvar:`PATH`\\에서 검색합니다. 이것은 :envvar:`PATH` 검색을 수행하는 유닉스 "
"``env`` 프로그램의 동작에 해당합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:823
msgid "Arguments in shebang lines"
msgstr "셔뱅 줄의 인자"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:825
msgid ""
"The shebang lines can also specify additional options to be passed to the"
" Python interpreter.  For example, if you have a shebang line:"
msgstr "셔뱅 줄은 또한 파이썬 인터프리터에 전달할 추가 옵션을 지정할 수 있습니다. 예를 들어, 다음과 같은 셔뱅 줄이 있으면:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:832
msgid "Then Python will be started with the ``-v`` option"
msgstr "파이썬은 ``-v`` 옵션으로 시작됩니다"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:835
msgid "Customization"
msgstr "사용자 정의"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:838
msgid "Customization via INI files"
msgstr "INI 파일을 통한 사용자 정의"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:840
msgid ""
"Two .ini files will be searched by the launcher - ``py.ini`` in the "
"current user's \"application data\" directory (i.e. the directory "
"returned by calling the Windows function ``SHGetFolderPath`` with "
"``CSIDL_LOCAL_APPDATA``) and ``py.ini`` in the same directory as the "
"launcher. The same .ini files are used for both the 'console' version of "
"the launcher (i.e. py.exe) and for the 'windows' version (i.e. pyw.exe)."
msgstr ""
"런처는 두 개의 .ini 파일을 검색합니다 - 현재 사용자의 \"application data\" 디렉터리(즉, "
"``CSIDL_LOCAL_APPDATA`` 를 사용하여 윈도우 함수 ``SHGetFolderPath`` 를 호출하여 반환된 "
"디렉터리)에 있는 ``py.ini``\\와 런처와 같은 디렉터리에 있는 ``py.ini``. 런처의 '콘솔' 버전(즉 "
"py.exe)과 '윈도우' 버전(즉 pyw.exe) 모두에 같은 .ini 파일이 사용됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:847
msgid ""
"Customization specified in the \"application directory\" will have "
"precedence over the one next to the executable, so a user, who may not "
"have write access to the .ini file next to the launcher, can override "
"commands in that global .ini file."
msgstr ""
"\"응용 프로그램 디렉터리\"에 지정된 사용자 정의가 실행 파일 옆에 있는 사용자 지정보다 우선하므로, 런처 옆에 있는 .ini "
"파일에 대한 쓰기 권한이 없는 사용자는 전역 .ini 파일에서 명령을 재정의할 수 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:852
msgid "Customizing default Python versions"
msgstr "기본 파이썬 버전 사용자 정의"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:854
msgid ""
"In some cases, a version qualifier can be included in a command to "
"dictate which version of Python will be used by the command. A version "
"qualifier starts with a major version number and can optionally be "
"followed by a period ('.') and a minor version specifier. Furthermore it "
"is possible to specify if a 32 or 64 bit implementation shall be "
"requested by adding \"-32\" or \"-64\"."
msgstr ""
"때에 따라, 버전 한정자를 명령에 포함하여 명령에서 사용할 파이썬 버전을 지정할 수 있습니다. 버전 한정자는 주 버전 번호로 "
"시작하며 선택적으로 마침표('.')와 부 버전 지정자가 올 수 있습니다. 또한 \"-32\"나 \"-64\"를 추가하여 32비트나 "
"64비트 구현을 요청할지를 지정할 수 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:860
msgid ""
"For example, a shebang line of ``#!python`` has no version qualifier, "
"while ``#!python3`` has a version qualifier which specifies only a major "
"version."
msgstr ""
"예를 들어, ``#!python``\\의 셔뱅 줄에는 버전 한정자가 없는 반면, ``#!python3``\\에는 주 버전 만 "
"지정하는 버전 한정자가 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:863
msgid ""
"If no version qualifiers are found in a command, the environment variable"
" :envvar:`PY_PYTHON` can be set to specify the default version qualifier."
" If it is not set, the default is \"3\". The variable can specify any "
"value that may be passed on the command line, such as \"3\", \"3.7\", "
"\"3.7-32\" or \"3.7-64\". (Note that the \"-64\" option is only available"
" with the launcher included with Python 3.7 or newer.)"
msgstr ""
"명령에 버전 한정자가 없으면, 환경 변수 :envvar:`PY_PYTHON`\\을 설정하여 기본 버전 한정자를 지정할 수 있습니다."
" 설정되지 않으면, 기본값은 \"3\"입니다. 변수는 \"3\", \"3.7\", \"3.7-32\" 또는 \"3.7-64\"와 "
"같이 명령 줄에서 전달할 수 있는 모든 값을 지정할 수 있습니다. (\"-64\" 옵션은 파이썬 3.7 이상에 포함된 런처에서만 "
"사용할 수 있음에 유의하십시오.)"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:870
msgid ""
"If no minor version qualifiers are found, the environment variable "
"``PY_PYTHON{major}`` (where ``{major}`` is the current major version "
"qualifier as determined above) can be set to specify the full version. If"
" no such option is found, the launcher will enumerate the installed "
"Python versions and use the latest minor release found for the major "
"version, which is likely, although not guaranteed, to be the most "
"recently installed version in that family."
msgstr ""
"부 버전 한정자가 없으면, 환경 변수 ``PY_PYTHON{major}``\\(여기서 ``{major}``\\는 위에서 결정된 현재"
" 주 버전 한정자입니다)를 설정하여 전체 버전을 지정할 수 있습니다. 그러한 옵션이 없으면, 런처는 설치된 파이썬 버전을 열거하고 "
"주 버전에 대해 발견된 최신 부 릴리스를 사용합니다. 이것은 보장되지는 않지만, 해당 제품군에서 가장 최근에 설치된 버전일 가능성이"
" 높습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:878
msgid ""
"On 64-bit Windows with both 32-bit and 64-bit implementations of the same"
" (major.minor) Python version installed, the 64-bit version will always "
"be preferred. This will be true for both 32-bit and 64-bit "
"implementations of the launcher - a 32-bit launcher will prefer to "
"execute a 64-bit Python installation of the specified version if "
"available. This is so the behavior of the launcher can be predicted "
"knowing only what versions are installed on the PC and without regard to "
"the order in which they were installed (i.e., without knowing whether a "
"32 or 64-bit version of Python and corresponding launcher was installed "
"last). As noted above, an optional \"-32\" or \"-64\" suffix can be used "
"on a version specifier to change this behaviour."
msgstr ""
"같은 (major.minor) 파이썬 버전의 32비트와 64비트 구현이 모두 설치된 64비트 윈도우에서는 항상 64비트 버전이 "
"선호됩니다. 이는 32비트와 64비트 런처 구현 모두에 해당합니다 - 32비트 런처는 가능하면 지정된 버전의 64비트 파이썬 설치를"
" 실행하는 것을 선호합니다. 따라서 런처의 동작은 PC에 설치된 버전만 알고 설치 순서와 관계없이 (즉, 32비트나 64비트 버전의"
" 파이썬과 해당 런처가 마지막에 설치되었는지 알지 못하고) 예측할 수 있습니다). 위에서 언급했듯이, 선택적 \"-32\"나 "
"\"-64\" 접미사를 버전 지정자에 사용하여 이 동작을 변경할 수 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:889
msgid "Examples:"
msgstr "예:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:891
msgid ""
"If no relevant options are set, the commands ``python`` and ``python2`` "
"will use the latest Python 2.x version installed and the command "
"``python3`` will use the latest Python 3.x installed."
msgstr ""
"관련 옵션이 설정되지 않으면, ``python``\\과 ``python2`` 명령은 설치된 최신 파이썬 2.x 버전을 사용하고 "
"``python3`` 명령은 설치된 최신 파이썬 3.x를 사용합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:895
msgid ""
"The commands ``python3.1`` and ``python2.7`` will not consult any options"
" at all as the versions are fully specified."
msgstr "``python3.1``\\과 ``python2.7`` 명령은 버전이 완전히 지정되어 있어서 옵션을 전혀 참조하지 않습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:898
msgid ""
"If ``PY_PYTHON=3``, the commands ``python`` and ``python3`` will both use"
" the latest installed Python 3 version."
msgstr ""
"``PY_PYTHON=3``\\이면, ``python``\\과 ``python3`` 명령은 모두 최신 설치된 파이썬 3 버전을 "
"사용합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:901
msgid ""
"If ``PY_PYTHON=3.1-32``, the command ``python`` will use the 32-bit "
"implementation of 3.1 whereas the command ``python3`` will use the latest"
" installed Python (PY_PYTHON was not considered at all as a major version"
" was specified.)"
msgstr ""
"``PY_PYTHON=3.1-32``\\이면, ``python`` 명령은 3.1의 32비트 구현을 사용하는 반면 "
"``python3`` 명령은 가장 최근에 설치된 파이썬을 사용합니다 (주 버전이 지정되었기 때문에 PY_PYTHON은 전혀 고려되지"
" 않았습니다)."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:906
msgid ""
"If ``PY_PYTHON=3`` and ``PY_PYTHON3=3.1``, the commands ``python`` and "
"``python3`` will both use specifically 3.1"
msgstr ""
"``PY_PYTHON=3``\\이고 ``PY_PYTHON3=3.1``\\이면, ``python``\\과 ``python3`` 명령은"
" 모두 구체적으로 3.1을 사용합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:909
msgid ""
"In addition to environment variables, the same settings can be configured"
" in the .INI file used by the launcher.  The section in the INI file is "
"called ``[defaults]`` and the key name will be the same as the "
"environment variables without the leading ``PY_`` prefix (and note that "
"the key names in the INI file are case insensitive.)  The contents of an "
"environment variable will override things specified in the INI file."
msgstr ""
"환경 변수 외에도, 런처에서 사용하는 .INI 파일에서 같은 설정을 구성할 수 있습니다. INI 파일의 섹션은 "
"``[defaults]``\\라고 하며 키 이름은 선행 ``PY_`` 접두어가 없는 환경 변수와 같습니다 (그리고 INI 파일의 키"
" 이름은 대소 문자를 구분하지 않음에 유의하십시오.) 환경 변수의 내용은 INI 파일에 지정된 것을 재정의합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:916
msgid "For example:"
msgstr "예를 들면:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:918
msgid "Setting ``PY_PYTHON=3.1`` is equivalent to the INI file containing:"
msgstr "``PY_PYTHON=3.1``\\을 설정하는 것은 다음을 포함하는 INI 파일과 동등합니다:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:925
msgid ""
"Setting ``PY_PYTHON=3`` and ``PY_PYTHON3=3.1`` is equivalent to the INI "
"file containing:"
msgstr "``PY_PYTHON=3``\\과 ``PY_PYTHON3=3.1``\\을 설정하는 것은 다음을 포함하는 INI 파일과 동등합니다:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:935
msgid "Diagnostics"
msgstr "진단"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:937
msgid ""
"If an environment variable ``PYLAUNCH_DEBUG`` is set (to any value), the "
"launcher will print diagnostic information to stderr (i.e. to the "
"console). While this information manages to be simultaneously verbose "
"*and* terse, it should allow you to see what versions of Python were "
"located, why a particular version was chosen and the exact command-line "
"used to execute the target Python."
msgstr ""
"환경 변수 ``PYLAUNCH_DEBUG``\\가 설정되면 (어떤 값이건), 런처는 진단 정보를 stderr(즉, 콘솔)에 "
"인쇄합니다. 이 정보는 동시에 상세하면서도 간결하게 관리되지만, 어떤 버전의 파이썬을 찾았는지, 특정 버전이 선택된 이유 및 대상 "
"파이썬을 실행하는 데 사용된 정확한 명령 줄을 볼 수 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:949
msgid "Finding modules"
msgstr "모듈 찾기"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:951
msgid ""
"Python usually stores its library (and thereby your site-packages folder)"
" in the installation directory.  So, if you had installed Python to "
":file:`C:\\\\Python\\\\`, the default library would reside in "
":file:`C:\\\\Python\\\\Lib\\\\` and third-party modules should be stored "
"in :file:`C:\\\\Python\\\\Lib\\\\site-packages\\\\`."
msgstr ""
"파이썬은 일반적으로 라이브러리(및 그래서 site-packages 폴더)를 설치 디렉터리에 저장합니다. 따라서, 파이썬을 "
":file:`C:\\\\Python\\\\`\\에 설치했다면 기본 라이브러리는 "
":file:`C:\\\\Python\\\\Lib\\\\`\\에 있고 제삼자 모듈은 :file:`C:\\\\Python\\\\Lib"
"\\\\site-packages\\\\`\\에 저장되어야 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:957
msgid ""
"To completely override :data:`sys.path`, create a ``._pth`` file with the"
" same name as the DLL (``python37._pth``) or the executable "
"(``python._pth``) and specify one line for each path to add to "
":data:`sys.path`. The file based on the DLL name overrides the one based "
"on the executable, which allows paths to be restricted for any program "
"loading the runtime if desired."
msgstr ""
":data:`sys.path`\\를 완전히 재정의하려면, DLL(``python37._pth``)이나 실행 "
"파일(``python._pth``)과 같은 이름으로 ``._pth`` 파일을 만들고 :data:`sys.path`\\에 추가할 "
"경로마다 한 줄씩 지정합니다. DLL 이름을 기반으로 하는 파일은 실행 파일을 기반으로 하는 파일을 재정의하므로, 원한다면 런타임을"
" 로드하는 모든 프로그램에 대해 경로를 제한 할 수 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:963
msgid ""
"When the file exists, all registry and environment variables are ignored,"
" isolated mode is enabled, and :mod:`site` is not imported unless one "
"line in the file specifies ``import site``. Blank paths and lines "
"starting with ``#`` are ignored. Each path may be absolute or relative to"
" the location of the file. Import statements other than to ``site`` are "
"not permitted, and arbitrary code cannot be specified."
msgstr ""
"파일이 존재할 때, 모든 레지스트리와 환경 변수가 무시되고, 격리 모드(isolated mode)가 활성화되고, 파일의 한 줄이 "
"``import site``\\를 지정하지 않는 한 :mod:`site`\\를 임포트 하지 않습니다. 빈 경로와 ``#``\\으로 "
"시작하는 줄은 무시됩니다. 각 경로는 파일 위치에 대해 절대적이거나 상대적일 수 있습니다. ``site`` 이외의 임포트 문은 "
"허용되지 않으며, 임의 코드를 지정할 수 없습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:970
msgid ""
"Note that ``.pth`` files (without leading underscore) will be processed "
"normally by the :mod:`site` module when ``import site`` has been "
"specified."
msgstr ""
"``import site``\\가 지정될 때, ``.pth`` 파일(선행 밑줄 없는)은 :mod:`site` 모듈에서 정상적으로 "
"처리됨에 유의하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:973
msgid ""
"When no ``._pth`` file is found, this is how :data:`sys.path` is "
"populated on Windows:"
msgstr "``._pth`` 파일이 없을 때, 윈도우에서 :data:`sys.path`\\를 채우는 방법은 다음과 같습니다:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:976
msgid ""
"An empty entry is added at the start, which corresponds to the current "
"directory."
msgstr "시작에 현재 디렉터리에 해당하는 빈 항목이 추가됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:979
msgid ""
"If the environment variable :envvar:`PYTHONPATH` exists, as described in "
":ref:`using-on-envvars`, its entries are added next.  Note that on "
"Windows, paths in this variable must be separated by semicolons, to "
"distinguish them from the colon used in drive identifiers (``C:\\`` "
"etc.)."
msgstr ""
":ref:`using-on-envvars`\\에 설명된 대로, 환경 변수 :envvar:`PYTHONPATH`\\가 존재하면, 해당"
" 항목이 다음에 추가됩니다. 윈도우에서, 이 변수의 경로는 드라이브 식별자(``C:\\`` 등)에 사용되는 콜론과 구별하기 위해 "
"세미콜론으로 구분되어야 합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:984
msgid ""
"Additional \"application paths\" can be added in the registry as subkeys "
"of "
":samp:`\\\\SOFTWARE\\\\Python\\\\PythonCore\\\\{version}\\\\PythonPath` "
"under both the ``HKEY_CURRENT_USER`` and ``HKEY_LOCAL_MACHINE`` hives.  "
"Subkeys which have semicolon-delimited path strings as their default "
"value will cause each path to be added to :data:`sys.path`.  (Note that "
"all known installers only use HKLM, so HKCU is typically empty.)"
msgstr ""
"추가 \"응용 프로그램 경로\"는 ``HKEY_CURRENT_USER``\\와 ``HKEY_LOCAL_MACHINE`` 하이브 "
"모두의 아래에 "
":samp:`\\\\SOFTWARE\\\\Python\\\\PythonCore\\\\{version}\\\\PythonPath`\\의"
" 하위 키로 레지스트리에 추가될 수 있습니다. 세미콜론으로 구분된 경로 문자열을 기본값으로 사용하는 하위 키는 각 경로가 "
":data:`sys.path`\\에 추가되도록 합니다. (알려진 모든 설치 프로그램은 HKLM 만 사용하므로, HKCU는 일반적으로"
" 비어 있음에 유의하십시오.)"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:991
msgid ""
"If the environment variable :envvar:`PYTHONHOME` is set, it is assumed as"
" \"Python Home\".  Otherwise, the path of the main Python executable is "
"used to locate a \"landmark file\" (either ``Lib\\os.py`` or "
"``pythonXY.zip``) to deduce the \"Python Home\".  If a Python home is "
"found, the relevant sub-directories added to :data:`sys.path` (``Lib``, "
"``plat-win``, etc) are based on that folder.  Otherwise, the core Python "
"path is constructed from the PythonPath stored in the registry."
msgstr ""
"환경 변수 :envvar:`PYTHONHOME`\\이 설정되면, \"파이썬 홈\"으로 간주합니다. 그렇지 않으면, 메인 파이썬 실행"
" 파일의 경로를 사용하여 \"랜드마크 파일\"(``Lib\\os.py``\\나 ``pythonXY.zip``)을 찾아 \"파이썬 "
"홈\"을 추론합니다. 파이썬 홈이 발견되면, :data:`sys.path`\\에 추가되는 관련 하위 디렉터리(``Lib``, "
"``plat-win`` 등)는 해당 폴더를 기반으로 합니다. 그렇지 않으면, 핵심 파이썬 경로가 레지스트리에 저장된 "
"PythonPath에서 구성됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:999
msgid ""
"If the Python Home cannot be located, no :envvar:`PYTHONPATH` is "
"specified in the environment, and no registry entries can be found, a "
"default path with relative entries is used (e.g. ``.\\Lib;.\\plat-win``, "
"etc)."
msgstr ""
"파이썬 홈을 찾을 수 없고, 환경에 :envvar:`PYTHONPATH`\\가 지정되어 있지 않고, 레지스트리 항목을 찾을 수 "
"없으면, 상대 항목의 기본 경로(예를 들어 ``.\\Lib;.\\plat-win`` 등)가 사용됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1003
msgid ""
"If a ``pyvenv.cfg`` file is found alongside the main executable or in the"
" directory one level above the executable, the following variations "
"apply:"
msgstr ""
"``pyvenv.cfg`` 파일이 메인 실행 파일과 함께 또는 실행 파일보다 한 수준 위의 디렉터리에서 발견되면, 다음 변형이 "
"적용됩니다:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1006
msgid ""
"If ``home`` is an absolute path and :envvar:`PYTHONHOME` is not set, this"
" path is used instead of the path to the main executable when deducing "
"the home location."
msgstr ""
"``home``\\이 절대 경로이고 :envvar:`PYTHONHOME`\\이 설정되지 않으면, 홈 위치를 추론할 때 메인 실행 "
"파일에 대한 경로 대신 이 경로가 사용됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1010
msgid "The end result of all this is:"
msgstr "이 모든 것의 최종 결과는 다음과 같습니다:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1012
msgid ""
"When running :file:`python.exe`, or any other .exe in the main Python "
"directory (either an installed version, or directly from the PCbuild "
"directory), the core path is deduced, and the core paths in the registry "
"are ignored.  Other \"application paths\" in the registry are always "
"read."
msgstr ""
":file:`python.exe` 또는 기본 파이썬 디렉터리 (설치된 버전 또는 PCbuild 디렉터리에서 직접)에서 다른 "
".exe를 실행할 때 핵심 경로가 추론되고 레지스트리의 핵심 경로가 무시됩니다. 레지스트리의 다른 \"응용 프로그램 경로\"는 항상"
" 읽습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1017
msgid ""
"When Python is hosted in another .exe (different directory, embedded via "
"COM, etc), the \"Python Home\" will not be deduced, so the core path from"
" the registry is used.  Other \"application paths\" in the registry are "
"always read."
msgstr ""
"파이썬이 다른 .exe(다른 디렉터리, COM을 통한 내장, 등)에서 호스팅 될 때, \"파이썬 홈\"이 추론되지 않아서, "
"레지스트리의 핵심 경로가 사용됩니다. 레지스트리의 다른 \"응용 프로그램 경로\"는 항상 읽힙니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1021
msgid ""
"If Python can't find its home and there are no registry value (frozen "
".exe, some very strange installation setup) you get a path with some "
"default, but relative, paths."
msgstr ""
"파이썬이 홈을 찾을 수 없고 레지스트리 값이 없으면 (고정된(frozen) .exe, 아주 이상한 설치 설정), 일부 기본 (하지만"
" 상대) 경로를 얻게 됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1025
msgid ""
"For those who want to bundle Python into their application or "
"distribution, the following advice will prevent conflicts with other "
"installations:"
msgstr "파이썬을 응용 프로그램이나 배포에 번들로 포함하려는 사용자를 위해, 다음 조언은 다른 설치와의 충돌을 방지합니다:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1028
msgid ""
"Include a ``._pth`` file alongside your executable containing the "
"directories to include. This will ignore paths listed in the registry and"
" environment variables, and also ignore :mod:`site` unless ``import "
"site`` is listed."
msgstr ""
"포함할 디렉터리가 포함된 실행 파일과 함께 ``._pth`` 파일을 포함합니다. 이것은 레지스트리와 환경 변수에 나열된 경로를 "
"무시하고, ``import site``\\가 나열되지 않는 한 :mod:`site`\\도 무시합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1033
msgid ""
"If you are loading :file:`python3.dll` or :file:`python37.dll` in your "
"own executable, explicitly call :c:func:`Py_SetPath` or (at least) "
":c:func:`Py_SetProgramName` before :c:func:`Py_Initialize`."
msgstr ""
"여러분 자신의 실행 파일에서 :file:`python3.dll`\\이나 :file:`python37.dll`\\을 로드하면, "
":c:func:`Py_Initialize` 전에 :c:func:`Py_SetPath`\\나 (적어도) "
":c:func:`Py_SetProgramName` 을 명시적으로 호출하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1037
msgid ""
"Clear and/or overwrite :envvar:`PYTHONPATH` and set :envvar:`PYTHONHOME` "
"before launching :file:`python.exe` from your application."
msgstr ""
"응용 프로그램에서 :file:`python.exe`\\를 시작하기 전에 :envvar:`PYTHONPATH`\\를 지우거나 덮어쓰고"
" :envvar:`PYTHONHOME`\\를 설정하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1040
msgid ""
"If you cannot use the previous suggestions (for example, you are a "
"distribution that allows people to run :file:`python.exe` directly), "
"ensure that the landmark file (:file:`Lib\\\\os.py`) exists in your "
"install directory. (Note that it will not be detected inside a ZIP file, "
"but a correctly named ZIP file will be detected instead.)"
msgstr ""
"이전 제안을 사용할 수 없으면 (예를 들어, 사용자가 :file:`python.exe`\\를 직접 실행할 수 있는 배포판이면), "
"랜드마크 파일(:file:`Lib\\\\os.py`)이 설치 디렉터리에 있도록 하십시오. (ZIP 파일 내에서는 감지되지 않지만, "
"대신 올바른 이름의 ZIP 파일은 감지됨에 유의하십시오.)"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1046
msgid ""
"These will ensure that the files in a system-wide installation will not "
"take precedence over the copy of the standard library bundled with your "
"application. Otherwise, your users may experience problems using your "
"application. Note that the first suggestion is the best, as the others "
"may still be susceptible to non-standard paths in the registry and user "
"site-packages."
msgstr ""
"이렇게 하면 시스템 전체 설치의 파일이 응용 프로그램과 함께 번들로 제공되는 표준 라이브러리의 복사본보다 우선하지 않습니다. 그렇지"
" 않으면, 사용자가 여러분의 응용 프로그램을 사용하는 데 문제가 발생할 수 있습니다. 다른 제안은 레지스트리의 비표준 경로와 사용자"
" site-packages에 여전히 취약할 수 있어서, 첫 번째 제안이 가장 좋음에 유의하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1055
msgid ""
"Adds ``._pth`` file support and removes ``applocal`` option from "
"``pyvenv.cfg``."
msgstr "``._pth`` 파일 지원을 추가하고 ``pyvenv.cfg``\\에서 ``applocal`` 옵션을 제거합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1057
msgid ""
"Adds ``pythonXX.zip`` as a potential landmark when directly adjacent to "
"the executable."
msgstr "실행 파일에 직접 인접할 때 잠재적인 랜드마크로 ``pythonXX.zip``\\을 추가합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1063
msgid ""
"Modules specified in the registry under ``Modules`` (not ``PythonPath``) "
"may be imported by :class:`importlib.machinery.WindowsRegistryFinder`. "
"This finder is enabled on Windows in 3.6.0 and earlier, but may need to "
"be explicitly added to :attr:`sys.meta_path` in the future."
msgstr ""
"``Modules``\\(``PythonPath``\\가 아닙니다) 아래의 레지스트리에 지정된 모듈은 "
":class:`importlib.machinery.WindowsRegistryFinder` 로 임포트 할 수 있습니다. 이 파인더는"
" 윈도우 3.6.0과 이전 버전에서 활성화되지만, 향후에는 :attr:`sys.meta_path`\\에 명시적으로 추가해야 할 수도"
" 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1069
msgid "Additional modules"
msgstr "추가 모듈"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1071
msgid ""
"Even though Python aims to be portable among all platforms, there are "
"features that are unique to Windows.  A couple of modules, both in the "
"standard library and external, and snippets exist to use these features."
msgstr ""
"파이썬이 모든 플랫폼 간에 이식성 있는 것을 목표로 하지만, 윈도우에만 고유한 기능이 있습니다. 이러한 기능을 사용하기 위한 표준 "
"라이브러리와 외부에 있는 두 개의 모듈과 스니펫(snippets)이 존재합니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1075
msgid ""
"The Windows-specific standard modules are documented in :ref:`mswin-"
"specific-services`."
msgstr "윈도우 특정 표준 모듈은 :ref:`mswin-specific-services`\\에 설명되어 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1079
msgid "PyWin32"
msgstr "PyWin32"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1081
msgid ""
"The `PyWin32 <https://pypi.org/project/pywin32>`_ module by Mark Hammond "
"is a collection of modules for advanced Windows-specific support.  This "
"includes utilities for:"
msgstr ""
"Mark Hammond의 `PyWin32 <https://pypi.org/project/pywin32>`_ 모듈은 고급 윈도우 특정"
" 지원을 위한 모듈 모음입니다. 여기에는 다음을 위한 유틸리티가 포함됩니다:"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1085
msgid ""
"`Component Object Model <https://docs.microsoft.com/en-"
"us/windows/desktop/com/component-object-model--com--portal>`_ (COM)"
msgstr ""
"`Component Object Model <https://docs.microsoft.com/en-"
"us/windows/desktop/com/component-object-model--com--portal>`_ (COM)"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1088
msgid "Win32 API calls"
msgstr "Win32 API 호출"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1089
msgid "Registry"
msgstr "레지스트리"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1090
msgid "Event log"
msgstr "이벤트 로그"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1091
msgid ""
"`Microsoft Foundation Classes <https://msdn.microsoft.com/en-"
"us/library/fe1cf721%28VS.80%29.aspx>`_ (MFC) user interfaces"
msgstr ""
"`Microsoft Foundation Classes <https://msdn.microsoft.com/en-"
"us/library/fe1cf721%28VS.80%29.aspx>`_ (MFC) 사용자 인터페이스"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1094
msgid ""
"`PythonWin <https://web.archive.org/web/20060524042422/ "
"https://www.python.org/windows/pythonwin/>`_ is a sample MFC application "
"shipped with PyWin32.  It is an embeddable IDE with a built-in debugger."
msgstr ""
"`PythonWin <https://web.archive.org/web/20060524042422/ "
"https://www.python.org/windows/pythonwin/>`_\\은 PyWin32와 함께 제공되는 샘플 MFC "
"응용 프로그램입니다. 디버거가 내장된 내장할 수 있는 IDE입니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1101
msgid "`Win32 How Do I...? <http://timgolden.me.uk/python/win32_how_do_i.html>`_"
msgstr "`Win32 How Do I...? <http://timgolden.me.uk/python/win32_how_do_i.html>`_"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1101
msgid "by Tim Golden"
msgstr "저자: Tim Golden"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1103
msgid "`Python and COM <http://www.boddie.org.uk/python/COM.html>`_"
msgstr "`Python and COM <http://www.boddie.org.uk/python/COM.html>`_"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1104
msgid "by David and Paul Boddie"
msgstr "저자: David와 Paul Boddie"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1108
msgid "cx_Freeze"
msgstr "cx_Freeze"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1110
msgid ""
"`cx_Freeze <https://anthony-tuininga.github.io/cx_Freeze/>`_ is a "
":mod:`distutils` extension (see :ref:`extending-distutils`) which wraps "
"Python scripts into executable Windows programs (:file:`{*}.exe` files)."
"  When you have done this, you can distribute your application without "
"requiring your users to install Python."
msgstr ""
"`cx_Freeze <https://anthony-tuininga.github.io/cx_Freeze/>`_\\는 파이썬 스크립트를"
" 실행 가능한 윈도우 프로그램(:file:`{*}.exe` 파일)으로 래핑하는 :mod:`distutils` 확장(:ref"
":`extending-distutils`\\를 참조하십시오)입니다. 이렇게 하면, 사용자가 파이썬을 설치할 필요 없는 응용 "
"프로그램을 배포할 수 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1118
msgid "WConio"
msgstr "WConio"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1120
msgid ""
"Since Python's advanced terminal handling layer, :mod:`curses`, is "
"restricted to Unix-like systems, there is a library exclusive to Windows "
"as well: Windows Console I/O for Python."
msgstr ""
"파이썬의 고급 터미널 처리 계층인 :mod:`curses`\\가 유닉스 계열 시스템으로 제한되기 때문에, 윈도우 전용 라이브러리도 "
"있습니다: Windows Console I/O for Python."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1124
msgid ""
"`WConio <http://newcenturycomputers.net/projects/wconio.html>`_ is a "
"wrapper for Turbo-C's :file:`CONIO.H`, used to create text user "
"interfaces."
msgstr ""
"`WConio <http://newcenturycomputers.net/projects/wconio.html>`_\\는 텍스트 "
"사용자 인터페이스를 만드는 데 사용되는 Turbo-C의 :file:`CONIO.H`\\용 래퍼입니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1130
msgid "Compiling Python on Windows"
msgstr "윈도우에서 파이썬 컴파일하기"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1132
msgid ""
"If you want to compile CPython yourself, first thing you should do is get"
" the `source <https://www.python.org/downloads/source/>`_. You can "
"download either the latest release's source or just grab a fresh "
"`checkout <https://devguide.python.org/setup/#getting-the-source-code>`_."
msgstr ""
"CPython을 직접 컴파일하려면, 먼저 `소스 "
"<https://www.python.org/downloads/source/>`_\\를 가져와야 합니다. 최신 릴리스의 소스를 "
"다운로드하거나 최신 버전을 `체크아웃 <https://devguide.python.org/setup/#getting-the-"
"source-code>`_\\할 수 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1137
msgid ""
"The source tree contains a build solution and project files for Microsoft"
" Visual Studio 2015, which is the compiler used to build the official "
"Python releases. These files are in the :file:`PCbuild` directory."
msgstr ""
"소스 트리에는 공식 파이썬 릴리스를 빌드하는 데 사용되는 컴파일러인 Microsoft Visual Studio 2015 용 빌드 "
"솔루션과 프로젝트 파일이 포함되어 있습니다. 이 파일들은 :file:`PCbuild` 디렉터리에 있습니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1141
msgid ""
"Check :file:`PCbuild/readme.txt` for general information on the build "
"process."
msgstr "빌드 프로세스에 대한 일반 정보는 :file:`PCbuild/readme.txt`\\를 확인하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1144
msgid "For extension modules, consult :ref:`building-on-windows`."
msgstr "확장 모듈에 대해서는, :ref:`building-on-windows`\\를 참조하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1151
msgid ""
"`Python + Windows + distutils + SWIG + gcc MinGW "
"<http://sebsauvage.net/python/mingw.html>`_"
msgstr ""
"`Python + Windows + distutils + SWIG + gcc MinGW "
"<http://sebsauvage.net/python/mingw.html>`_"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1149
msgid ""
"or \"Creating Python extensions in C/C++ with SWIG and compiling them "
"with MinGW gcc under Windows\" or \"Installing Python extension with "
"distutils and without Microsoft Visual C++\" by Sébastien Sauvage, 2003"
msgstr ""
"or \"Creating Python extensions in C/C++ with SWIG and compiling them "
"with MinGW gcc under Windows\" or \"Installing Python extension with "
"distutils and without Microsoft Visual C++\" by Sébastien Sauvage, 2003"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1153
msgid "`MingW -- Python extensions <http://www.mingw.org/wiki/FAQ#toc14>`_"
msgstr "`MingW -- 파이썬 확장 <http://www.mingw.org/wiki/FAQ#toc14>`_"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1157
msgid "Other Platforms"
msgstr "기타 플랫폼"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1159
msgid ""
"With ongoing development of Python, some platforms that used to be "
"supported earlier are no longer supported (due to the lack of users or "
"developers). Check :pep:`11` for details on all unsupported platforms."
msgstr ""
"파이썬의 지속적인 개발로 인해, 이전에 지원되던 일부 플랫폼은 더는 지원되지 않습니다 (사용자나 개발자 부족으로 인해). 지원되지 "
"않는 모든 플랫폼에 대한 자세한 내용은 :pep:`11`\\을 확인하십시오."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1163
msgid "`Windows CE <http://pythonce.sourceforge.net/>`_ is still supported."
msgstr "`윈도우 CE <http://pythonce.sourceforge.net/>`_\\는 계속 지원됩니다."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1164
msgid ""
"The `Cygwin <https://cygwin.com/>`_ installer offers to install the "
"Python interpreter as well (cf. `Cygwin package source <ftp://ftp.uni-"
"erlangen.de/pub/pc/gnuwin32/cygwin/mirrors/cygnus/ release/python>`_, "
"`Maintainer releases <http://www.tishler.net/jason/software/python/>`_)"
msgstr ""
"`Cygwin <https://cygwin.com/>`_ 설치 프로그램은 파이썬 인터프리터도 설치하도록 제안합니다 (참조: "
"`Cygwin package source <ftp://ftp.uni-"
"erlangen.de/pub/pc/gnuwin32/cygwin/mirrors/cygnus/ release/python>`_, "
"`Maintainer releases <http://www.tishler.net/jason/software/python/>`_)."

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/using/windows.rst:1170
msgid ""
"See `Python for Windows <https://www.python.org/downloads/windows/>`_ for"
" detailed information about platforms with pre-compiled installers."
msgstr ""
"사전 컴파일된 설치 프로그램이 있는 플랫폼에 대한 자세한 정보는 `Python for Windows "
"<https://www.python.org/downloads/windows/>`_\\를 참조하십시오."

