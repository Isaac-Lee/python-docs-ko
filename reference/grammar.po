# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-08 03:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/reference/grammar.rst:2
msgid "Full Grammar specification"
msgstr "전체 문법 규격"

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/reference/grammar.rst:4
msgid ""
"This is the full Python grammar, derived directly from the grammar used "
"to generate the CPython parser (see :source:`Grammar/python.gram`). The "
"version here omits details related to code generation and error recovery."
msgstr ""

#: /Users/flowdas/works/docs/python-docs-ko/src/Doc/reference/grammar.rst:9
#, python-format
msgid ""
"The notation is a mixture of `EBNF "
"<https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form>`_ and "
"`PEG <https://en.wikipedia.org/wiki/Parsing_expression_grammar>`_. In "
"particular, ``&`` followed by a symbol, token or parenthesized group "
"indicates a positive lookahead (i.e., is required to match but not "
"consumed), while ``!`` indicates a negative lookahead (i.e., is required "
"_not_ to match).  We use the ``|`` separator to mean PEG's \"ordered "
"choice\" (written as ``/`` in traditional PEG grammars)."
msgstr ""

#~ msgid ""
#~ "This is the full Python grammar, "
#~ "as it is read by the parser "
#~ "generator and used to parse Python "
#~ "source files:"
#~ msgstr "이것이 파서 제너레이터가 읽고, 파이썬 소스 파일을 파싱하는데 사용되는 전체 파이썬 문법 규칙입니다:"

